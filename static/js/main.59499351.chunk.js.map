{"version":3,"sources":["Components/Cluster/PrestasiQu/src/IMG/Logo.png","IMG/logo_2.png","IMG/Profile_Picture.jpg","IMG/CurriculumVitae.png","Components/Cluster/PrestasiQu/src/IMG/ICO/lock.svg","Components/Cluster/PrestasiQu/src/IMG/ICO/account.svg","serviceWorker.js","Store/Reducers/Blog.Reducer.js","Store/Reducers/About.Reducer.js","Store/Reducers/Display.Reducer.js","Components/Cluster/KasirQu/src/Store/Actions/Type.Actions.js","Components/Cluster/KasirQu/src/Store/Reducers/Auth.Reducer.js","Components/Cluster/KasirQu/src/Store/Reducers/Account.Reducer.js","Components/Cluster/KasirQu/src/Store/Reducers/Transaksi.Reducer.js","Components/Cluster/KasirQu/src/Store/Reducers/JenisBarang.Reducer.js","Components/Cluster/KasirQu/src/Store/Reducers/Barang.Reducer.js","Components/Cluster/KasirQu/src/Store/Reducers/Help.Reducer.js","Components/Cluster/KasirQu/src/Store/Reducers/Messages.Reducer.js","Components/Cluster/PrestasiQu/src/Store/Reducers/Auth.Reducer.js","Components/Cluster/PrestasiQu/src/Store/Reducers/Messages.Reducer.js","Components/Cluster/PrestasiQu/src/Store/Reducers/Biodata.Reducer.js","Components/Cluster/PrestasiQu/src/Store/Reducers/Point.Reducer.js","Components/Cluster/PrestasiQu/src/Store/Reducers/Prestasi.Reducer.js","Store/Reducers/Root.Reducer.js","Store/Actions/Type.Actions.js","Components/Cluster/PrestasiQu/src/Store/Actions/Type.Actions.js","Store/Store.js","Components/Cluster/KasirQu/src/Store/Actions/Messages.Actions.js","Components/Cluster/KasirQu/src/Store/Actions/Database.Actions.js","Components/Cluster/KasirQu/src/Store/Actions/Auth.Actions.js","Components/Cluster/PrestasiQu/src/Store/Actions/Messages.Actions.js","Components/Cluster/PrestasiQu/src/Store/Actions/Database.Actions.js","Components/Cluster/PrestasiQu/src/Store/Actions/Auth.Actions.js","Components/Cluster/KasirQu/src/MUI_theme.js","MUI_Theme_Style.js","Components/Containers/RGBColorBackground.js","Components/Containers/ChangeTheme.js","Store/Actions/Display.Action.js","Components/Layouts/Navbar.js","Components/Cluster/KasirQu/src/Components/Containers/Toggle_LightNight.js","Components/Cluster/KasirQu/src/Components/Containers/navSideNavbar.js","Components/Cluster/KasirQu/src/Components/Containers/navFlatNavbar.js","Components/Cluster/KasirQu/src/Components/Containers/Navbar.js","Components/Cluster/PrestasiQu/src/Components/Container/navbar.js","Components/Cluster/KasirQu/src/Components/Containers/Messages.js","Components/Cluster/PrestasiQu/src/Components/Container/Massages.js","Components/Containers/Blog/Introduce.js","Components/Containers/Blog/OpeningPanel.js","Store/Actions/Blog.Actions.js","Components/Containers/Blog/IntroduceProducts.js","Components/Containers/Blog/FooterPanel.js","Components/Layouts/Home.js","Components/Layouts/Blog.js","Components/Containers/About/Biodata.js","Components/Containers/About/LifePath.js","Store/Actions/About.Action.js","Components/Containers/About/Skill.js","Components/Containers/About/CurriculumVitae.js","Components/Layouts/About.js","Components/Containers/Preview.js","Components/Containers/404.js","Components/Containers/Blog/ExplanationPanel.js","Components/Layouts/Blog/Blog.Learning.js","Components/Layouts/Blog/Blog.KasirQu.js","Components/Cluster/KasirQu/src/Security/PrivateRoute.js","Components/Cluster/KasirQu/src/Components/Layouts/Account/Login.js","Components/Cluster/KasirQu/src/Components/Layouts/FirsTimeUse.js","Components/Cluster/KasirQu/src/Components/Layouts/Account/Logout.js","Components/Cluster/KasirQu/src/Components/Containers/BreadCrumbs.js","Components/Cluster/KasirQu/src/Components/Containers/Menu.js","Components/Cluster/KasirQu/src/Components/Layouts/Home.js","Components/Cluster/KasirQu/src/Store/Actions/Account.Actions.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.DetailToko.js","Components/Cluster/KasirQu/src/Store/Actions/Barang.Actions.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.AddBarangToTransaksi.js","Components/Cluster/KasirQu/src/Store/Actions/Transaksi.Actions.js","Components/Cluster/KasirQu/src/Components/Containers/Formater.js","Components/Cluster/KasirQu/src/Components/Containers/Shorting.js","Components/Cluster/KasirQu/src/Components/Containers/Page404.js","Components/Cluster/KasirQu/src/Components/Containers/GenericModals.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.ReviewPembayaran.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.Transaksi.js","Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/Transaksi.js","Components/Cluster/KasirQu/src/Components/Containers/Searching.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.TransaksiDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.ListTransaksi.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.TransaksiExport.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.Query.ListTransaksi.js","Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/SubPage/Transaksi.ExportTransaksi.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.Review.TransaksiImport.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.TransaksiImport.js","Components/Cluster/KasirQu/src/Components/Containers/FAQ.js","Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/SubPage/Transaksi.ImportTransaksi.js","Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/TransaksiImportExport.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.AddBarangToBelanja.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.ReviewBelanja.js","Components/Cluster/KasirQu/src/Components/Containers/Transaksi/Transaksi.Belanja.js","Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/Belanja.js","Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/TransaksiList.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.TabelBarang.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/Barang.js","Components/Cluster/KasirQu/src/Store/Actions/JenisBarang.Actions.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.AddJenisBarang.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.JenisBarangDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.BarangDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.BarangUpdate.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.BarangList.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.JenisBarangUpdate.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.KatagoriBarangList.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/katagoribarang.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.Review.KatagoriBarangImport.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.KatagoriBarangImport.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/SubPage/KategoriBarang.ImportKatagoriBarang.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.KatagoriBarangExport.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.KatagoriBarang.Query.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/SubPage/KategoriBarang.ExportKatagoriBarang.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/KatagoriBarangImportExport.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.AddBarang.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/KonfigurasiBarang.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.BarangExport.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.Barang.Query.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/SubPage/Barang.ExportBarang.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.Review.BarangImport.js","Components/Cluster/KasirQu/src/Components/Containers/Barang/Barang.BarangImport.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/SubPage/Barang.ImportBarang.js","Components/Cluster/KasirQu/src/Components/Layouts/Barang/BarangImportExport.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/Help.js","Components/Cluster/KasirQu/src/Components/Containers/Charting.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.IncomeReport.BarangBulanan.js","Components/Cluster/KasirQu/src/Store/Actions/Help.Actions.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/IncomeReport.BarangBulanan.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.IncomeReport.KeuanganBulanan.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/IncomeReport.KeuanganBulanan.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/IncomeReport.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.OutcomeReport.BarangBulanan.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/OutcomeReport.BarangBulanan.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.OutcomeReport.ModalBulanan.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/OutcomeReport.ModalBulanan.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/OutcomeReport.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Aset.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Query.Aset.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/Graph.Aset.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.UangMasuk.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Query.UangMasuk.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/Graph.UangMasuk.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.UangKeluar.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Query.UangKeluar.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/Graph.UangKeluar.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.UangLose.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Query.UangLose.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/Graph.UangLose.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.IntensitasTransaksi.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Query.IntensitasTransaksi.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/Graph.IntensitasTransaksi.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.IntensitasBarangTransaksi.js","Components/Cluster/KasirQu/src/Components/Containers/Help/Help.Graph.Query.IntensitasBarangTransaksi.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/SubPage/Graph.IntensitasBarangTransaksi.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/Graph.js","Components/Cluster/KasirQu/src/Components/Layouts/Help/Help.Help.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.AccountDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.AccountUpdate.js","Components/Cluster/KasirQu/src/Components/Containers/LogOutButton.js","Components/Cluster/KasirQu/src/Components/Layouts/Account/Account.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.AddAccount.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.UserDataList.js","Components/Cluster/KasirQu/src/Components/Layouts/Account/UserList.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.TokoDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.TokoUpdate.js","Components/Cluster/KasirQu/src/Components/Layouts/Account/TokoDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.History.HistoryDetail.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.History.HistoryList.js","Components/Cluster/KasirQu/src/Components/Containers/Account/Account.History.QueryHistoryList.js","Components/Cluster/KasirQu/src/Components/Layouts/Account/History.js","Components/Layouts/Blog/Blog.PrestasiQu.js","Components/Cluster/PrestasiQu/src/Components/Container/Loading.js","Components/Cluster/PrestasiQu/src/Security/PrivateRoute.js","Components/Cluster/PrestasiQu/src/Components/Layout/Account/login.js","Components/Cluster/PrestasiQu/src/Components/Layout/Account/logout.js","Components/Cluster/PrestasiQu/src/Components/Layout/Home.js","Components/Cluster/PrestasiQu/src/Store/Actions/Biodata.Actions.js","Components/Cluster/PrestasiQu/src/Components/Container/Print.js","Components/Cluster/PrestasiQu/src/Components/Container/DataNotFound.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/AccountDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataUpdate.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Biodata_Update.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/AccountUpdate.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Account_Update.js","Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataSiswaAdd.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Biodata_AddSiswa.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataGuruAdd.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Biodata_AddGuru.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataAdminAdd.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Biodata_AddAdmin.js","Components/Cluster/PrestasiQu/src/Store/Actions/Point.Actions.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PelanggaranAdd.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Pelanggaran_Add.js","Components/Cluster/PrestasiQu/src/Components/Container/Filter.js","Components/Cluster/PrestasiQu/src/Components/Container/Shorting.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataTabel.DataLengkap.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PointSubmission.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PointSubmission.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Point_AddPoint.js","Components/Cluster/PrestasiQu/src/Store/Actions/Prestasi.Actions.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/InstansiAdd.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Prestasi_AddInstansi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PrestasiSubmission.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PrestasiSubmission.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Prestasi_AddPrestasi.js","Components/Cluster/PrestasiQu/src/Components/Container/Button_Add.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataTabel.Dataadmin.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Detail_View.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataDelete.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Biodata_Delete.js","Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_admin.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataTabel.Dataguru.js","Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_guru.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/InstansiTabel.Datainstansi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/InstansiDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.InstansiDetail_View.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/InstansiUpdate.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Instansi_Update.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/InstansiDelete.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Instansi_Delete.js","Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_instansi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PelanggaranTabel.Datapelanggaran.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PelanggaranDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PelanggaranDetail_View.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PelanggaranUpdate.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Pelanggaran_Update.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PelanggaranDelete.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.Pelanggaran_Delete.js","Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_pelanggaran.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/BiodataTabel.Datasiswa.js","Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_siswa.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PointDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PointTabel.DataPoint.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PointSubmissionDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PointSubmissionDetail_View.js","Components/Cluster/PrestasiQu/src/Components/Layout/Point/Point.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PointTabel.DataUnconfirmPoint.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/AcceptingPointSubmission.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PointSubmissionAccept.js","Components/Cluster/PrestasiQu/src/Components/Layout/Point/Point.penerimaan_pengajuan_point.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PointTabel.DataConfirmPoint.js","Components/Cluster/PrestasiQu/src/Components/Layout/Point/Point.pengajuan_point.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PrestasiDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PrestasiTabel.DataPrestasi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PrestasiSubmissionDetail.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PrestasiSubmissionDetail_View.js","Components/Cluster/PrestasiQu/src/Components/Layout/Prestasi/Prestasi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PrestasiTabel.DataUnconfirmPrestasi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/AcceptingPrestasiSubmission.js","Components/Cluster/PrestasiQu/src/Components/Container/Modal/Modal.PrestasiSubmissionAccept.js","Components/Cluster/PrestasiQu/src/Components/Layout/Prestasi/Prestasi.penerimaan_pengajuan_prestasi.js","Components/Cluster/PrestasiQu/src/Components/Container/Detail/PrestasiTabel.DataConfirmPrestasi.js","Components/Cluster/PrestasiQu/src/Components/Layout/Prestasi/Prestasi.pengajuan_prestasi.js","Router.js","Components/Cluster/PrestasiQuTheme.js","App.js","index.js","Components/Cluster/KasirQu/src/IMG/logo.png","IMG/logo_1.png"],"names":["module","exports","Boolean","window","location","hostname","match","GithubRepoList","id","Title","BlogLink","Description","Tags","GithubLink","PrototypeLink","initialState","isBlogLoading","BlogPreviewURL","Blog_List","Blog_Detail","KasirQu_Useable_User_List","PrestasiQu_Useable_User_List","isAboutLoading","LifePath_List","Skill_List","LifePathData","Year","Month","Event_Title","Event_Description","SkillsData","CategoryName","SkillRelated","Name","Rating","Positive","negative","isDarkMode","localStorage","getItem","isNavbarHide","NavbarTheme","PaperTheme","DefaultTheme","PrimaryMainTheme","SecondaryMainTheme","ContrastTextTheme","TextPrimaryTheme","TextSecondaryTheme","RELOADE_PAGE","ACCOUNT_LOADED","TRANSAKSI_LOADED","BARANG_LOADED","HELP_LOADING","HELP_LOADED","token","isAuth","IpAddres","Port","WebSite","isUserLoading","User","isAccountLoading","idDetailAccount","AccountDetail","idUpdateAccount","AccountList","TokoDetail","HistoryList","idDetailHistory","HistoryDetail","ExportHistoryList","isTransaksiLoading","Transaksi","Belanja","TransaksiList","idDetailTransaksi","TransaksiDetail","TransaksiImportFile","isJenisBarangLoading","idDetailJenisBarang","JenisBarangDetail","idUpdateJenisBarang","JenisBarangList","KatagoriBarangImportFile","ExportJenisBarangList","isBarangLoading","idDetailBarang","BarangDetail","idUpdateBarang","BarangList","ExportBarangList","BarangImportFile","isHelpLoading","IncomeReportBarangList","IncomeReportKeuanganList","OutcomeReportBarangList","OutcomeReportModalList","GraphAsetList","GraphUangMasukList","GraphUangKeluarList","GraphUangLoseList","GraphIntensitasTransaksiList","GraphIntensitasBarangTransaksiList","isMessages","MessagesType","MessagesCode","Messages","isAuthenticated","isLoading","user","isMassages","MassagesType","Massages","isBiodataLoading","Biodata_ID","Biodata","Account","Update_Biodata_ID","Update_Biodata","Update_Biodata_Account_ID","Update_Biodata_Account","Data_Siswa","Data_Staff","Data_Admin","Data_All","isPelanggaranLoading","Data_Pelanggaran","Pelanggaran_ID","Pelanggaran","Pelanggaran_Update_ID","Pelanggaran_Update","Point_Point","Point_Score","Point_PointUnconfirm","Point_PointConfirm","Point_ID","Point","isPrestasiLoading","Data_Instansi","Instansi_ID","Instansi","Instansi_Update_ID","Instansi_Update","Prestasi_Prestasi","Prestasi_Score","Prestasi_PrestasiUnconfirm","Prestasi_PrestasiConfirm","Prestasi_ID","Prestasi","RootReducer","combineReducers","Generic_Blog","state","action","type","slice","payload","ListOfTags","length","newBlog_List","forEach","element","filter","item","includes","push","Detail","find","String","err","console","log","Generic_About","Generic_Display","setItem","removeItem","reload","KasirQu_Auth","newIp","newPort","newWebSite","clear","KasirQu_Account","_id","KasirQu_Transaksi","newTransaksi","Id","Barcode","NamaBarang","SatuanOptions","SatuanJual","isDecimal","Satuan","Jumlah","HargaSatuan","HargaJual","TotalBarang","HargaTotal","isEditAble","Index","NamaSatuan","splice","newBelanja","HargaModal","TotalModal","KasirQu_JenisBarang","KasirQu_Barang","KasirQu_Help","KasirQu_Messages","Status","msg","PrestasiQu_Auth","PrestasiQu_Messages","actions","PrestasiQu_Biodata","PrestasiQu_Point","PrestasiQu_Prestasi","middleware","thunk","Store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","Create_Info_Messages","StatusCode","dispatch","Create_Warning_Messages","Create_Error_Messages","AccountDataBase","UserName","Password","TokenDataBase","ExpiredDate","UsersDataBase","isActive","isKasir","isAdmin","isSuperUser","LastActive","Date","RegisterDate","ProfilePicture","BarangsDataBase","Jenis","Stok","MinBarang","Ket","BarangPic","HistorysDataBase","Tanggal","Location","Action","Change","JenisBarangsDataBase","NamaJenisBarang","Kepemilikan","TokosDataBase","NamaToko","Alamat","Kontak","Logo","TransaksisDataBase","NamaKasir","TanggalTransaksi","Tipe","DetailTransaksi","Diskon","PotonganHarga","TotalPembayaran","Error_Messages_Standardization","ErrorCode","MSG","response","status","data","Database_Log_In","a","CorrectUserName","findIndex","CorrectPassword","Data","Cek_for_Token","Token","CorrectToken","Database_Load_User","Database_Load_Account_Detail","AccountId","Database_Load_Account_List","Database_Load_Toko_Detail","Database_Load_History_List","Database_Load_History_Detail","HistoryId","Database_Load_Barang_List","Database_Load_Barang_Detail","BarangID","Database_Load_Barang_Base_on_JenisBarang","JenisBarangId","BarangBaseonJenisBarang","newBarang","Database_Load_JenisBarang_List","Database_Load_JenisBarang_Detail","Database_Load_Transaksi_List","Database_Load_Transaksi_Detail","TransaksiId","Database_Load_IncomeReport_Barang_List","TransaksiLists","element_element","DetailTransaksi_Barcode","DetailTransaksi_NamaBarang","DetailTransaksi_TotalBarang","Number","DetailTransaksi_HargaTotal","IncomeReportBarangListIndex","newIncomeReportBarangList","Database_Load_IncomeReport_Keuangan_List","date","dd","getDate","mm","getMonth","yyyy","getFullYear","i","now","next","KeuntunganHarian","DiskonHarian","PotonganHargaHarian","newIncomeReportKeuanganList","toLocaleDateString","Database_Load_OutcomeReport_Barang_List","DetailTransaksi_Jumlah","DetailTransaksi_TotalModal","OutcomeReportBarangListIndex","newOutcomeReportBarangList","JenisBarang","Database_Load_OutcomeReport_Modal_List","ModalHarian","newOutcomeReportModalList","Database_Load_Aset_List","AsetList","Database_Load_UangMasuk_List","UangMasukList","thisDay","nextDay","UangMasukHarian","ListTransaksi_TotalPembayaran","newUangMasukList","UangMasuk","Database_Load_UangKeluar_List","UangKeluarList","UangKeluarHarian","newUangKeluarList","UangKeluar","Database_Load_UangLose_List","UangLoseList","UangLoseHarian","TotalTagihan","DivinTransaksi","newUangLoseList","UangLose","Database_Load_IntensitasTransaksi_List","IntensitasTransaksiList","IntensitasTransaksiHarian","newIntensitasTransaksiList","IntensitasTransaksi","Database_Load_IntensitasBarangTransaksi_List","IntensitasBarangTransaksiList","IntensitasBarang","IndexBarang","IntensitasBarangTransaksi","newBarangTransaksiHarian","newIntensitasBarangTransaksiList","KasirQu_Database_Load_Useable_User_List","UseableUserList","map","item_item","tokenConfig","getState","SuccessMassages","nomerinduk","active","siswa","staff","admin","supervisor","superuser","profile","BiodatasDataBase","NomerInduk","Nama","Agama","TempatLahir","TanggalLahir","NomerTLP","Email","PendidikanTerakhir","InstansiPendidikanTerakhir","Profilepicture","PelanggaransDataBase","Nama_Pelanggaran","Jenis_Pelanggaran","Keterangan_Pelanggaran","Pelanggaran_Point","PointsDataBase","Nomer_Induk_Pengaju","Nama_Pengaju","Tanggal_Pengajuan","JSON","stringify","Nomer_Induk_Dituju","Nama_Dituju","Point_Awal_Dituju","Point_Pengurang","Lampiran","Keterangan","Nomer_Induk_Assessor","Nama_Assessor","Tanggal_Diterima","Point_Akhir","InstansisDataBase","Nama_Instansi","Jenis_Instansi","Keterangan_Instansi","PrestasisDataBase","Nama_Prestasi","No_Sertifikat","Katagori_Prestasi","Tingkatan_Prestasi","Prestasi_Point","Database_Load_Biodata","BiodataId","Database_Load_Biodata_Account","BiodataAccount","Database_Load_List_of_Siswa","ListofSiswa","Database_Load_List_of_Staff","ListofStaff","Database_Load_List_of_Admin","ListofAdmin","Database_Load_List_of_All","ListofAll","Database_Load_List_of_Pelanggaran","ListofPelanggaran","Database_Load_Pelanggaran_Detail","PelanggaranId","PelanggaranDetail","Database_Load_Point_List_of_Point","NomerIndukDituju","Database_Load_List_of_Unconfirm_Point","ListofUnconfirmPoint","Database_Load_List_of_Confirm_Point","ListofConfirmPoint","Database_Load_Point_Submission_Detail","PointSubmissionId","PointSubmissionDetail","Database_Load_List_of_Instansi","ListofInstansi","Database_Load_Instansi_Detail","InstansiId","InstansiDetail","Database_Load_Prestasi_List_of_Prestasi","PrestasiListofPrestasi","Database_Load_List_of_Unconfirm_Prestasi","ListofUnconfirmPrestasi","Database_Load_List_of_Confirm_Prestasi","ListofConfirmPrestasi","Database_Load_Prestasi_Submission_Detail","PrestasiSubmissionId","PrestasiSubmissionDetail","PrestasiQu_Database_Load_Useable_User_List","LogOut","initialMUIState","orange","blue","navGrey","bgcolor_lg","bgcolor_dr","hovercolor_lg","hovercolor_dr","navBackground_lg","navBackground_dr","navColor_lg","navColor_dr","rotextfield_lg","rotextfield_dr","minWidth_first","hight_full","MUI_theme_unauth_light","createMuiTheme","palette","primary","main","background","default","customTheme","loginpage","MUI_theme_unauth_dark","MUI_theme_auth_light","hover","navbar","color","navbartext","readonlytextfield","backgroundColor","menupaper","tablehead","MUI_theme_auth_dark","MUI_FullWidth","createStyles","root","marginTop","top","width","MUI_HalfWidth","MUI_VerticalMargin","marginBottom","MUI_HorizontalMargin","marginLeft","marginRight","MUI_HorizontalHalfMargin","MUI_HorizontalsmButtonMargin","MUI_st_Login_Container","borderRadius","boxShadow","paddingTop","paddingBottom","MUI_st__Container_SideNav","padding","MUI_st__Container_FlatNav","MUI_st_navSideNavbar__","height","minHeight","maxHeight","left","overflowX","position","display","flexDirection","alignItems","zIndex","transition","MUI_st_navSideNavbar_Link","maxWidth","MUI_st_navSideNavbar_BottomNavigation","minWidth","MUI_st_navFlatNavbar_logo","MUI_st_navFlatNavbar_logo_IMG","MUI_st_Menu_Paper","textAlign","MUI_st_Account_Container","MUI_st_AccountDetail_Avatar","MUI_st_AccountDetail_TextField","MUI_Initial_State","RGBColorBackground","props","DefaultBackgroundColor","BackgroundColor","viewBox","style","fill","fillOpacity","d","connect","theme","useTheme","Navbar","custom","BackgroundPaperColor","paper","BackgroundDefaultColor","PrimaryColor","SecondaryColor","secondary","TextContrastColor","contrastText","TextPrimaryColor","text","TextSecondaryColor","Color_Navbar","Color_BackgroundPaper","Color_BackgroundDefault","Color_PrimaryColor","Color_SecondaryColor","Color_TextContrastColor","Color_TextPrimaryColor","Color_TextSecondaryColor","React","useState","isNightModeChange","setState","FormOnChange","E","target","name","value","Change_Dark_Mode","Config_Dark_Mode","isNight","DayNightStyle","fontSize","cursor","FormStyle","margin","Typography","align","onClick","CloseFuntcion","error","Paper","variant","border","Container","TextField","label","onChange","e","Button","preventDefault","ThemeColor","newTheme","Change_Theme","NavbarColor","ContrastTextColor","scrollPosition","setSrollPosition","handleScroll","pageYOffset","isModalOpen","setOpen","handleOpen","handleClose","useEffect","addEventListener","passive","removeEventListener","MouseHover","document","getElementById","MouseOut","minScreenWidth","isFullNavbar","useMediaQuery","Toolbar_Menu","textDecoration","Logo_Style","Logo_Image_Style","FullNavbar","to","onMouseOver","onMouseOut","PartialNavbar","isDrawerOpen","toggleDrawer","open","event","key","drawerlist","AppBar","Toolbar","src","alt","IconButton","edge","aria-label","Drawer","anchor","onClose","Height","Modal","overflow","ToggleLightNight","setChecked","FormControl","component","FormControlLabel","control","Switch","checked","prev","toggleDarkMode","labelPlacement","NavSideNavbar","st_nav","st_btnnav","Link","href","underline","BottomNavigation","showLabels","BottomNavigationAction","icon","logo","className","NavFlatNavbar","List","ListItem","button","ListItemIcon","ListItemText","Divider","MinWindowWidth","this","auth","data-toggle","data-target","aria-controls","aria-expanded","Component","handleClick","isSnackbarOpen","reason","Clean_Messages","messages","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","elevation","successalerts","role","data-dismiss","aria-hidden","warningalerts","dangeralerts","Object","keys","Massage","Introduce","gsap","registerPlugin","ScrollTrigger","AnimatedId","TextclassName","querySelector","fromTo","opacity","y","scrollTrigger","trigger","toggleActions","duration","PaperStyle","TextAligin","TextVariant","TextStyle","SVG","SVGViewBox","SVGStyle","AditionalSVGStyle","SVGColor","SVGFill","SVGd","OpeningPanel","IdforGSAP","PrimaryTextColor","SecondaryTextColor","ContainerStyle","AditionalContainerStyle","AditionalPaperStyle","UnUsualContent","TitleAlign","TitleStyle","AditionalTitleStyle","TitleLink","DescriptionAlign","DescriptionStyle","AditionalDescriptionStyle","Redirect_to_Blog_Preview","URL","Filter_Blog_Base_on_Tags","Get_Blog_Detail","BlogId","MyLatestWorkListNumber","RedirectTo","ChangeLatestWorkList","Increament","ListBlog","Grid","container","direction","justify","rel","inputUrl","ease","x","onComplete","FooterPanel","start","Home","About","isComponentMount","BlogOrder","SelectedList","Blog_GSAP","Tags_GSAP","scale","stagger","amount","TagLists","sort","ToggleButtonGroup","exclusive","newOrder","ToggleButton","transform","index","ref","reference","paddingRight","paddingLeft","index_index","Chip","ButtonId","Restart_Selected_List","Tag","TagSelected","Change_Selected_List","BiodataBackgrondColor","Avatar","Tooltip","title","TransitionComponent","Fade","TransitionProps","timeout","LifePath_GSAP","Active_TimeLine","config","nullTargetWarn","utils","toArray","panel","scrub","snap","pin","onToggle","self","MonthPathData","LifePathNav","Scroll_To_Component","pxFromTop","scrollTo","behavior","scrollIntoView","ActiveYears","Scroll_To_Active_Years","inc","TargetList","NearestTarget","reduce","curr","Math","abs","textShadow","Timeline","month_item","month_index","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","item_month_event","index_month_event","Other","MajorSkill_GSAP","MinorSkill_GSAP","refresh","item_skill","index_skill","item_skill_related","index_skill_related","readOnly","size","max","CurriculumVitae","Cv","Tabsvalue","setTabsValue","TapData","taplabel","TapPanel","Tabs","newValue","indicatorColor","textColor","scrollButtons","centered","tapdata","Tab","isPause","Destination","progress","setProgress","Responses","timer","setInterval","prevProgress","clearInterval","PauseLoading","PauseCondition","QuestionTypography","AnswerTypography","ReadMeKasirQu","Table","TableHead","TableRow","TableCell","TableBody","ReadMePrestasiQu","Box","mr","LinearProgress","round","PageNotFound","history","back","ket","ExplanationPanel","ReverstRow","ReverstColumn","ContentImage","ContentICO","ShowData","GiTicTacToe","GiCardJoker","GrGroup","IoIosPricetags","GoGraph","GrServers","MdImportExport","GrHistory","SecurityType","rest","render","Login","username","password","isShowPassword","firsttimeuse_clickcounter","isClient","IpAddress","onSubmit","LogIn","onClickShowPassword","CheckBox_OnChange","onClickFirstTimeUse","LoginPageTheme","st_container","st_textfield","st_button","gutterBottom","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","labelWidth","FormGroup","row","Checkbox","inputProps","minLength","maxLength","pattern","FormHelperText","inputMode","message","withTheme","FirsTimeUse","ConfirmPassword","Cupon","activeStep","cupon","Toko","First_Time_Use","File_OnChange","files","onClickCancel","handleNext","handleBack","handleReset","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","required","helperText","accept","getStepContent","disabled","UserData","TokoData","Logout","redirectstatus","setTimeout","BreadCrumbs","Breadcrumbs","maxItems","breadcrumbs","breadcrumb","link","Menu","st_paper","menu","menuheader","Collapse","in","unmountOnExit","disablePadding","spacing","xs","menuitems","menuitem","get_AccountId_Detail","UserID","get_AccountDetail","get_AccountId_Update","get_TokoDetail","DetailToko","today","Gridstyle","Paperstyle","get_BarangId_Detail","get_BarangDetail","Load_Barang_List","AddBarangToTransaksi","BarangonChange","newNamaBarang","BarcodeonChange","newBarcode","Data_Barang","Add_Barang_To_Transaksi","barang","data_barang","Autocomplete","freeSolo","disableClearable","options","b","getOptionLabel","option","groupBy","inputValue","onInputChange","renderInput","params","InputProps","Barang","ConvertInttoMoney","parseInt","toFixed","replace","ConvertMoneytoInt","StringData","MoneyinInt","Short_Column_INT","TableName","ColumnNumb","rows","switching","shouldSwitch","dir","switchcount","table","getElementsByTagName","innerHTML","parentNode","insertBefore","Short_Column_STR","toLowerCase","Short_Column_Money","Short_Column_Date","HalamanTidakDitemukan","DataTidakDitemukan","GenericModals","modalsize","classes","makeStyles","uncontrollsize","shadows","useStyles","header","massages","massagestype","Alert","body","footer","Buttontype","Buttondisabled","Buttonvariant","Buttonstyle","Buttoncolor","Buttonsize","ButtononClickevent","ButtononClickeven","Buttonlabel","ReviewPembayaran","UangBayar","Form_OnSubmit","authdata","Transaksi_Transaksi","Form_OnChange","OriginValue","st_tablehead","cur","stickyHeader","ButtonShortINT","ButtonShortSTR","ButtonShortMoney","ConverNumberToMoneyFormat","Auth","Total","TransaksiTransaksi","TotalHarga","isEditingOn","JumlahBaru","SatuanBaru","onEditChange","onKeyPress","keyCode","EditingDone","Editingcancel","prevProps","transaksis","transaksi","newSatuanBaru","satuanoptions","NamaSatuan_SatuanBaru","MinBarang_SatuanBaru","HargaJual_SatuanBaru","Change_Transaksi_Detail","Clear_A_Barang_From_Transaksi","Clear_Barang_In_Transaksi","TransaksiData","CancelAllBarang","EditRow","CancelBarang","shrink","Select","native","onKeyDown","SUMHargaTotal","TableSearching","width_of_bar","st_searchbar","hidesearch","td","toUpperCase","tr","tablename","tdnumber","textContent","innerText","indexOf","startAdornment","advancesearch","Accordion","AccordionSummary","accordionsummary","AccordionDetails","accordiondetails","ListSearching","li","ulname","ListTransaksi","get_TransaksiDetail","toLocaleString","TransaksiID","DisableLoad","Load_Transaksi_List","get_TransaksiId_Detail","ButtonShortDate","onClick_get_TransaksiId_Detail","TransaksiExport","ExportTransaksiList","Export_Transaksi","ListTransaksiQuery","isAllData","isAllDate","DateMin","DateMax","DiskonMin","DiskonMax","PotonganHargaMin","PotonganHargaMax","TotalTransaksiMin","TotalTransaksiMax","Load_Query_Transaksi_List","st_halftextfield","InputLabelProps","ExportTransaksi","ReviewTransaksiImport","FileData","Confirm","isProblemInData","Import_Transaksi","FirstSheet","values","parse","FirstFileData","FileDataKeys","isDataCorrect","DataKeys","DataKeys_NamaKasir","DataKeys_Tipe","DataKeys_DetailTransaksi","DataKeys_TotalPembayaran","CheckisDataCorrect","itemitem","indexindex","TransaksiImport","MaxFileSize","ExcelData","Cek_Import_Transaksi","reader","fileData","result","wb","XLSX","read","SheetNames","sheetName","rowObj","sheet_to_row_object_array","Sheets","rowString","FileReader","onload","excelToJson","bind","readAsBinaryString","filesLimit","showPreviewsInDropzone","showFileNames","maxFileSize","acceptedFiles","dropzoneText","loadFileXLSX","FAQ","faqlist","titlevariant","titlealign","expandIcon","AccordionSummaryTypography","AccordionDetailsTypography","ImportTransaksi","ListFAQ","TransaksiImportExport","setValue","AddBarangToBelanja","belanja","Add_Barang_To_Belanja","ReviewBelanja","Transaksi_Belanja","TransaksiBelanja","belanjas","Change_Belanja_Detail","Clear_A_Barang_From_Belanja","Clear_Barang_In_Belanja","TabelBarang","get_JenisBarangDetail","JenisBarangID","Load_JenisBarang_List","AddJenisBarang","Add_JenisBarang","DefaultUrl","BarangUpdate","OriginalSatuanJual","NamaSatuanBaru","MinBarangBaru","HargaJualBaru","updatedata","Update_Barang","satuanjual","obj","datasatuanjual","AddSatuanJual","UpdateData","LoadBarangListBaseOnJenis","Load_Barang_List_Base_On_Jenis","get_BarangId_Update","Delete_a_Barang","DeleteButton","onClick_get_Delete_a_Barang","onClick_get_BarangId_Detail","onClick_get_BarangId_Update","JenisID","JenisBarangUpdate","Update_JenisBarang","KatagoriBarangList","get_JenisBarangId_Detail","get_JenisBarangId_Update","Delete_a_JenisBarang","onClick_get_Delete_a_JenisBarang","onClick_get_JenisBarangId_Detail","onClick_get_JenisBarangId_Update","KatagoriBarang","ReviewKatagoriBarangImport","Import_KatagoriBarang","JenisBarangList_NamaJenisBarang","ListKepemilikan","isDataAlreadyExist","newData","ListofData","listofdata","toString","toLocaleLowerCase","isDataWrong","ListOfCorrectData","listofcorrectdata","NamaJenisBarangIndex","datakeys","KepemilikanIndex","ImportKatagoriBarang","Cek_Import_KatagoriBarang","KatagoriBarangExport","Export_KatagoriBarang","QueryKatagoriBarang","Load_Export_Query_KatagoriBarang","JenisBarangOptions","multiple","newJenisBarang","renderTags","tagValue","getTagProps","placeholder","Query","ExportKatagoriBarang","KatagoriBarangImportExport","AddBarang","Add_Barang","KonfigurasiBarang","BarangExport","Export_Barang","QueryBarang","StokMin","StokMax","HargaModalMin","HargaModalMax","HargaJualMin","HargaJualMax","Load_Export_Query_Barang","BarangOptions","ExportBarang","ReviewBarangImport","Import_Barang","BarangList_Barcode","BarangList_Name","DataKeys_Barcode","DataKeys_Name","DataKeys_Jenis","BarangImport","Cek_Import_Barang","ImportBarang","BarangImportExport","Help","ListItems","ListLink","TypographyText","TypographyStyle","TypographyVariant","Chart","require","Charting","createChart","isRedy","randomcolor","datasetsdata","datasetsbackgroundColor","newrandomcolor","RandomColor","node","labels","datasets","datasetslabel","borderColor","datasetsborderColor","borderWidth","datasetsborderWidth","floor","random","ChartOnCanvas","canvasstyle","BulananBarangReport","Load_IncomeReport_Barang_List","ModalBarang","graphlabels","graphdatasetsdata","IncomeReportBarangBulanan","KeuanganBulanan","Load_IncomeReport_Keuangan_List","TotalDiskon","TotalPotongan","TotalKeuntungan","graphdatasetsdata_1","graphdatasetsdata_2","IncomeReportKeuanganBulanan","IncomeReport","BarangBulanan","Load_OutcomeReport_Barang_List","TotalTotalModal","OutcomeReportBarangBulanan","ModalBulanan","Load_OutcomeReport_Modal_List","OutcomeReportModalBulanan","OutcomeReport","AsetGraph","Load_Graph_Aset_List","TotalStok","QueryAset","Load_Query_Graph_Aset_List","GraphAset","UangMasukGraph","Load_Graph_UangMasuk_List","TotalUangMasuk","QueryUangMasuk","GrafikView","handleRadioChange","Load_Query_Graph_UangMasuk_List","FormLabel","RadioGroup","Radio","UangKeluarGraph","Load_Graph_UangKeluar_List","TotalUangKeluar","QueryUangKeluar","Load_Query_Graph_UangKeluar_List","UangLoseGraph","Load_Graph_UangLose_List","TotalUangLose","PotonganMin","PotonganMax","Load_Query_Graph_UangLose_List","IntensitasTransaksiGraph","Load_Graph_IntensitasTransaksi_List","TotalIntensitasTransaksi","QueryIntensitasTransaksi","TotalPembayaranMin","TotalPembayaranMax","Load_Query_Graph_IntensitasTransaksi_List","IntensitasBarangTransaksiGraph","Load_Graph_IntensitasBarangTransaksi_List","Dataset","Error","DataGraph","GraphLabels","GraphData","Dataset_Tanggal","Dataset_IntensitasBarangTransaksi","j","ExistBarangList","Dataset_Barcode","InedexBarang","IntensitasBarangTransaksi_IntensitasBarangTransaksi","newGraphData_data","k","newColor","newGraphData","l","assign","QueryIntensitasBarangTransaksi","Load_Query_Graph_IntensitasBarangTransaksi_List","Graph","KasirQuTextAdjustButton","AdjustTextSize","AdditionalSize","txt","AdjustId","getComputedStyle","getPropertyValue","currentSize","parseFloat","KasirQuCreateList","ListData","disableTypography","PrimaryText","SecondaryText","NonTextContent","KasirQuHelp_TingkatanAkun","KasirQuHelp_PerbedaanTingkatanAkun","Bagian","Actions","Kasir","Admin","SuperUser","item_Actions","index_Actions","KasirQuHelp_TambahUser","KasirQuHelp_UpdateUser","KasirQuHelp_DeleteUser","KasirQuHelp_UpdateToko","KasirQuHelp_History","KasirQuHelp_IncomeReport","KasirQuHelp_OutcomeReport","KasirQuHelp_Graph","KasirQuHelp_BarangList","KasirQuHelp_Barang","KasirQuHelp_SatuanJualBarang","KasirQuHelp_JenisBarang","KasirQuHelp_Transaksi","KasirQuHelp_Belanja","KasirQuHelp_Stok","KasirQuHelp_TransaksiDetail","KasirQuHelp_ImportExport","KasirQuHelp_LightDark","KasirQuHelp_PanduanPenggunaan","KasirQuHelp_PanduanTampilan","KasirQuHelp_PanduanMenu","KasirQuHelp_FirstTimeUse","KasirQuHelp_Login","st_switch","AccountUpdate","ChangePassword","Update_Account","AccountID","LogOutButton","onClick_get_AccountId_Update","AddAccount","addaccountdata","Add_Account","AddAccountData","UserDataList","Load_Account_List","Delete_an_Account","onClick_get_Delete_an_Account","onClick_get_AccountId_Detail","UserList","TokoUpdate","Update_Toko","get_HistoryDetail","Detail_Change","DataChange","HistoryID","Export_History","Load_History_List","get_HistoryId_Detail","onClick_get_HistoryId_Detail","QueryHistoryList","Load_Export_Query_History","newLocation","newAction","History","GrCalculator","loading","Loading","isShow","AccountSVG","LockSVG","Button_DetailView","BiodataID","Button_UpdateBiodata","Button_UpdateBiodataAccount","Print","DataNotFound","BiodataDetail","biodata","LoadBiodata","LoadBiodataAccount","last_login","BiodataUpdateModal","UpdateBiodata","LoadBiodataUpdate","listdata","tabIndex","aria-labelledby","BiodataUpdate","AccountUpdateModal","changepassword","password1","password2","UpdateBiodataAccount","LoadBiodataAccountUpdate","ButtonUpdateBiodata","ButtonUpdateBiodataAccount","BiodataSiswaAdd","CreateBiodataasSiswa","BiodataAddSiswaModal","BiodataGuruAdd","CreateBiodataasStaff","BiodataAddGuruModal","BiodataAdminAdd","CreateBiodataasAdmin","BiodataAddAdminModal","LoadListofPelanggaran","Button_PointDetailView","PointID","PelanggaranAdd","CreatePelanggaran","point","PelanggaranAddModal","Filter","parcel","BiodataDataLengkap","LoadListofAll","prorpsaction","scope","proptype","datasiswa","ButtonSubmission","PointSubmission","pointdata","PointSubmit","UserNomerInduk","TargetBiodataID","PointAddModal","LoadListofInstansi","Button_PrestasiDetailView","PrestasiID","InstansiAdd","CreateInstansi","prestasi","InstansiAddModal","PrestasiSubmission","prestasidata","PrestasiSubmit","pestasi","PrestasiSubmissionModal","PrestasiAddModal","ButtonAddSiswa","ButtonAddGuru","ButtonAddAdmin","ButtonAddPelanggaran","ButtonAddPoint","ButtonAddInstansi","ButtonAddPrestasi","BiodataTableDataAdmin","LoadListofAdmin","ButtonDetailView","ViewDetailModal","BiodataDelete","DeleteBiodata","Delete_Biodata","BiodataDeleteModal","DataAdmin","BiodataTableDataGuru","LoadListofStaff","DataGuru","InstansiTableDataInstansi","InstansiID","Button_Instansi_DetailView","Button_UpdateInstansi","LoadInstansiDetail","InstansiDetailViewModal","InstansiUpdate","UpdateInstansi","LoadInstansiUpdate","InstansiUpdateModal","InstansiDelete","DeleteInstansi","Delete_Instansi","InstansiDeleteModal","DataInstansi","PelanggaranTabelDataPelanggaran","PelanggaranID","Button_Pelanggaran_DetailView","Button_UpdatePelanggaran","PelanggaraDetail","LoadPelanggaranDetail","PelanggaranDetailViewModal","PelanggaranUpdate","UpdatePelanggaran","LoadPelanggaranUpdate","PelanggaranUpdateModal","PelanggaranDelete","DeletePelanggaran","Delete_Pelanggaran","PelanggaranDeleteModal","DataPelanggaran","BiodataTableDataSiswa","LoadListofSiswa","DataSiswa","PointDetail","GetPointDetail","PointTabelDataPoint","LoadPointListofPoint","ID","ButtonPointDetailView","LoadPointSubmissionDetail","PointSubmissionID","PointSubmissionDetailViewModal","PointTabelDataUnconfirmPoint","LoadListofUnconfirmPoint","ConfirmingPoint","ConfirmAction","PointAcception","ActionOption","UserNI","AcceptionAction","FormData","append","PointSubmissionAcceptModal","AcceptingPointSubmission","PointPenerimaan","PointTabelDataConfirmPoint","LoadListofConfirmPoint","PointPengajuan","isUnconfirmTableOpen","isConfirmTableOpen","stateName","stateValue","OpenTableOrNot","PrestasiDetail","GetPrestasiDetail","PrestasiTabelDataPrestasi","LoadPrestasiListofPrestasi","ButtonPrestasiDetailView","LoadPrestasiSubmissionDetail","PrestasiSubmissionID","PrestasiSubmissionDetailViewModal","PrestasiTabelDataUnconfirmPrestasi","LoadListofUnconfirmPrestasi","ConfirmingPrestasi","AcceptingPrestasiSubmission","PrestasiAcception","PrestasiSubmissionAcceptModal","PrestasiPenerimaan","PrestasiTabelDataConfirmPrestasi","LoadListofConfirmPrestasi","PrestasiPengajuan","BaseRouter","exact","path","Blog","Preview","BlogLearning","BlogKasirQu","KasirQu_Home","KasirQu_Belanja","KasirQu_TransaksiList","KasirQu_TransaksiImportExport","KasirQu_KatagoriBarang","KasirQu_KonfigurasiBarang","KasirQu_KatagoriBarangImportExport","KasirQu_BarangImportExport","KasirQu_IncomeReport","KasirQu_OutcomeReport","KasirQu_Graph","KasirQu_UserList","KasirQu_TokoDetail","KasirQu_History","KasirQu_FirsTimeUse","KasirQu_Login","KasirQu_Logout","BlogPrestasiQu","PrestasiQuHome","PrestasiQuBiodata","PrestasiQuDataSiswa","PrestasiQuDataGuru","PrestasiQuDataAdmin","PrestasiQuDataInstansi","PrestasiQuDataPelanggaran","PrestasiQuPrestasi","PrestasiQuPrestasiPengajuan","PrestasiQuPrestasiPenerimaan","PrestasiQuPoint","PrestasiQuPointPengajuan","PrestasiQuPointPenerimaan","PrestasiQuLogin","PrestasiQuLogout","PrestasiQuThemeConfig","lazy","PrestasiQuTheme","children","fallback","LocationURL","ChangeLocationURL","URLLocation","err_err","LightTheme","DarkTheme","KasirQuisDarkMode","ThemeProvider","CssBaseline","app","store","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,wCCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,8MCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0DCNAC,EAAiB,CACnB,CACIC,GAAI,IACJC,MAAO,WACPC,SAAU,sBACVC,YACI,uRAEJC,KAAM,CAAC,SAAU,oBACjBC,WAAY,uCACZC,cAAe,IAEnB,CACIN,GAAI,IACJC,MAAO,aACPC,SAAU,wBACVC,YACI,2UAEJC,KAAM,CAAC,SAAU,aAAc,SAAU,wBAAyB,MAAO,QAAS,aAClFC,WAAY,yCACZC,cAAe,4BAEnB,CACIN,GAAI,IACJC,MAAO,UACPC,SAAU,qBACVC,YACI,qGAEJC,KAAM,CAAC,aAAc,aAAc,QAAS,QAAS,eACrDC,WAAY,sCACZC,cAAe,0BAIjBC,EAAe,CACjBC,eAAe,EACfC,eAAgB,KAChBC,UAAW,GACXC,YAAa,KACbC,0BAA2B,GAC3BC,6BAA8B,IC/C5BN,EAAe,CACjBO,gBAAgB,EAChBC,cAAe,GACfC,WAAY,IAGVC,EAAe,CACjB,CACIjB,GAAI,EACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CACI,CACIC,YAAa,OACbC,kBAAmB,oDAKnC,CACIrB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,EACJkB,KAAM,KAEV,CACIlB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,EACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,GACA,GACA,CACI,CACIC,YAAa,mCACbC,kBAAmB,0EAG3B,GACA,GACA,GACA,GACA,KAGR,CACIrB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,EACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,GACA,CACI,CACIC,YAAa,mCACbC,kBAAmB,gFAG3B,CACI,CACID,YAAa,oCACbC,kBAAmB,sEAG3B,GACA,GACA,GACA,GACA,KAGR,CACIrB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,GACA,CACI,CACIC,YAAa,oCACbC,kBAAmB,wEAG3B,CACI,CACID,YAAa,6BACbC,kBAAmB,8CAG3B,GACA,GACA,GACA,GACA,KAGR,CACIrB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,GACA,CACI,CACIC,YAAa,kBACbC,kBAAmB,kEAG3B,GACA,GACA,GACA,GACA,GACA,KAGR,CACIrB,GAAI,GACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,CACI,CACIC,YAAa,6BACbC,kBAAmB,sDAG3B,GACA,GACA,CACI,CACID,YAAa,4BACbC,kBAAmB,+EAG3B,GACA,GACA,GACA,KAGR,CACIrB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,MAEV,CACIlB,GAAI,GACJkB,KAAM,KACNC,MAAO,CACH,CACI,CACIC,YAAa,8BACbC,kBAAmB,iGAG3B,GACA,GACA,GACA,GACA,CACI,CACID,YAAa,+BACbC,kBAAmB,kGAG3B,CACI,CACID,YAAa,sCACbC,kBAAmB,mGAG3B,GACA,GACA,CACI,CACID,YAAa,uCACbC,kBAAmB,oGAG3B,GACA,KAGR,CACIrB,GAAI,GACJkB,KAAM,KACNC,MAAO,CACH,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CACI,CACIC,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","file":"static/js/main.59499351.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.ed4edc3a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_2.7a93a18d.png\";","module.exports = __webpack_public_path__ + \"static/media/Profile_Picture.81438070.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CurriculumVitae.b56b8710.png\";","module.exports = __webpack_public_path__ + \"static/media/lock.466a2f2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/account.5d4d07b5.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    BLOG_LOADING,\r\n    BLOG_LOADED,\r\n    GET_NEWEST_BLOG_LIST,\r\n    Go_To_Blog_Preview,\r\n    GET_BLOG_LIST,\r\n    GET_FILTERED_BLOG_LIST,\r\n    GET_BLOG_DETAIL,\r\n    USEABLE_KASIRQU_USER_LIST,\r\n    USEABLE_PRESTASIQU_USER_LIST,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst GithubRepoList = [\r\n    {\r\n        id: '1',\r\n        Title: 'Learning',\r\n        BlogLink: '/blog/blog/learning',\r\n        Description: (\r\n            'This repository contain many idea to training my skill in coding. This repository published because i think it might interesting for other. The idea it self come from many sources\\n This repository contain many topic so i will give an introduce some of them in this REDME file'\r\n        ),\r\n        Tags: ['python', 'machine-learning'],\r\n        GithubLink: 'https://github.com/hudhanst/learning',\r\n        PrototypeLink: '',\r\n    },\r\n    {\r\n        id: '2',\r\n        Title: 'PrestasiQu',\r\n        BlogLink: '/blog/blog/prestasiqu',\r\n        Description: (\r\n            'an university project, a main task is to store an achivment or punishment of student so a school orginize when needed.\\n the main goal is to recreate an exist project using more moderent fermwork/ technology, the main project done with native php, js, html and css(bootrap) and run in XAMPP.The original file also included here.'\r\n        ),\r\n        Tags: ['python', 'javascript', 'django', 'django-rest-framework', 'sql', 'react', 'bootstrap'],\r\n        GithubLink: 'https://github.com/hudhanst/PrestasiQu',\r\n        PrototypeLink: '/blog/preview/prestasiqu',\r\n    },\r\n    {\r\n        id: '3',\r\n        Title: 'KasirQu',\r\n        BlogLink: '/blog/blog/kasirqu',\r\n        Description: (\r\n            'Simple Cashier App Use for storing data, in and out. Also give a report about what happen in apps,'\r\n        ),\r\n        Tags: ['javascript', 'express.js', 'nosql', 'react', 'material-ui'],\r\n        GithubLink: 'https://github.com/hudhanst/KasirQu',\r\n        PrototypeLink: '/blog/preview/kasirqu',\r\n    },\r\n]\r\n\r\nconst initialState = {\r\n    isBlogLoading: false,\r\n    BlogPreviewURL: null,\r\n    Blog_List: [],\r\n    Blog_Detail: null,\r\n    KasirQu_Useable_User_List: [],\r\n    PrestasiQu_Useable_User_List: [],\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    try {\r\n        switch (action.type) {\r\n            case BLOG_LOADING:\r\n                return {\r\n                    ...state,\r\n                    isBlogLoading: true,\r\n                }\r\n            case BLOG_LOADED:\r\n                return {\r\n                    ...state,\r\n                    isBlogLoading: false,\r\n                }\r\n            case GET_NEWEST_BLOG_LIST:\r\n                return {\r\n                    ...state,\r\n                    Blog_List: GithubRepoList.slice(0, 3)\r\n                }\r\n            case Go_To_Blog_Preview:\r\n                return {\r\n                    ...state,\r\n                    BlogPreviewURL: action.payload\r\n                }\r\n            case GET_BLOG_LIST:\r\n                return {\r\n                    ...state,\r\n                    Blog_List: GithubRepoList\r\n                }\r\n            case GET_FILTERED_BLOG_LIST:\r\n                const ListOfTags = action.payload\r\n                const Blog_List = GithubRepoList\r\n                if (ListOfTags.length > 0) {\r\n                    const newBlog_List = []\r\n                    Blog_List.forEach(element => {\r\n                        const Blog_List_Tags = element.Tags\r\n                        const isTagCorrect = Blog_List_Tags.filter(item => ListOfTags.includes(item))\r\n                        if (isTagCorrect.length === ListOfTags.length) {\r\n                            newBlog_List.push(element)\r\n                        }\r\n                    })\r\n                    state.Blog_List = newBlog_List\r\n                } else {\r\n                    state.Blog_List = Blog_List\r\n                }\r\n                return {\r\n                    ...state,\r\n                }\r\n            case GET_BLOG_DETAIL:\r\n                const Detail = GithubRepoList.find((item) => item.id === String(action.payload))\r\n                return {\r\n                    ...state,\r\n                    Blog_Detail: Detail\r\n                }\r\n            case USEABLE_KASIRQU_USER_LIST:\r\n                return {\r\n                    ...state,\r\n                    KasirQu_Useable_User_List: action.payload,\r\n                }\r\n            case USEABLE_PRESTASIQU_USER_LIST:\r\n                return {\r\n                    ...state,\r\n                    PrestasiQu_Useable_User_List: action.payload,\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: err', err)\r\n    }\r\n}","import {\r\n    ABOUT_LOADING,\r\n    ABOUT_LOADED,\r\n    GET_ABOUT_LIFEPATH_LIST,\r\n    GET_ABOUT_SKILL_LIST,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isAboutLoading: false,\r\n    LifePath_List: [],\r\n    Skill_List: [],\r\n}\r\n\r\nconst LifePathData = [\r\n    {\r\n        id: 0,\r\n        Year: 1997,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Born',\r\n                    Event_Description: 'A month Khairul Hudha Nasution born in Bekasi'\r\n                },\r\n            ],\r\n        ]\r\n    },\r\n    {\r\n        id: 1,\r\n        Year: 1998,\r\n    },\r\n    {\r\n        id: 2,\r\n        Year: 1999,\r\n    },\r\n    {\r\n        id: 3,\r\n        Year: 2000,\r\n    },\r\n    {\r\n        id: 4,\r\n        Year: 2001,\r\n    },\r\n    {\r\n        id: 5,\r\n        Year: 2002,\r\n    },\r\n    {\r\n        id: 6,\r\n        Year: 2003,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Start Study in Elementary School',\r\n                    Event_Description: 'Start Study in Elementary School, SDN Sepanjang Jaya VIII for 6 years'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        id: 7,\r\n        Year: 2004,\r\n    },\r\n    {\r\n        id: 8,\r\n        Year: 2005,\r\n    },\r\n    {\r\n        id: 9,\r\n        Year: 2006,\r\n    },\r\n    {\r\n        id: 10,\r\n        Year: 2007,\r\n    },\r\n    {\r\n        id: 11,\r\n        Year: 2008,\r\n    },\r\n    {\r\n        id: 12,\r\n        Year: 2009,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Graduated from Elementary School',\r\n                    Event_Description: 'Graduated from Elementary School, after 6 years in SDN Sepanjang Jaya VIII '\r\n                },\r\n            ],\r\n            [\r\n                {\r\n                    Event_Title: 'Starting Junior High School Study',\r\n                    Event_Description: 'Starting Junior High School Study, for 3 years in SMPIT Al-Hassan'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        id: 13,\r\n        Year: 2010,\r\n    },\r\n    {\r\n        id: 14,\r\n        Year: 2011,\r\n    },\r\n    {\r\n        id: 15,\r\n        Year: 2012,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Graduated from Junior High School',\r\n                    Event_Description: 'Graduated from Junior High School, after 3 years in SMPIT Al-Hassan'\r\n                },\r\n            ],\r\n            [\r\n                {\r\n                    Event_Title: 'Start Study in High School',\r\n                    Event_Description: 'Start Study in High School, SMAIT Assyifa'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        id: 16,\r\n        Year: 2013,\r\n    },\r\n    {\r\n        id: 17,\r\n        Year: 2014,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Changed Schools',\r\n                    Event_Description: 'I changed schools from SMAIT Assyifa to SMAN 1 Tambun Selatan'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        id: 18,\r\n        Year: 2015,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Graduated from High School',\r\n                    Event_Description: 'Graduated from High School, SMAN 1 Tambun Selatan'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Starting University Study', ////// not sure\r\n                    Event_Description: 'Starting University Study, for 4 years study in Universitas Negeri Jakarta'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        id: 19,\r\n        Year: 2016,\r\n    },\r\n    {\r\n        id: 20,\r\n        Year: 2017,\r\n    },\r\n    {\r\n        id: 21,\r\n        Year: 2018,\r\n        Month: [\r\n            [\r\n                {\r\n                    Event_Title: 'Starting Internship Program',\r\n                    Event_Description: 'Starting Internship in PT Bentang MitraGuna as Junior Programmer for 6 months (collage duty)'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Completed Internship Program',\r\n                    Event_Description: 'Completed Internship in PT Bentang MitraGuna as Junior Programmer for 6 months (collage duty)'\r\n                },\r\n            ],\r\n            [\r\n                {\r\n                    Event_Title: 'Starting Apprentice Teacher Program',\r\n                    Event_Description: 'Starting Internship in SMKN 26 Jakarta as Basic Programmer Teacher for 3 months (collage duty)'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Completed Apprentice Teacher Program',\r\n                    Event_Description: 'Completed Internship in SMKN 26 Jakarta as Basic Programmer Teacher for 3 months (collage duty)'\r\n                },\r\n            ],\r\n            [],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        id: 22,\r\n        Year: 2019,\r\n        Month: [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [\r\n                {\r\n                    Event_Title: 'Graduated from University',\r\n                    Event_Description: 'Graduated from University, after 4 years study in Universitas Negeri Jakarta'\r\n                },\r\n            ],\r\n            [\r\n                {\r\n                    Event_Title: 'Starting a Training Program',\r\n                    Event_Description: 'Joining Machine Learning / Deep Learning Training Program, Digital Talent Scholarship in Gunadarma'\r\n                },\r\n            ],\r\n            [\r\n                {\r\n                    Event_Title: 'Start a Training Program',\r\n                    Event_Description: 'Completed  Machine Learning / Deep Learning Training Program, Digital Talent Scholarship in Gunadarma'\r\n                },\r\n            ],\r\n            [],\r\n        ]\r\n    },\r\n    {\r\n        Year: 2020,\r\n    },\r\n]\r\n\r\nconst SkillsData = [\r\n    {\r\n        CategoryName: 'Programming Language',\r\n        SkillRelated: [\r\n            {\r\n                Name: 'C',\r\n                Rating: 6,\r\n                Positive: 'I am learning C Language as the basic programming material in university, i also know basic and intermediate about C, and event tech C language at some point',\r\n                negative: 'I am never make a big project using C Language',\r\n            },\r\n            {\r\n                Name: 'PHP',\r\n                Rating: 3,\r\n                Positive: 'When i was in university, i made a website using Basic PHP, i know basic syntax, but just it, no development or event uses after that',\r\n                negative: 'I just not confident enough to say I am good at this',\r\n            },\r\n            {\r\n                Name: 'Python',\r\n                Rating: 7,\r\n                Positive: 'I understand and can use many basic and intermediate functions involving variable, list, tuple, looping, conditional and many more, i also use python for web and machine learning project',\r\n                negative: 'I dont used to inline function, threading and multiprocessing, and because i havent use python that often in the last 3 months',\r\n            },\r\n            {\r\n                Name: 'JavaScript',\r\n                Rating: 8,\r\n                Positive: 'I understand and can use many basic and intermediate functions, have no problem most of es->es11 module. I use javascript for frontend and backend website',\r\n                negative: 'I dont used to inbuild browser javascript function and sometimes confused with very old javascript syntax',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        CategoryName: 'Backend Related',\r\n        SkillRelated: [\r\n            {\r\n                Name: 'Django Framework',\r\n                Rating: 6,\r\n                Positive: 'I understand how to install, setting, and how to use Django as a backend + frontend or event for a backend only.',\r\n                negative: 'Because Django is so big and many things handle by Django. Sometimes it feels like I have no control and its making me not confident enough to say I mastered Django',\r\n            },\r\n            {\r\n                Name: 'Django Rest Framework',\r\n                Rating: 7,\r\n                Positive: '-',\r\n                negative: 'Same reason with Django Framework',\r\n            },\r\n            {\r\n                Name: 'ExpressJs Framework',\r\n                Rating: 8,\r\n                Positive: '-',\r\n                negative: 'Never make scheduler system and server side render',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        CategoryName: 'Frontend Related',\r\n        SkillRelated: [\r\n            {\r\n                Name: 'Bootstrap',\r\n                Rating: 6,\r\n                Positive: '-',\r\n                negative: 'I never experience that many classes available, only use generic classes. and never use it with sass',\r\n            },\r\n            {\r\n                Name: 'MaterialUi',\r\n                Rating: 8,\r\n                Positive: '-',\r\n                negative: 'Never use MaterialUi animation',\r\n            },\r\n            {\r\n                Name: 'ReactJS',\r\n                Rating: 8,\r\n                Positive: '-',\r\n                negative: 'Not using ReactHook that often',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        CategoryName: 'Database Related',\r\n        SkillRelated: [\r\n            {\r\n                Name: 'SQL: MySQL, Sqlite',\r\n                Rating: 8,\r\n                Positive: 'I learn about SQL in university, i know and work with SQL quite often',\r\n                negative: 'Sometime i get confused by join method involving more than 3 tables. Because i work with Non-SQL database in the last 3 months i just not really sure to put myself higher',\r\n            },\r\n            {\r\n                Name: 'NON-SQL: MongoDb',\r\n                Rating: 7,\r\n                Positive: '-',\r\n                negative: 'I dont used to NON-SQL CMD',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        CategoryName: 'Other Useful skill',\r\n        SkillRelated: [\r\n            {\r\n                Name: 'Git',\r\n                Rating: 6,\r\n                Positive: 'I know how git work, use and understand generic commend push, pull, fork, branch, marge, etc',\r\n                negative: 'I never experience git with many people involved if there is a problem in the merge proses I dont know what to do yet',\r\n            },\r\n            {\r\n                Name: 'Redux',\r\n                Rating: 8,\r\n                Positive: '-',\r\n                negative: 'Because Redux uses in many technologies I dont know what other implementation of redux other than to react',\r\n            },\r\n            {\r\n                Name: 'Docker',\r\n                Rating: 1,\r\n                Positive: 'I understand what docker is, i learn how to use it',\r\n                negative: 'I never use docker',\r\n            },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ABOUT_LOADING:\r\n            return {\r\n                ...state,\r\n                isAboutLoading: true,\r\n            }\r\n        case ABOUT_LOADED:\r\n            return {\r\n                ...state,\r\n                isAboutLoading: false,\r\n            }\r\n        case GET_ABOUT_LIFEPATH_LIST:\r\n            return {\r\n                ...state,\r\n                LifePath_List: LifePathData\r\n            }\r\n        case GET_ABOUT_SKILL_LIST:\r\n            return {\r\n                ...state,\r\n                Skill_List: SkillsData\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    DARK_MODE,\r\n    HIDE_NAVBAR,\r\n    CHANGE_THEME,\r\n    DEFAULT_THEME,\r\n    RELOAD_PAGE,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isDarkMode: localStorage.getItem('HN_Display_isDarkMode'),\r\n    isNavbarHide: false,\r\n    NavbarTheme: localStorage.getItem('HN_Display_NavbarTheme'),\r\n    PaperTheme: localStorage.getItem('HN_Display_PaperTheme'),\r\n    DefaultTheme: localStorage.getItem('HN_Display_DefaultTheme'),\r\n    PrimaryMainTheme: localStorage.getItem('HN_Display_PrimaryMainTheme'),\r\n    SecondaryMainTheme: localStorage.getItem('HN_Display_SecondaryMainTheme'),\r\n    ContrastTextTheme: localStorage.getItem('HN_Display_ContrastTextTheme'),\r\n    TextPrimaryTheme: localStorage.getItem('HN_Display_TextPrimaryTheme'),\r\n    TextSecondaryTheme: localStorage.getItem('HN_Display_TextSecondaryTheme'),\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case DARK_MODE:\r\n            if (action.payload === true) {\r\n                localStorage.setItem('HN_Display_isDarkMode', action.payload)\r\n            } else {\r\n                localStorage.removeItem('HN_Display_isDarkMode')\r\n            }\r\n            return {\r\n                ...state,\r\n                isDarkMode: action.payload,\r\n            }\r\n        case HIDE_NAVBAR:\r\n            return {\r\n                ...state,\r\n                isNavbarHide: true\r\n            }\r\n        case CHANGE_THEME:\r\n            localStorage.setItem('HN_Display_NavbarTheme', action.payload.NavbarTheme ? action.payload.NavbarTheme : state.NavbarTheme ? state.NavbarTheme : '')\r\n            localStorage.setItem('HN_Display_PaperTheme', action.payload.PaperTheme ? action.payload.PaperTheme : state.PaperTheme ? state.PaperTheme : '')\r\n            localStorage.setItem('HN_Display_DefaultTheme', action.payload.DefaultTheme ? action.payload.DefaultTheme : state.DefaultTheme ? state.DefaultTheme : '')\r\n            localStorage.setItem('HN_Display_PrimaryMainTheme', action.payload.PrimaryMainTheme ? action.payload.PrimaryMainTheme : state.PrimaryMainTheme ? state.PrimaryMainTheme : '')\r\n            localStorage.setItem('HN_Display_SecondaryMainTheme', action.payload.SecondaryMainTheme ? action.payload.SecondaryMainTheme : state.SecondaryMainTheme ? state.SecondaryMainTheme : '')\r\n            localStorage.setItem('HN_Display_ContrastTextTheme', action.payload.ContrastTextTheme ? action.payload.ContrastTextTheme : state.ContrastTextTheme ? state.ContrastTextTheme : '')\r\n            localStorage.setItem('HN_Display_TextPrimaryTheme', action.payload.TextPrimaryTheme ? action.payload.TextPrimaryTheme : state.TextPrimaryTheme ? state.TextPrimaryTheme : '')\r\n            localStorage.setItem('HN_Display_TextSecondaryTheme', action.payload.TextSecondaryTheme ? action.payload.TextSecondaryTheme : state.TextSecondaryTheme ? state.TextSecondaryTheme : '')\r\n            return {\r\n                ...state,\r\n                NavbarTheme: action.payload.NavbarTheme ? action.payload.NavbarTheme : state.NavbarTheme ? state.NavbarTheme : '',\r\n                PaperTheme: action.payload.PaperTheme ? action.payload.PaperTheme : state.PaperTheme ? state.PaperTheme : '',\r\n                DefaultTheme: action.payload.DefaultTheme ? action.payload.DefaultTheme : state.DefaultTheme ? state.DefaultTheme : '',\r\n                PrimaryMainTheme: action.payload.PrimaryMainTheme ? action.payload.PrimaryMainTheme : state.PrimaryMainTheme ? state.PrimaryMainTheme : '',\r\n                SecondaryMainTheme: action.payload.SecondaryMainTheme ? action.payload.SecondaryMainTheme : state.SecondaryMainTheme ? state.SecondaryMainTheme : '',\r\n                ContrastTextTheme: action.payload.ContrastTextTheme ? action.payload.ContrastTextTheme : state.ContrastTextTheme ? state.ContrastTextTheme : '',\r\n                TextPrimaryTheme: action.payload.TextPrimaryTheme ? action.payload.TextPrimaryTheme : state.TextPrimaryTheme ? state.TextPrimaryTheme : '',\r\n                TextSecondaryTheme: action.payload.TextSecondaryTheme ? action.payload.TextSecondaryTheme : state.TextSecondaryTheme ? state.TextSecondaryTheme : '',\r\n            }\r\n        case DEFAULT_THEME:\r\n            localStorage.removeItem('HN_Display_NavbarTheme')\r\n            localStorage.removeItem('HN_Display_PaperTheme')\r\n            localStorage.removeItem('HN_Display_DefaultTheme')\r\n            localStorage.removeItem('HN_Display_PrimaryMainTheme')\r\n            localStorage.removeItem('HN_Display_SecondaryMainTheme')\r\n            localStorage.removeItem('HN_Display_ContrastTextTheme')\r\n            localStorage.removeItem('HN_Display_TextPrimaryTheme')\r\n            localStorage.removeItem('HN_Display_TextSecondaryTheme')\r\n            return {\r\n                ...state,\r\n                NavbarTheme: '',\r\n                PaperTheme: '',\r\n                DefaultTheme: '',\r\n                PrimaryMainTheme: '',\r\n                SecondaryMainTheme: '',\r\n                ContrastTextTheme: '',\r\n                TextPrimaryTheme: '',\r\n                TextSecondaryTheme: '',\r\n            }\r\n        case RELOAD_PAGE: {\r\n            window.location.reload(true)\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","////// AUTH\r\nexport const CREATE_SUPER_USER_SUCCESS = 'CREATE_SUPER_USER_SUCCESS'\r\nexport const DARKMODE_CONFIG = 'DARKMODE_CONFIG'\r\nexport const AUTH_LOADING = 'AUTH_LOADING'\r\nexport const AUTH_LOADED = 'AUTH_LOADED'\r\nexport const RELOADE_PAGE = 'RELOADE_PAGE'\r\nexport const SET_NEW_IP = 'SET_NEW_IP'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const USER_EXPIRED = 'USER_EXPIRED'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\n////// END-AUTH\r\n////// END-ACCOUNT\r\nexport const ACCOUNT_LOADING = 'ACCOUNT_LOADING'\r\nexport const ACCOUNT_LOADED = 'ACCOUNT_LOADED'\r\nexport const GET_ACCOUNT_ID_FOR_DETAIL = 'GET_ACCOUNT_ID_FOR_DETAIL'\r\nexport const ACCOUNT_DETAIL = 'ACCOUNT_DETAIL'\r\nexport const GET_ACCOUNT_ID_FOR_UPDATE = 'GET_ACCOUNT_ID_FOR_UPDATE'\r\nexport const LIST_ACCOUNT = 'LIST_ACCOUNT'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const TOKO_DETAIL = 'TOKO_DETAIL'\r\nexport const LIST_HISTORY = 'LIST_HISTORY'\r\nexport const GET_HISTORY_ID_FOR_DETAIL = 'GET_HISTORY_ID_FOR_DETAIL'\r\nexport const HISTORY_DETAIL = 'HISTORY_DETAIL'\r\nexport const LIST_QUERY_HISTORY_EXPORT = 'LIST_QUERY_HISTORY_EXPORT'\r\n////// END-ACCOUNT\r\n////// TRANSAKSI\r\nexport const TRANSAKSI_LOADING = 'TRANSAKSI_LOADING'\r\nexport const TRANSAKSI_LOADED = 'TRANSAKSI_LOADED'\r\nexport const CEK_IMPORT_TRANSAKSI = 'CEK_IMPORT_TRANSAKSI'\r\n////// TRANSAKSI\r\nexport const ADD_BARANG_TO_TRANSAKSI = 'ADD_BARANG_TO_TRANSAKSI'\r\nexport const CHANGE_TRANSAKSI_DETAIL = 'CHANGE_TRANSAKSI_DETAIL'\r\nexport const CLEAR_BARANG_IN_TRANSAKSI = 'CLEAR_BARANG_IN_TRANSAKSI'\r\nexport const CLEAR_A_BARANG_FROM_TRANSAKSI = 'CLEAR_A_BARANG_FROM_TRANSAKSI'\r\n////// BELANJA\r\nexport const ADD_BARANG_TO_BELANJA = 'ADD_BARANG_TO_BELANJA'\r\nexport const CHANGE_BELANJA_DETAIL = 'CHANGE_BELANJA_DETAIL'\r\nexport const CLEAR_A_BARANG_FROM_BELANJA = 'CLEAR_A_BARANG_FROM_BELANJA'\r\nexport const CLEAR_BARANG_IN_BELANJA = 'CLEAR_BARANG_IN_BELANJA'\r\n//////\r\nexport const LIST_TRANSAKSI = 'LIST_TRANSAKSI'\r\nexport const QUERY_LIST_TRANSAKSI = 'QUERY_LIST_TRANSAKSI'\r\nexport const GET_TRANSAKSI_ID_FOR_DETAIL = 'GET_TRANSAKSI_ID_FOR_DETAIL'\r\nexport const TRANSAKSI_DETAIL = 'TRANSAKSI_DETAIL'\r\n////// END-TRANSAKSI\r\n////// JENISBARANG\r\nexport const JENISBARANG_LOADING = 'JENISBARANG_LOADING'\r\nexport const JENISBARANG_LOADED = 'JENISBARANG_LOADED'\r\nexport const GET_JENISBARANG_ID_FOR_DETAIL = 'GET_JENISBARANG_ID_FOR_DETAIL'\r\nexport const JENISBARANG_DETAIL = 'JENISBARANG_DETAIL'\r\nexport const GET_JENISBARANG_ID_FOR_UPDATE = 'GET_JENISBARANG_ID_FOR_UPDATE'\r\nexport const JENISBARANG_DELETED = 'JENISBARANG_DELETED'\r\nexport const LIST_JENISBARANG = 'LIST_JENISBARANG'\r\nexport const LIST_QUERY_JENISBARANG = 'LIST_QUERY_JENISBARANG'\r\nexport const CEK_IMPORT_KATAGORIBARANG = 'CEK_IMPORT_KATAGORIBARANG'\r\nexport const LIST_QUERY_JENISBARANG_EXPORT = 'LIST_QUERY_JENISBARANG_EXPORT'\r\n////// END-JENISBARANG\r\n////// BARANG\r\nexport const BARANG_LOADING = 'BARANG_LOADING'\r\nexport const BARANG_LOADED = 'BARANG_LOADED'\r\nexport const GET_BARANG_ID_FOR_DETAIL = 'GET_BARANG_ID_FOR_DETAIL'\r\nexport const BARANG_DETAIL = 'BARANG_DETAIL'\r\nexport const GET_BARANG_ID_FOR_UPDATE = 'GET_BARANG_ID_FOR_UPDATE'\r\nexport const BARANG_DELETED = 'BARANG_DELETED'\r\nexport const LIST_BARANG = 'LIST_BARANG'\r\nexport const LIST_QUERY_BARANG_EXPORT = 'LIST_QUERY_BARANG_EXPORT'\r\nexport const CEK_IMPORT_BARANG = 'CEK_IMPORT_BARANG'\r\n////// END-BARANG\r\n////// HELP\r\nexport const HELP_LOADING = 'HELP_LOADING'\r\nexport const HELP_LOADED = 'HELP_LOADED'\r\n////// HELP-REPORT\r\nexport const LIST_INCOMEREPORT_BARANG = 'LIST_INCOMEREPORT_BARANG'\r\nexport const LIST_INCOMEREPORT_KEUANGAN = 'LIST_INCOMEREPORT_KEUANGAN'\r\nexport const LIST_OUTCOMEREPORT_BARANG = 'LIST_OUTCOMEREPORT_BARANG'\r\nexport const LIST_OUTCOMEREPORT_MODAL = 'LIST_OUTCOMEREPORT_MODAL'\r\n////// END-HELP-REPORT\r\n////// HELP-GRAPH\r\nexport const LIST_GRAPH_ASET = 'LIST_GRAPH_ASET'\r\nexport const LIST_QUERY_GRAPH_ASET = 'LIST_QUERY_GRAPH_ASET'\r\n\r\nexport const LIST_GRAPH_UANGMASUK = 'LIST_GRAPH_UANGMASUK'\r\nexport const LIST_QUERY_GRAPH_UANGMASUK = 'LIST_QUERY_GRAPH_UANGMASUK'\r\nexport const LIST_GRAPH_UANGKELUAR = 'LIST_GRAPH_UANGKELUAR'\r\nexport const LIST_QUERY_GRAPH_UANGKELUAR = 'LIST_QUERY_GRAPH_UANGKELUAR'\r\nexport const LIST_GRAPH_UANGLOSE = 'LIST_GRAPH_UANGLOSE'\r\nexport const LIST_QUERY_GRAPH_UANGLOSE = 'LIST_QUERY_GRAPH_UANGLOSE'\r\nexport const LIST_GRAPH_INTENSITASTRANSAKSI = 'LIST_GRAPH_INTENSITASTRANSAKSI'\r\nexport const LIST_QUERY_GRAPH_INTENSITASTRANSAKSI = 'LIST_QUERY_GRAPH_INTENSITASTRANSAKSI'\r\nexport const LIST_GRAPH_INTENSITASBARANGTRANSAKSI = 'LIST_GRAPH_INTENSITASBARANGTRANSAKSI'\r\nexport const LIST_QUERY_GRAPH_INTENSITASBARANGTRANSAKSI = 'LIST_QUERY_GRAPH_INTENSITASBARANGTRANSAKSI'\r\n////// END-HELP-GRAPH\r\n////// END-HELP\r\n////// MESSAGES\r\nexport const SUCCESS_MESSAGES = 'SUCCESS_MESSAGES'\r\nexport const INFO_MESSAGES = 'INFO_MESSAGES'\r\nexport const WARNING_MESSAGES = 'WARNING_MESSAGES'\r\nexport const ERROR_MESSAGES = 'ERROR_MESSAGES'\r\nexport const CLEAN_MESSAGES = 'CLEAN_MESSAGES'\r\n////// END-MESSAGES","import {\r\n    CREATE_SUPER_USER_SUCCESS,\r\n    DARKMODE_CONFIG,\r\n    AUTH_LOADING,\r\n    AUTH_LOADED,\r\n    RELOADE_PAGE,\r\n    SET_NEW_IP,\r\n    LOGIN_SUCCESS,\r\n    USER_LOADED,\r\n    USER_EXPIRED,\r\n    LOGOUT_SUCCESS,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('KasirQU_token'),\r\n    isAuth: localStorage.getItem('KasirQU_isAuth'),\r\n    IpAddres: localStorage.getItem('KasirQU_Server_IpAddres'),\r\n    Port: localStorage.getItem('KasirQU_Server_Port'),\r\n    WebSite: localStorage.getItem('KasirQU_Server_WebSite'),\r\n    isUserLoading: false,\r\n    User: null,\r\n    isDarkMode: localStorage.getItem('KasirQU_isDarkMode')\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_SUPER_USER_SUCCESS:\r\n            localStorage.setItem('KasirQU_token', action.payload.token)\r\n            localStorage.setItem('KasirQU_isAuth', true)\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                token: action.payload.token,\r\n                User: action.payload.user\r\n            }\r\n        case DARKMODE_CONFIG:\r\n            localStorage.setItem('KasirQU_isDarkMode', action.payload)\r\n            return {\r\n                ...state,\r\n                isDarkMode: action.payload,\r\n            }\r\n        case AUTH_LOADING:\r\n            return {\r\n                ...state,\r\n                isUserLoading: true,\r\n            }\r\n        case AUTH_LOADED:\r\n            return {\r\n                ...state,\r\n                isUserLoading: false,\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                User: action.payload\r\n            }\r\n        case RELOADE_PAGE:\r\n            window.location.reload(true)\r\n            return {\r\n                ...state,\r\n            }\r\n        case SET_NEW_IP: {\r\n            localStorage.setItem('KasirQU_Server_IpAddres', action.payload.newIp)\r\n            localStorage.setItem('KasirQU_Server_Port', action.payload.newPort)\r\n            localStorage.setItem('KasirQU_Server_WebSite', action.payload.newWebSite)\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('KasirQU_token', action.payload.token)\r\n            localStorage.setItem('KasirQU_isAuth', true)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: true,\r\n                token: action.payload.token,\r\n                User: action.payload.user\r\n            }\r\n        case USER_EXPIRED:\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.clear();\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                User: null,\r\n                isAuth: false,\r\n                isUserLoading: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ACCOUNT_LOADING,\r\n    ACCOUNT_LOADED,\r\n    GET_ACCOUNT_ID_FOR_DETAIL,\r\n    ACCOUNT_DETAIL,\r\n    GET_ACCOUNT_ID_FOR_UPDATE,\r\n    ACCOUNT_DELETED,\r\n    LIST_ACCOUNT,\r\n    TOKO_DETAIL,\r\n    LIST_HISTORY,\r\n    HISTORY_DETAIL,\r\n    GET_HISTORY_ID_FOR_DETAIL,\r\n    LIST_QUERY_HISTORY_EXPORT,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isAccountLoading: false,\r\n    idDetailAccount: null,\r\n    AccountDetail: null,\r\n    idUpdateAccount: null,\r\n    AccountList: [],\r\n    TokoDetail: null,\r\n    HistoryList: [],\r\n    idDetailHistory: null,\r\n    HistoryDetail: null,\r\n    ExportHistoryList: [],\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ACCOUNT_LOADING:\r\n            return {\r\n                ...state,\r\n                isAccountLoading: true,\r\n            }\r\n        case ACCOUNT_LOADED:\r\n            return {\r\n                ...state,\r\n                isAccountLoading: false,\r\n            }\r\n        case GET_ACCOUNT_ID_FOR_DETAIL:\r\n            return {\r\n                ...state,\r\n                idDetailAccount: action.payload,\r\n            }\r\n        case ACCOUNT_DETAIL:\r\n            return {\r\n                ...state,\r\n                AccountDetail: action.payload,\r\n            }\r\n        case GET_ACCOUNT_ID_FOR_UPDATE:\r\n            return {\r\n                ...state,\r\n                idUpdateAccount: action.payload,\r\n            }\r\n        case ACCOUNT_DELETED:\r\n            return {\r\n                ...state,\r\n                AccountList: state.AccountList.filter(AccountList => AccountList._id !== action.payload)\r\n            }\r\n        case LIST_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                AccountList: action.payload,\r\n            }\r\n        case TOKO_DETAIL:\r\n            return {\r\n                ...state,\r\n                TokoDetail: action.payload,\r\n            }\r\n        case LIST_HISTORY:\r\n            return {\r\n                ...state,\r\n                HistoryList: action.payload,\r\n            }\r\n        case GET_HISTORY_ID_FOR_DETAIL:\r\n            return {\r\n                ...state,\r\n                idDetailHistory: action.payload,\r\n            }\r\n        case HISTORY_DETAIL:\r\n            return {\r\n                ...state,\r\n                HistoryDetail: action.payload,\r\n            }\r\n        case LIST_QUERY_HISTORY_EXPORT:\r\n            return {\r\n                ...state,\r\n                ExportHistoryList: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    TRANSAKSI_LOADING,\r\n    TRANSAKSI_LOADED,\r\n    CEK_IMPORT_TRANSAKSI,\r\n    ////// TRANSAKSI\r\n    ADD_BARANG_TO_TRANSAKSI,\r\n    CHANGE_TRANSAKSI_DETAIL,\r\n    CLEAR_A_BARANG_FROM_TRANSAKSI,\r\n    CLEAR_BARANG_IN_TRANSAKSI,\r\n    ////// BELANJA\r\n    ADD_BARANG_TO_BELANJA,\r\n    CHANGE_BELANJA_DETAIL,\r\n    CLEAR_A_BARANG_FROM_BELANJA,\r\n    CLEAR_BARANG_IN_BELANJA,\r\n    //////\r\n    LIST_TRANSAKSI,\r\n    QUERY_LIST_TRANSAKSI,\r\n    GET_TRANSAKSI_ID_FOR_DETAIL,\r\n    TRANSAKSI_DETAIL,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isTransaksiLoading: false,\r\n    Transaksi: [],\r\n    Belanja: [],\r\n    TransaksiList: [],\r\n    idDetailTransaksi: null,\r\n    TransaksiDetail: null,\r\n    TransaksiImportFile: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case TRANSAKSI_LOADING:\r\n            return {\r\n                ...state,\r\n                isTransaksiLoading: true,\r\n            }\r\n        case TRANSAKSI_LOADED:\r\n            return {\r\n                ...state,\r\n                isTransaksiLoading: false,\r\n            }\r\n        ////// TRANSAKSI\r\n        case ADD_BARANG_TO_TRANSAKSI:\r\n            const newTransaksi = {\r\n                Id: action.payload._id,\r\n                Barcode: action.payload.Barcode,\r\n                NamaBarang: action.payload.Name,\r\n                SatuanOptions: action.payload.SatuanJual,\r\n                isDecimal: action.payload.isDecimal,\r\n                Satuan: \"satuan\",\r\n                Jumlah: 1,\r\n                HargaSatuan: action.payload.HargaJual,\r\n                TotalBarang: 1,\r\n                HargaTotal: 1 * action.payload.HargaJual,\r\n                isEditAble: false,\r\n            }\r\n            state.Transaksi.push(newTransaksi)\r\n            return {\r\n                ...state,\r\n            }\r\n        case CHANGE_TRANSAKSI_DETAIL:\r\n            state.Transaksi[action.payload.Index].Satuan = action.payload.NamaSatuan\r\n            state.Transaksi[action.payload.Index].Jumlah = action.payload.Jumlah\r\n            state.Transaksi[action.payload.Index].HargaSatuan = action.payload.HargaSatuan\r\n            state.Transaksi[action.payload.Index].TotalBarang = action.payload.TotalBarang\r\n            state.Transaksi[action.payload.Index].HargaTotal = action.payload.HargaTotal\r\n            return {\r\n                ...state,\r\n            }\r\n        case CLEAR_A_BARANG_FROM_TRANSAKSI:\r\n            state.Transaksi.splice(action.payload, 1)\r\n            return {\r\n                ...state,\r\n            }\r\n        case CLEAR_BARANG_IN_TRANSAKSI:\r\n            state.Transaksi.length = 0\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// BELANJA\r\n        case ADD_BARANG_TO_BELANJA:\r\n            const newBelanja = {\r\n                Id: action.payload._id,\r\n                Barcode: action.payload.Barcode,\r\n                NamaBarang: action.payload.Name,\r\n                Jumlah: 1,\r\n                HargaModal: 0,\r\n                HargaJual: 0,\r\n                TotalModal: 0,\r\n                isEditAble: false,\r\n            }\r\n            state.Belanja.push(newBelanja)\r\n            return {\r\n                ...state,\r\n            }\r\n        case CHANGE_BELANJA_DETAIL:\r\n            state.Belanja[action.payload.Index].Jumlah = action.payload.Jumlah\r\n            state.Belanja[action.payload.Index].HargaModal = action.payload.HargaModal\r\n            state.Belanja[action.payload.Index].HargaJual = action.payload.HargaJual\r\n            state.Belanja[action.payload.Index].TotalModal = action.payload.TotalModal\r\n            return {\r\n                ...state,\r\n            }\r\n        case CLEAR_A_BARANG_FROM_BELANJA:\r\n            state.Belanja.splice(action.payload, 1)\r\n            return {\r\n                ...state,\r\n            }\r\n        case CLEAR_BARANG_IN_BELANJA:\r\n            state.Belanja.length = 0\r\n            return {\r\n                ...state,\r\n            }\r\n        case QUERY_LIST_TRANSAKSI:\r\n        case LIST_TRANSAKSI:\r\n            return {\r\n                ...state,\r\n                TransaksiList: action.payload,\r\n            }\r\n        case GET_TRANSAKSI_ID_FOR_DETAIL:\r\n            return {\r\n                ...state,\r\n                idDetailTransaksi: action.payload,\r\n            }\r\n        case TRANSAKSI_DETAIL:\r\n            return {\r\n                ...state,\r\n                TransaksiDetail: action.payload,\r\n            }\r\n        case CEK_IMPORT_TRANSAKSI:\r\n            return {\r\n                ...state,\r\n                TransaksiImportFile: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    JENISBARANG_LOADING,\r\n    JENISBARANG_LOADED,\r\n    GET_JENISBARANG_ID_FOR_DETAIL,\r\n    JENISBARANG_DETAIL,\r\n    GET_JENISBARANG_ID_FOR_UPDATE,\r\n    JENISBARANG_DELETED,\r\n    LIST_JENISBARANG,\r\n    LIST_QUERY_JENISBARANG,\r\n    CEK_IMPORT_KATAGORIBARANG,\r\n    LIST_QUERY_JENISBARANG_EXPORT,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isJenisBarangLoading: false,\r\n    idDetailJenisBarang: null,\r\n    JenisBarangDetail: null,\r\n    idUpdateJenisBarang: null,\r\n    JenisBarangList: [],\r\n    KatagoriBarangImportFile: null,\r\n    ExportJenisBarangList:[],\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case JENISBARANG_LOADING:\r\n            return {\r\n                ...state,\r\n                isJenisBarangLoading: true,\r\n            }\r\n        case JENISBARANG_LOADED:\r\n            return {\r\n                ...state,\r\n                isJenisBarangLoading: false,\r\n            }\r\n        case GET_JENISBARANG_ID_FOR_DETAIL:\r\n            return {\r\n                ...state,\r\n                idDetailJenisBarang: action.payload,\r\n            }\r\n        case JENISBARANG_DETAIL:\r\n            return {\r\n                ...state,\r\n                JenisBarangDetail: action.payload,\r\n            }\r\n        case GET_JENISBARANG_ID_FOR_UPDATE:\r\n            return {\r\n                ...state,\r\n                idUpdateJenisBarang: action.payload,\r\n            }\r\n        case JENISBARANG_DELETED:\r\n            return {\r\n                ...state,\r\n                JenisBarangList: state.JenisBarangList.filter(JenisBarangList => JenisBarangList._id !== action.payload)\r\n            }\r\n        case LIST_JENISBARANG:\r\n        case LIST_QUERY_JENISBARANG:\r\n            return {\r\n                ...state,\r\n                JenisBarangList: action.payload,\r\n            }\r\n        case CEK_IMPORT_KATAGORIBARANG:\r\n            return {\r\n                ...state,\r\n                KatagoriBarangImportFile: action.payload,\r\n            }\r\n        case LIST_QUERY_JENISBARANG_EXPORT:\r\n            return {\r\n                ...state,\r\n                ExportJenisBarangList: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    BARANG_LOADING,\r\n    BARANG_LOADED,\r\n    GET_BARANG_ID_FOR_DETAIL,\r\n    BARANG_DETAIL,\r\n    GET_BARANG_ID_FOR_UPDATE,\r\n    BARANG_DELETED,\r\n    LIST_BARANG,\r\n    LIST_QUERY_BARANG_EXPORT,\r\n    CEK_IMPORT_BARANG,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isBarangLoading: false,\r\n    idDetailBarang: null,\r\n    BarangDetail: null,\r\n    idUpdateBarang: null,\r\n    BarangList: [],\r\n    ExportBarangList: [],\r\n    BarangImportFile: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case BARANG_LOADING:\r\n            return {\r\n                ...state,\r\n                isBarangLoading: true,\r\n            }\r\n        case BARANG_LOADED:\r\n            return {\r\n                ...state,\r\n                isBarangLoading: false,\r\n            }\r\n        case GET_BARANG_ID_FOR_DETAIL:\r\n            return {\r\n                ...state,\r\n                idDetailBarang: action.payload,\r\n            }\r\n        case BARANG_DETAIL:\r\n            return {\r\n                ...state,\r\n                BarangDetail: action.payload,\r\n            }\r\n        case GET_BARANG_ID_FOR_UPDATE:\r\n            return {\r\n                ...state,\r\n                idUpdateBarang: action.payload,\r\n            }\r\n        case BARANG_DELETED:\r\n            return {\r\n                ...state,\r\n                BarangList: state.BarangList.filter(BarangList => BarangList._id !== action.payload)\r\n            }\r\n        case LIST_BARANG:\r\n            return {\r\n                ...state,\r\n                BarangList: action.payload,\r\n            }\r\n        case LIST_QUERY_BARANG_EXPORT:\r\n            return {\r\n                ...state,\r\n                ExportBarangList: action.payload,\r\n            }\r\n        case CEK_IMPORT_BARANG:\r\n            return {\r\n                ...state,\r\n                BarangImportFile: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ////// HELP\r\n    HELP_LOADING,\r\n    HELP_LOADED,\r\n    ////// HELP-REPORT\r\n    LIST_INCOMEREPORT_BARANG,\r\n    LIST_INCOMEREPORT_KEUANGAN,\r\n    LIST_OUTCOMEREPORT_BARANG,\r\n    LIST_OUTCOMEREPORT_MODAL,\r\n    ////// END-HELP-REPORT\r\n    ////// HELP-GRAPH\r\n    LIST_GRAPH_ASET,\r\n    LIST_QUERY_GRAPH_ASET,\r\n    LIST_GRAPH_UANGMASUK,\r\n    LIST_QUERY_GRAPH_UANGMASUK,\r\n    LIST_GRAPH_UANGKELUAR,\r\n    LIST_QUERY_GRAPH_UANGKELUAR,\r\n    LIST_GRAPH_UANGLOSE,\r\n    LIST_QUERY_GRAPH_UANGLOSE,\r\n    LIST_GRAPH_INTENSITASTRANSAKSI,\r\n    LIST_QUERY_GRAPH_INTENSITASTRANSAKSI,\r\n    LIST_GRAPH_INTENSITASBARANGTRANSAKSI,\r\n    LIST_QUERY_GRAPH_INTENSITASBARANGTRANSAKSI,\r\n    ////// END-HELP-GRAPH\r\n    ////// END-HELP\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    ////// HELP\r\n    isHelpLoading: false,\r\n    ////// HELP-REPORT\r\n    IncomeReportBarangList: [],\r\n    IncomeReportKeuanganList: [],\r\n    OutcomeReportBarangList: [],\r\n    OutcomeReportModalList: [],\r\n    ////// END-HELP-REPORT\r\n    ////// HELP-GRAPH\r\n    GraphAsetList: [],\r\n    GraphUangMasukList: [],\r\n    GraphUangKeluarList: [],\r\n    GraphUangLoseList: [],\r\n    GraphIntensitasTransaksiList: [],\r\n    GraphIntensitasBarangTransaksiList: [],\r\n    ////// END-HELP-GRAPH\r\n    ////// END-HELP\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        ////// HELP\r\n        case HELP_LOADING:\r\n            return {\r\n                ...state,\r\n                isHelpLoading: true,\r\n            }\r\n        case HELP_LOADED:\r\n            return {\r\n                ...state,\r\n                isHelpLoading: false,\r\n            }\r\n        ////// HELP-REPORT\r\n        case LIST_INCOMEREPORT_BARANG:\r\n            return {\r\n                ...state,\r\n                IncomeReportBarangList: action.payload,\r\n            }\r\n        case LIST_INCOMEREPORT_KEUANGAN:\r\n            return {\r\n                ...state,\r\n                IncomeReportKeuanganList: action.payload,\r\n            }\r\n        case LIST_OUTCOMEREPORT_BARANG:\r\n            return {\r\n                ...state,\r\n                OutcomeReportBarangList: action.payload,\r\n            }\r\n        case LIST_OUTCOMEREPORT_MODAL:\r\n            return {\r\n                ...state,\r\n                OutcomeReportModalList: action.payload,\r\n            }\r\n        ////// END-HELP-REPORT\r\n        ////// HELP-GRAPH\r\n        case LIST_GRAPH_ASET:\r\n        case LIST_QUERY_GRAPH_ASET:\r\n            return {\r\n                ...state,\r\n                GraphAsetList: action.payload,\r\n            }\r\n        case LIST_GRAPH_UANGMASUK:\r\n        case LIST_QUERY_GRAPH_UANGMASUK:\r\n            return {\r\n                ...state,\r\n                GraphUangMasukList: action.payload,\r\n            }\r\n        case LIST_GRAPH_UANGKELUAR:\r\n        case LIST_QUERY_GRAPH_UANGKELUAR:\r\n            return {\r\n                ...state,\r\n                GraphUangKeluarList: action.payload,\r\n            }\r\n        case LIST_GRAPH_UANGLOSE:\r\n        case LIST_QUERY_GRAPH_UANGLOSE:\r\n            return {\r\n                ...state,\r\n                GraphUangLoseList: action.payload,\r\n            }\r\n        case LIST_GRAPH_INTENSITASTRANSAKSI:\r\n        case LIST_QUERY_GRAPH_INTENSITASTRANSAKSI:\r\n            return {\r\n                ...state,\r\n                GraphIntensitasTransaksiList: action.payload,\r\n            }\r\n        case LIST_GRAPH_INTENSITASBARANGTRANSAKSI:\r\n        case LIST_QUERY_GRAPH_INTENSITASBARANGTRANSAKSI:\r\n            return {\r\n                ...state,\r\n                GraphIntensitasBarangTransaksiList: action.payload,\r\n            }\r\n        ////// END-HELP-GRAPH\r\n        ////// END-HELP\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    SUCCESS_MESSAGES,\r\n    INFO_MESSAGES,\r\n    WARNING_MESSAGES,\r\n    ERROR_MESSAGES,\r\n    CLEAN_MESSAGES,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    isMessages: false,\r\n    MessagesType: null,\r\n    MessagesCode: null,\r\n    Messages: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SUCCESS_MESSAGES:\r\n            return {\r\n                ...state,\r\n                isMessages: true,\r\n                MessagesType: \"success\",\r\n                MessagesCode: action.payload.Status,\r\n                Messages: action.payload.msg,\r\n            }\r\n        case INFO_MESSAGES:\r\n            return {\r\n                ...state,\r\n                isMessages: true,\r\n                MessagesType: \"info\",\r\n                MessagesCode: action.payload.Status,\r\n                Messages: action.payload.msg,\r\n            }\r\n        case WARNING_MESSAGES:\r\n            return {\r\n                ...state,\r\n                isMessages: true,\r\n                MessagesType: \"warning\",\r\n                MessagesCode: action.payload.Status,\r\n                Messages: action.payload.msg,\r\n            }\r\n        case ERROR_MESSAGES:\r\n            return {\r\n                ...state,\r\n                isMessages: true,\r\n                MessagesType: \"error\",\r\n                MessagesCode: action.payload.Status,\r\n                Messages: action.payload.msg,\r\n            }\r\n        case CLEAN_MESSAGES:\r\n            state.isMessages = false\r\n            state.MessagesType = null\r\n            state.MessagesCode = null\r\n            state.Messages = null\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOADING,\r\n    USER_NOT_LOADING,\r\n    USER_LOADED,\r\n    USER_EXPIRED,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: localStorage.getItem('isAuthenticated'),\r\n    isLoading: false,\r\n    user: null,\r\n    //TODO permission:null\r\n}\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_NOT_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                user: action.payload,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            localStorage.setItem('isAuthenticated', true)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload.user\r\n            }\r\n        case LOGIN_FAIL:\r\n        case USER_EXPIRED:\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.clear();\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CREATE_MASSAGES,\r\n    SUCCESS_MASSAGES,\r\n    ERROR_MASSAGES,\r\n    WARNING_MASSAGES,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState={\r\n    isMassages : false,\r\n    MassagesType : null,\r\n    Massages : null,\r\n}\r\n\r\nexport default function(state=initialState,actions){\r\n    switch(actions.type){\r\n        case CREATE_MASSAGES:\r\n            return(state=actions.payload)\r\n        case SUCCESS_MASSAGES:\r\n            return{\r\n                // ...state,\r\n                isMassages : true,\r\n                MassagesType : \"SUCCESS\",\r\n                Massages : actions.payload\r\n            }\r\n        case WARNING_MASSAGES:\r\n            return{\r\n                // ...state,\r\n                isMassages : true,\r\n                MassagesType : \"WARNING\",\r\n                Massages : actions.payload\r\n            }\r\n        case ERROR_MASSAGES:\r\n            return{\r\n                // ...state,\r\n                isMassages : true,\r\n                MassagesType : \"ERROR\",\r\n                Massages : actions.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ////// LOADING\r\n    BIODATA_LOADING,\r\n    ////// LOAD DETAIL\r\n    _BUTTON_DETAIL_VIEW_,\r\n    BIODATA_DETAIL_LOADED,\r\n    BIODATA_ACCOUNT_DETAIL_LOADED,\r\n    ////// BIODATA UPDATE\r\n    _BUTTON_UPDATE_BIODATA_,\r\n    BIODATA_UPDATE_DATA_LOADED,\r\n    BIODATA_UPDATED,\r\n    ////// BIODATA-DELETE\r\n    BIODATA_DELETED,\r\n    ////// BIODATA ACCOUNT UPDATE\r\n    _BUTTON_UPDATE_BIODATA_ACCOUNT_,\r\n    BIODATA_ACCOUNT_UPDATE_DATA_LOADED,\r\n    BIODATA_ACCOUNT_UPDATED,\r\n    ////// BIODATA SISWA\r\n    SISWA_DATA_LOADED,\r\n    ////// BIODATA SISWA-CREATE\r\n    SISWA_BIODATA_CREATED,\r\n    SISWA_BIODATA_FAILED_CREATE,\r\n    SISWA_ACCOUNT_CREATED,\r\n    SISWA_ACCOUNT_FAILED_CREATE,\r\n    SISWA_FULLY_CREATED,\r\n    ////// BIODATA STAFF\r\n    STAFF_DATA_LOADED,\r\n    ////// BIODATA STAFF-CREATE\r\n    STAFF_BIODATA_CREATED,\r\n    STAFF_BIODATA_FAILED_CREATE,\r\n    STAFF_ACCOUNT_CREATED,\r\n    STAFF_ACCOUNT_FAILED_CREATE,\r\n    STAFF_FULLY_CREATED,\r\n    ////// BIODATA ADMIN\r\n    ADMIN_DATA_LOADED,\r\n    ////// BIODATA ADMIN-CREATE\r\n    ADMIN_BIODATA_CREATED,\r\n    ADMIN_BIODATA_FAILED_CREATE,\r\n    ADMIN_ACCOUNT_CREATED,\r\n    ADMIN_ACCOUNT_FAILED_CREATE,\r\n    ADMIN_FULLY_CREATED,\r\n    ////// BIODATA ALL\r\n    ALL_DATA_LOADED,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState ={\r\n    ////// LOADING\r\n    isBiodataLoading : false,\r\n    ////// LOAD DETAIL\r\n    Biodata_ID :null,\r\n    Biodata : null,\r\n    Account : null,\r\n    ////// BIODATA UPDATE\r\n    Update_Biodata_ID :null,\r\n    Update_Biodata : null,\r\n    ////// BIODATA ACCOUNT UPDATE\r\n    Update_Biodata_Account_ID :null,\r\n    Update_Biodata_Account : null,\r\n    ////// BIODATA SISWA\r\n    Data_Siswa : [],\r\n    ////// BIODATA STAFF\r\n    Data_Staff : [],\r\n    ////// BIODATA ADMIN\r\n    Data_Admin : [],\r\n    ////// BIODATA ALL\r\n    Data_All : [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        ////// LOADING\r\n        case BIODATA_LOADING:\r\n            return{\r\n                ...state,\r\n                isBiodataLoading : true,\r\n            }\r\n        ////// LOAD DETAIL\r\n        case _BUTTON_DETAIL_VIEW_:\r\n            return{\r\n                ...state,\r\n                Biodata_ID : action.payload,\r\n            }\r\n        case BIODATA_DETAIL_LOADED:\r\n            return{\r\n                ...state,\r\n                isBiodataLoading : false,\r\n                Biodata : action.payload,\r\n            }\r\n        case BIODATA_ACCOUNT_DETAIL_LOADED:\r\n            return{\r\n                ...state,\r\n                isBiodataLoading : false,\r\n                Account : action.payload,\r\n            }\r\n        ////// BIODATA UPDATE\r\n        case _BUTTON_UPDATE_BIODATA_:\r\n            return{\r\n                ...state,\r\n                Update_Biodata_ID :action.payload\r\n            }\r\n        case BIODATA_UPDATE_DATA_LOADED:\r\n            return{\r\n                ...state,\r\n                isBiodataLoading : false,\r\n                Update_Biodata : action.payload,\r\n            }\r\n        case BIODATA_UPDATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        ////// BIODATA-DELETE\r\n        case BIODATA_DELETED:\r\n            return{\r\n                ...state,\r\n            }\r\n        ////// BIODATA ACCOUNT\r\n        case _BUTTON_UPDATE_BIODATA_ACCOUNT_:\r\n            return{\r\n                ...state,\r\n                Update_Biodata_Account_ID :action.payload\r\n            }\r\n        case BIODATA_ACCOUNT_UPDATE_DATA_LOADED:\r\n            return{\r\n                ...state,\r\n                isBiodataLoading : false,\r\n                Update_Biodata_Account : action.payload,\r\n            }\r\n        case BIODATA_ACCOUNT_UPDATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        ////// BIODATA SISWA\r\n        case SISWA_DATA_LOADED:\r\n            return{\r\n                // ...state,\r\n                isBiodataLoading : false,\r\n                Data_Siswa : action.payload\r\n            }\r\n        ////// BIODATA SISWA-CREATE\r\n        case SISWA_BIODATA_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        case SISWA_BIODATA_FAILED_CREATE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case SISWA_ACCOUNT_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        case SISWA_ACCOUNT_FAILED_CREATE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case SISWA_FULLY_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        ////// BIODATA STAFF\r\n        case STAFF_DATA_LOADED:\r\n            return{\r\n                ...state,\r\n                Data_Staff :action.payload\r\n            }\r\n        ////// BIODATA STAFF-CREATE\r\n        case STAFF_BIODATA_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        case STAFF_BIODATA_FAILED_CREATE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case STAFF_ACCOUNT_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        case STAFF_ACCOUNT_FAILED_CREATE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case STAFF_FULLY_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        ////// BIODATA ADMIN\r\n        case ADMIN_DATA_LOADED:\r\n            return{\r\n                ...state,\r\n                Data_Admin :action.payload\r\n            }\r\n        ////// BIODATA ADMIN-CREATE\r\n        case ADMIN_BIODATA_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        case ADMIN_BIODATA_FAILED_CREATE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case ADMIN_ACCOUNT_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        case ADMIN_ACCOUNT_FAILED_CREATE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case ADMIN_FULLY_CREATED:\r\n            return{\r\n                ...state,\r\n            }\r\n        ////// BIODATA ALL\r\n        case ALL_DATA_LOADED:\r\n            return{\r\n                ...state,\r\n                Data_All :action.payload,\r\n            }\r\n        default:return state\r\n    }\r\n}","import {\r\n    ////// POINT-LOADING\r\n    PELANGGARAN_LOADING,\r\n    ////// POINT-PELANGGARAN\r\n    ////// POINT-PELANGGARAN-LIST_LOADED\r\n    PELANGGARAN_LIST_DATA_LOADED,\r\n    ////// POINT-PELANGGARAN-VIEW\r\n    _BUTTON_PELANGGARAN_DETAIL_VIEW_,\r\n    PELANGGARAN_DETAIL_LOADED,\r\n    ////// POINT-PELANGGARAN-CREATE\r\n    PELANGGARAN_CREATED,\r\n    ////// POINT-PELANGGARAN-UPDATE\r\n    _BUTTON_PELANGGARAN_UPDATE_,\r\n    PELANGGARAN_UPDATE_DATA_LOADED,\r\n    PELANGGARAN_UPDATED,\r\n    ////// POINT-PELANGGARAN-DELETE\r\n    PELANGGARAN_DELETED,\r\n    ////// POINT.POINT\r\n    ////// POINT.POINT-LOAD\r\n    POINT_LIST_POINT_LOADED,\r\n    POINT_SCORE_LOADED,\r\n    ////// POINT.POINTUNCONFIRM\r\n    ////// POINT.POINTUNCONFIRM-LOAD\r\n    POINT_POINTUNCONFIRM_LOADED,\r\n    ////// POINT.POINTCONFIRM\r\n    ////// POINT.POINTCONFIRM-LOAD\r\n    POINT_POINTCONFIRM_LOADED,\r\n    ////// POINT.SUBMISSION\r\n    ////// POINT.SUBMISSION-LOAD-DETAIL\r\n    _BUTTON_POINT_DETAIL_VIEW_,\r\n    POINT_POINTSUBMISSION_DETAIL_LOADED,\r\n    ////// POINT.SUBMISSION-CREATE\r\n    POINT_POINTSUBMISSION_CREATED,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    ////// POINT-LOADING\r\n    isPelanggaranLoading: false,\r\n    ////// POINT-PELANGGARAN\r\n    ////// POINT-PELANGGARAN-LIST_LOADED\r\n    Data_Pelanggaran: [],\r\n    ////// POINT-PELANGGARAN-VIEW\r\n    Pelanggaran_ID: null,\r\n    Pelanggaran: null,\r\n    ////// POINT-PELANGGARAN-UPDATE\r\n    Pelanggaran_Update_ID: null,\r\n    Pelanggaran_Update: null,\r\n    ////// POINT.POINT\r\n    ////// POINT.POINT-LOAD\r\n    Point_Point: [],\r\n    Point_Score: null,\r\n    ////// POINT.POINTUNCONFIRM\r\n    ////// POINT.POINTUNCONFIRM-LOAD\r\n    Point_PointUnconfirm: [],\r\n    ////// POINT.POINTCONFIRM\r\n    ////// POINT.POINTCONFIRM-LOAD\r\n    Point_PointConfirm: [],\r\n    ////// POINT.SUBMISSION\r\n    ////// POINT.SUBMISSION-LOAD-DETAIL\r\n    Point_ID: null,\r\n    Point: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        ////// POINT-LOADING\r\n        case PELANGGARAN_LOADING:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: true,\r\n            }\r\n        ////// POINT-PELANGGARAN\r\n        ////// POINT-PELANGGARAN-LIST_LOADED\r\n        case PELANGGARAN_LIST_DATA_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Data_Pelanggaran: action.payload,\r\n            }\r\n        ////// POINT-PELANGGARAN-VIEW\r\n        case _BUTTON_PELANGGARAN_DETAIL_VIEW_:\r\n            return {\r\n                ...state,\r\n                Pelanggaran_ID: action.payload,\r\n            }\r\n        case PELANGGARAN_DETAIL_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Pelanggaran: action.payload,\r\n            }\r\n        ////// POINT-PELANGGARAN-CREATE\r\n        case PELANGGARAN_CREATED:\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// POINT-PELANGGARAN-UPDATE\r\n        case _BUTTON_PELANGGARAN_UPDATE_:\r\n            return {\r\n                ...state,\r\n                Pelanggaran_Update_ID: action.payload,\r\n            }\r\n        case PELANGGARAN_UPDATE_DATA_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Pelanggaran_Update: action.payload,\r\n            }\r\n        case PELANGGARAN_UPDATED:\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// POINT-PELANGGARAN-DELETE\r\n        case PELANGGARAN_DELETED:\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// POINT.POINT\r\n        ////// POINT.POINT-LOAD\r\n        case POINT_LIST_POINT_LOADED:\r\n            return {\r\n                ...state,\r\n                Point_Point: action.payload\r\n            }\r\n        case POINT_SCORE_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Point_Score: action.payload,\r\n            }\r\n        ////// POINT.POINTUNCONFIRM\r\n        ////// POINT.POINTUNCONFIRM-LOAD\r\n        case POINT_POINTUNCONFIRM_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Point_PointUnconfirm: action.payload,\r\n            }\r\n        ////// POINT.POINTCONFIRM\r\n        ////// POINT.POINTCONFIRM-LOAD\r\n        case POINT_POINTCONFIRM_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Point_PointConfirm: action.payload,\r\n            }\r\n        ////// POINT.SUBMISSION\r\n        ////// POINT.SUBMISSION-LOAD-DETAIL\r\n        case _BUTTON_POINT_DETAIL_VIEW_:\r\n            return {\r\n                ...state,\r\n                Point_ID: action.payload,\r\n            }\r\n        case POINT_POINTSUBMISSION_DETAIL_LOADED:\r\n            return {\r\n                ...state,\r\n                isPelanggaranLoading: false,\r\n                Point: action.payload,\r\n            }\r\n        ////// POINT.SUBMISSION-CREATE\r\n        case POINT_POINTSUBMISSION_CREATED:\r\n            return {\r\n                ...state,\r\n            }\r\n        default: return state\r\n    }\r\n}","import {\r\n    ////// PRESTASI\r\n    ////// PRESTASI-LOADING\r\n    PRESTASI_LOADING,\r\n    ////// PRESTASI.INSTANSI\r\n    ////// PRESTASI.INSTANSI-LIST_LOADED\r\n    INSTANSI_LIST_DATA_LOADED,\r\n    ////// PRESTASI.INSTANSI-VIEW\r\n    _BUTTON_INSTANSI_DETAIL_VIEW_,\r\n    INSTANSI_DETAIL_LOADED,\r\n    ////// PRESTASI.INSTANSI-CREATE\r\n    INSTANSI_CREATED,\r\n    ////// PRESTASI.INSTANSI-UPDATE\r\n    _BUTTON_INSTANSI_UPDATE_,\r\n    INSTANSI_UPDATE_DATA_LOADED,\r\n    INSTANSI_UPDATED,\r\n    ////// PRESTASI.INSTANSI-DELETE\r\n    INSTANSI_DELETED,\r\n    ////// PRESTASI.PRESTASI\r\n    ////// PRESTASI.PRESTASI-LOAD\r\n    PRESTASI_LIST_PRESTASI_LOADED,\r\n    PRESTASI_SCORE_LOADED,\r\n    ////// PRESTASI.PRESTASIUNCONFIRM\r\n    ////// PRESTASI.PRESTASIUNCONFIRM-LOAD\r\n    PRESTASI_PRESTASIUNCONFIRM_LOADED,\r\n    ////// PRESTASI.PRESTASICONFIRM\r\n    ////// PRESTASI.PRESTASICONFIRM-LOAD\r\n    PRESTASI_PRESTASICONFIRM_LOADED,\r\n    ////// PRESTASI.SUBMISSION\r\n    ////// PRESTASI.SUBMISSION-LOAD-DETAIL\r\n    _BUTTON_PRESTASI_DETAIL_VIEW_,\r\n    PRESTASI_PRESTASISUBMISSION_DETAIL_LOADED,\r\n    ////// PRESTASI.SUBMISSION-CREATE\r\n    PRESTASI_PRESTASISUBMISSION_CREATED,\r\n} from '../Actions/Type.Actions'\r\n\r\nconst initialState = {\r\n    ////// PRESTASI\r\n    ////// PRESTASI-LOADING\r\n    isPrestasiLoading: false,\r\n    ////// PRESTASI.INSTANSI\r\n    ////// PRESTASI.INSTANSI-LIST_LOADED\r\n    Data_Instansi: [],\r\n    ////// PRESTASI.INSTANSI-VIEW\r\n    Instansi_ID: null,\r\n    Instansi: null,\r\n    ////// PRESTASI.INSTANSI-UPDATE\r\n    Instansi_Update_ID: null,\r\n    Instansi_Update: null,\r\n    ////// PRESTASI.PRESTASI\r\n    ////// PRESTASI.PRESTASI-LOAD\r\n    Prestasi_Prestasi: [],\r\n    Prestasi_Score: null,\r\n    ////// PRESTASI.PRESTASIUNCONFIRM\r\n    ////// PRESTASI.PRESTASIUNCONFIRM-LOAD\r\n    Prestasi_PrestasiUnconfirm: [],\r\n    ////// PRESTASI.PRESTASICONFIRM\r\n    ////// PRESTASI.PRESTASICONFIRM-LOAD\r\n    Prestasi_PrestasiConfirm: [],\r\n    ////// PRESTASI.SUBMISSION\r\n    ////// PRESTASI.SUBMISSION-LOAD-DETAIL\r\n    Prestasi_ID: null,\r\n    Prestasi: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        ////// PRESTASI-LOADING\r\n        case PRESTASI_LOADING:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: true,\r\n            }\r\n        ////// PRESTASI-INSTANSI\r\n        ////// PRESTASI-INSTANSI-LIST_LOADED\r\n        case INSTANSI_LIST_DATA_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Data_Instansi: action.payload,\r\n            }\r\n        ////// PRESTASI-INSTANSI-VIEW\r\n        case _BUTTON_INSTANSI_DETAIL_VIEW_:\r\n            return {\r\n                ...state,\r\n                Instansi_ID: action.payload,\r\n            }\r\n        case INSTANSI_DETAIL_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Instansi: action.payload,\r\n            }\r\n        ////// PRESTASI-INSTANSI-CREATE\r\n        case INSTANSI_CREATED:\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// PRESTASI-INSTANSI-UPDATE\r\n        case _BUTTON_INSTANSI_UPDATE_:\r\n            return {\r\n                ...state,\r\n                Instansi_Update_ID: action.payload,\r\n            }\r\n        case INSTANSI_UPDATE_DATA_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Instansi_Update: action.payload,\r\n            }\r\n        case INSTANSI_UPDATED:\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// PRESTASI-INSTANSI-DELETE\r\n        case INSTANSI_DELETED:\r\n            return {\r\n                ...state,\r\n            }\r\n        ////// PRESTASI.PRESTASI\r\n        ////// PRESTASI.PRESTASI-LOAD\r\n        case PRESTASI_LIST_PRESTASI_LOADED:\r\n            return {\r\n                ...state,\r\n                Prestasi_Prestasi: action.payload,\r\n            }\r\n        case PRESTASI_SCORE_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Prestasi_Score: action.payload\r\n            }\r\n        ////// PRESTASI.PRESTASIUNCONFIRM\r\n        ////// PRESTASI.PRESTASIUNCONFIRM-LOAD\r\n        case PRESTASI_PRESTASIUNCONFIRM_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Prestasi_PrestasiUnconfirm: action.payload,\r\n            }\r\n        ////// PRESTASI.PRESTASICONFIRM\r\n        ////// PRESTASI.PRESTASICONFIRM-LOAD\r\n        case PRESTASI_PRESTASICONFIRM_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Prestasi_PrestasiConfirm: action.payload\r\n            }\r\n        ////// PRESTASI.SUBMISSION\r\n        ////// PRESTASI.SUBMISSION-LOAD-DETAIL\r\n        case _BUTTON_PRESTASI_DETAIL_VIEW_:\r\n            return {\r\n                ...state,\r\n                Prestasi_ID: action.payload,\r\n            }\r\n        case PRESTASI_PRESTASISUBMISSION_DETAIL_LOADED:\r\n            return {\r\n                ...state,\r\n                isPrestasiLoading: false,\r\n                Prestasi: action.payload\r\n            }\r\n        ////// PRESTASI.SUBMISSION-CREATE\r\n        case PRESTASI_PRESTASISUBMISSION_CREATED:\r\n            return {\r\n                ...state,\r\n            }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport Generic_Blog from './Blog.Reducer'\r\nimport Generic_About from './About.Reducer'\r\nimport Generic_Display from './Display.Reducer'\r\n\r\nimport KasirQu_Auth from '../../Components/Cluster/KasirQu/src/Store/Reducers/Auth.Reducer'\r\nimport KasirQu_Account from '../../Components/Cluster/KasirQu/src/Store/Reducers/Account.Reducer'\r\nimport KasirQu_Transaksi from '../../Components/Cluster/KasirQu/src/Store/Reducers/Transaksi.Reducer'\r\nimport KasirQu_JenisBarang from '../../Components/Cluster/KasirQu/src/Store/Reducers/JenisBarang.Reducer'\r\nimport KasirQu_Barang from '../../Components/Cluster/KasirQu/src/Store/Reducers/Barang.Reducer'\r\nimport KasirQu_Help from '../../Components/Cluster/KasirQu/src/Store/Reducers/Help.Reducer'\r\nimport KasirQu_Messages from '../../Components/Cluster/KasirQu/src/Store/Reducers/Messages.Reducer'\r\n\r\n// import Auth from './Auth.Reducer'\r\nimport PrestasiQu_Auth from '../../Components/Cluster/PrestasiQu/src/Store/Reducers/Auth.Reducer'\r\nimport PrestasiQu_Messages from '../../Components/Cluster/PrestasiQu/src/Store/Reducers/Messages.Reducer'\r\nimport PrestasiQu_Biodata from '../../Components/Cluster/PrestasiQu/src/Store/Reducers/Biodata.Reducer'\r\nimport PrestasiQu_Point from '../../Components/Cluster/PrestasiQu/src/Store/Reducers/Point.Reducer'\r\nimport PrestasiQu_Prestasi from '../../Components/Cluster/PrestasiQu/src/Store/Reducers/Prestasi.Reducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    Generic_Blog,\r\n    Generic_About,\r\n    Generic_Display,\r\n\r\n    KasirQu_Auth,\r\n    KasirQu_Account,\r\n    KasirQu_Transaksi,\r\n    KasirQu_JenisBarang,\r\n    KasirQu_Barang,\r\n    KasirQu_Help,\r\n    KasirQu_Messages,\r\n\r\n    PrestasiQu_Auth,\r\n    PrestasiQu_Messages,\r\n    PrestasiQu_Biodata,\r\n    PrestasiQu_Point,\r\n    PrestasiQu_Prestasi,\r\n})\r\n\r\nexport default RootReducer","////// BLOG\r\nexport const BLOG_LOADING = 'BLOG_LOADING'\r\nexport const BLOG_LOADED = 'BLOG_LOADED'\r\nexport const GET_NEWEST_BLOG_LIST = 'GET_NEWEST_BLOG_LIST'\r\nexport const Go_To_Blog_Preview = 'Go_To_Blog_Preview'\r\nexport const GET_BLOG_LIST = 'GET_BLOG_LIST'\r\nexport const GET_FILTERED_BLOG_LIST = 'GET_FILTERED_BLOG_LIST'\r\nexport const GET_BLOG_DETAIL = 'GET_BLOG_DETAIL'\r\nexport const USEABLE_KASIRQU_USER_LIST = 'USEABLE_KASIRQU_USER_LIST'\r\nexport const USEABLE_PRESTASIQU_USER_LIST = 'USEABLE_PRESTASIQU_USER_LIST'\r\n////// ABOUT\r\nexport const ABOUT_LOADING = 'ABOUT_LOADING'\r\nexport const ABOUT_LOADED = 'ABOUT_LOADED'\r\nexport const GET_ABOUT_LIFEPATH_LIST = 'GET_ABOUT_LIFEPATH_LIST'\r\nexport const GET_ABOUT_SKILL_LIST = 'GET_ABOUT_SKILL_LIST'\r\n////// DISPLAY\r\nexport const DARK_MODE = 'DARK_MODE'\r\nexport const HIDE_NAVBAR = 'HIDE_NAVBAR'\r\nexport const CHANGE_THEME = 'CHANGE_THEME'\r\nexport const DEFAULT_THEME = 'DEFAULT_THEME'\r\nexport const RELOAD_PAGE = 'RELOAD_PAGE'","////// MASSAGES\r\nexport const CREATE_MASSAGES = 'CREATE_MASSAGES'\r\nexport const SUCCESS_MASSAGES = 'SUCCESS_MASSAGES'\r\nexport const ERROR_MASSAGES = 'ERROR_MASSAGES'\r\nexport const WARNING_MASSAGES = 'WARNING_MASSAGES'\r\n\r\n////// USER\r\n////// USER-LOGIN\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'//????\r\n////// USER-LOGOUT\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\n////// USER-LOAD_USER\r\nexport const USER_LOADING = 'USER_LOADING'\r\nexport const USER_NOT_LOADING = 'USER_NOT_LOADING'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const USER_EXPIRED = 'USER_EXPIRED'\r\n\r\n////// BIODATA\r\n////// BIODATA-LOADING\r\nexport const BIODATA_LOADING = 'BIODATA_LOADING'\r\nexport const BIODATA_NOT_LOADING = 'BIODATA_NOT_LOADING'\r\n////// BIODATA-LOAD_DETAIL\r\nexport const _BUTTON_DETAIL_VIEW_ = '_BUTTON_DETAIL_VIEW_'\r\nexport const BIODATA_DETAIL_LOADED = 'BIODATA_DETAIL_LOADED'\r\nexport const BIODATA_ACCOUNT_DETAIL_LOADED = 'BIODATA_ACCOUNT_DETAIL_LOADED'\r\n////// BIODATA-UPDATE_BIODATA\r\nexport const _BUTTON_UPDATE_BIODATA_ = '_BUTTON_UPDATE_BIODATA_'\r\nexport const BIODATA_UPDATE_DATA_LOADED = 'BIODATA_UPDATE_DATA_LOADED'\r\nexport const BIODATA_UPDATED = 'BIODATA_UPDATED'\r\n////// BIODATA-DELETE\r\nexport const BIODATA_DELETED = 'BIODATA_DELETED'\r\n////// BIODATA-UPDATE_BIODATA_ACCOUNT\r\nexport const _BUTTON_UPDATE_BIODATA_ACCOUNT_ = '_BUTTON_UPDATE_BIODATA_ACCOUNT_'\r\nexport const BIODATA_ACCOUNT_UPDATE_DATA_LOADED = 'BIODATA_ACCOUNT_UPDATE_DATA_LOADED'\r\nexport const BIODATA_ACCOUNT_UPDATED = 'BIODATA_ACCOUNT_UPDATED'\r\n////// BIODATA-BIODATA.SISWA\r\nexport const SISWA_DATA_LOADED = 'SISWA_DATA_LOADED'\r\n////// BIODATA-BIODATA.SISWA-CREATE\r\nexport const SISWA_BIODATA_CREATED = 'SISWA_BIODATA_CREATED'\r\nexport const SISWA_BIODATA_FAILED_CREATE = 'SISWA_BIODATA_FAILED_CREATE'\r\nexport const SISWA_ACCOUNT_CREATED = 'SISWA_ACCOUNT_CREATED'\r\nexport const SISWA_ACCOUNT_FAILED_CREATE = 'SISWA_ACCOUNT_FAILED_CREATE'\r\nexport const SISWA_FULLY_CREATED = 'SISWA_FULLY_CREATED'\r\n////// BIODATA-BIODATA.STAFF\r\nexport const STAFF_DATA_LOADED = 'STAFF_DATA_LOADED'\r\n////// BIODATA-BIODATA.SISWA-CREATE\r\nexport const STAFF_BIODATA_CREATED = 'STAFF_BIODATA_CREATED'\r\nexport const STAFF_BIODATA_FAILED_CREATE = 'STAFF_BIODATA_FAILED_CREATE'\r\nexport const STAFF_ACCOUNT_CREATED = 'STAFF_ACCOUNT_CREATED'\r\nexport const STAFF_ACCOUNT_FAILED_CREATE = 'STAFF_ACCOUNT_FAILED_CREATE'\r\nexport const STAFF_FULLY_CREATED = 'STAFF_FULLY_CREATED'\r\n////// BIODATA-BIODATA.ADMIN\r\nexport const ADMIN_DATA_LOADED = 'ADMIN_DATA_LOADED'\r\n////// BIODATA-BIODATA.ADMIN-CREATE\r\nexport const ADMIN_BIODATA_CREATED = 'ADMIN_BIODATA_CREATED'\r\nexport const ADMIN_BIODATA_FAILED_CREATE = 'ADMIN_BIODATA_FAILED_CREATE'\r\nexport const ADMIN_ACCOUNT_CREATED = 'ADMIN_ACCOUNT_CREATED'\r\nexport const ADMIN_ACCOUNT_FAILED_CREATE = 'ADMIN_ACCOUNT_FAILED_CREATE'\r\nexport const ADMIN_FULLY_CREATED = 'ADMIN_FULLY_CREATED'\r\n////// BIODATA-BIODATA.ALL\r\nexport const ALL_DATA_LOADED = 'ALL_DATA_LOADED'\r\n\r\n\r\n////// POINT\r\n////// POINT-PELANGGARAN\r\n////// POINT-PELANGGARAN-LOADING\r\nexport const PELANGGARAN_LOADING = 'PELANGGARAN_LOADING'\r\nexport const PELANGGARAN_NOT_LOADING = 'PELANGGARAN_NOT_LOADING'\r\n////// POINT-PELANGGARAN-LIST_LOADED\r\nexport const PELANGGARAN_LIST_DATA_LOADED = 'PELANGGARAN_LIST_DATA_LOADED'\r\n////// POINT-PELANGGARAN-VIEW\r\nexport const _BUTTON_PELANGGARAN_DETAIL_VIEW_ = '_BUTTON_PELANGGARAN_DETAIL_VIEW_'\r\nexport const PELANGGARAN_DETAIL_LOADED = 'PELANGGARAN_DETAIL_LOADED'\r\n////// POINT-PELANGGARAN-CREATE\r\nexport const PELANGGARAN_CREATED = 'PELANGGARAN_CREATED'\r\n////// POINT-PELANGGARAN-UPDATE\r\nexport const _BUTTON_PELANGGARAN_UPDATE_ = '_BUTTON_PELANGGARAN_UPDATE_'\r\nexport const PELANGGARAN_UPDATE_DATA_LOADED = 'PELANGGARAN_UPDATE_DATA_LOADED'\r\nexport const PELANGGARAN_UPDATED = 'PELANGGARAN_UPDATED'\r\n////// POINT-PELANGGARAN-DELETE\r\nexport const PELANGGARAN_DELETED = 'PELANGGARAN_DELETED'\r\n////// POINT.POINT\r\n////// POINT.POINT-LOAD\r\nexport const POINT_LIST_POINT_LOADED = 'POINT_LIST_POINT_LOADED'\r\nexport const POINT_SCORE_LOADED = 'POINT_SCORE_LOADED'\r\n////// POINT.POINTUNCONFIRM\r\n////// POINT.POINTUNCONFIRM-LOAD\r\nexport const POINT_POINTUNCONFIRM_LOADED = 'POINT_POINTUNCONFIRM_LOADED'\r\n////// POINT.POINTCONFIRM\r\n////// POINT.POINTCONFIRM-LOAD\r\nexport const POINT_POINTCONFIRM_LOADED = 'POINT_POINTCONFIRM_LOADED'\r\n////// POINT.SUBMISSION\r\n////// POINT.SUBMISSION-LOAD-DETAIL\r\nexport const _BUTTON_POINT_DETAIL_VIEW_ = '_BUTTON_POINT_DETAIL_VIEW_'\r\nexport const POINT_POINTSUBMISSION_DETAIL_LOADED = 'POINT_POINTSUBMISSION_DETAIL_LOADED'\r\n////// POINT.SUBMISSION-CREATE\r\nexport const POINT_POINTSUBMISSION_CREATED = 'POINT_POINTSUBMISSION_CREATED'\r\n\r\n////// PRESTASI\r\n////// PRESTASI-LOADING\r\nexport const PRESTASI_LOADING = 'PRESTASI_LOADING'\r\nexport const PRESTASI_NOT_LOADING = 'PRESTASI_NOT_LOADING'\r\n////// PRESTASI.INSTANSI\r\n////// PRESTASI.INSTANSI-LIST_LOADED\r\nexport const INSTANSI_LIST_DATA_LOADED = 'INSTANSI_LIST_DATA_LOADED'\r\n////// PRESTASI.INSTANSI-VIEW\r\nexport const _BUTTON_INSTANSI_DETAIL_VIEW_ = '_BUTTON_INSTANSI_DETAIL_VIEW_'\r\nexport const INSTANSI_DETAIL_LOADED = 'INSTANSI_DETAIL_LOADED'\r\n////// PRESTASI.INSTANSI-CREATE\r\nexport const INSTANSI_CREATED = 'INSTANSI_CREATED'\r\n////// PRESTASI.INSTANSI-UPDATE\r\nexport const _BUTTON_INSTANSI_UPDATE_ = '_BUTTON_INSTANSI_UPDATE_'\r\nexport const INSTANSI_UPDATE_DATA_LOADED = 'INSTANSI_UPDATE_DATA_LOADED'\r\nexport const INSTANSI_UPDATED = 'INSTANSI_UPDATED'\r\n////// PRESTASI.INSTANSI-DELETE\r\nexport const INSTANSI_DELETED = 'INSTANSI_DELETED'\r\n////// PRESTASI.PRESTASI\r\n////// PRESTASI.PRESTASI-LOAD\r\nexport const PRESTASI_LIST_PRESTASI_LOADED = 'PRESTASI_LIST_PRESTASI_LOADED'\r\nexport const PRESTASI_SCORE_LOADED = 'PRESTASI_SCORE_LOADED'\r\n////// PRESTASI.PRESTASIUNCONFIRM\r\n////// PRESTASI.PRESTASIUNCONFIRM-LOAD\r\nexport const PRESTASI_PRESTASIUNCONFIRM_LOADED = 'PRESTASI_PRESTASIUNCONFIRM_LOADED'\r\n////// PRESTASI.PRESTASICONFIRM\r\n////// PRESTASI.PRESTASICONFIRM-LOAD\r\nexport const PRESTASI_PRESTASICONFIRM_LOADED = 'PRESTASI_PRESTASICONFIRM_LOADED'\r\n////// PRESTASI.SUBMISSION\r\n////// PRESTASI.SUBMISSION-LOAD-DETAIL\r\nexport const _BUTTON_PRESTASI_DETAIL_VIEW_ = '_BUTTON_PRESTASI_DETAIL_VIEW_'\r\nexport const PRESTASI_PRESTASISUBMISSION_DETAIL_LOADED = 'PRESTASI_PRESTASISUBMISSION_DETAIL_LOADED'\r\n////// PRESTASI.SUBMISSION-CREATE\r\nexport const PRESTASI_PRESTASISUBMISSION_CREATED = 'PRESTASI_PRESTASISUBMISSION_CREATED'","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\nimport RootReducer from './Reducers/Root.Reducer'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst Store = createStore(RootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : f => f))\r\n\r\nexport default Store","import {\r\n    SUCCESS_MESSAGES,\r\n    INFO_MESSAGES,\r\n    WARNING_MESSAGES,\r\n    ERROR_MESSAGES,\r\n    CLEAN_MESSAGES,\r\n} from './Type.Actions'\r\n\r\nexport const Create_Success_Messages = (StatusCode, msg) => (dispatch) => {\r\n    const data = {\r\n        Status: StatusCode ? StatusCode : null,\r\n        msg: msg ? msg : null\r\n    }\r\n    dispatch({\r\n        type: SUCCESS_MESSAGES,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const Create_Info_Messages = (StatusCode, msg) => (dispatch) => {\r\n    const data = {\r\n        Status: StatusCode ? StatusCode : null,\r\n        msg: msg ? msg : null\r\n    }\r\n    dispatch({\r\n        type: INFO_MESSAGES,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const Create_Warning_Messages = (StatusCode, msg) => (dispatch) => {\r\n    const data = {\r\n        Status: StatusCode ? StatusCode : null,\r\n        msg: msg ? msg : null\r\n    }\r\n    dispatch({\r\n        type: WARNING_MESSAGES,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const Create_Error_Messages = (StatusCode, msg) => (dispatch) => {\r\n    const data = {\r\n        Status: StatusCode ? StatusCode : null,\r\n        msg: msg ? msg : null\r\n    }\r\n    dispatch({\r\n        type: ERROR_MESSAGES,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const Clean_Messages = () => (dispatch) => {\r\n    dispatch({ type: CLEAN_MESSAGES })\r\n}","const AccountDataBase = [\r\n    {\r\n        UserName: 'superuser',\r\n        Password: '123',\r\n        token: '1dAqz',\r\n    },\r\n    {\r\n        UserName: 'admin',\r\n        Password: '123',\r\n        token: '2AxxE',\r\n    },\r\n    {\r\n        UserName: 'kasir',\r\n        Password: '123',\r\n        token: '3WsdA',\r\n    },\r\n    {\r\n        UserName: 'kasir1',\r\n        Password: '12345',\r\n        token: '4Kol3',\r\n    },\r\n]\r\n\r\n////// TODO find solution for database, localstorage may be a good idea but i just not sure about it\r\n\r\n// let TokenDataBase = []\r\nconst TokenDataBase = [\r\n    {\r\n        UserName: 'superuser',\r\n        ExpiredDate: null,\r\n        token: '1dAqz',\r\n    },\r\n    {\r\n        UserName: 'admin',\r\n        ExpiredDate: null,\r\n        token: '2AxxE',\r\n    },\r\n    {\r\n        UserName: 'kasir',\r\n        ExpiredDate: null,\r\n        token: '3WsdA',\r\n    },\r\n    {\r\n        UserName: 'kasir1',\r\n        ExpiredDate: null,\r\n        token: '4Kol3',\r\n    },\r\n]\r\n\r\nconst UsersDataBase = [\r\n    {\r\n        _id: '13579',\r\n        UserName: 'superuser',\r\n        Name: 'superuser',\r\n        isActive: true,\r\n        isKasir: true,\r\n        isAdmin: true,\r\n        isSuperUser: true,\r\n        LastActive: new Date(),\r\n        RegisterDate: new Date(),\r\n        ProfilePicture: null,\r\n    },\r\n    {\r\n        _id: '24680',\r\n        UserName: 'admin',\r\n        Name: 'admin',\r\n        isActive: true,\r\n        isKasir: true,\r\n        isAdmin: true,\r\n        isSuperUser: false,\r\n        LastActive: new Date(),\r\n        RegisterDate: new Date(),\r\n        ProfilePicture: null,\r\n    },\r\n    {\r\n        _id: '35791',\r\n        UserName: 'kasir',\r\n        Name: 'kasir',\r\n        isActive: true,\r\n        isKasir: true,\r\n        isAdmin: false,\r\n        isSuperUser: false,\r\n        LastActive: new Date(),\r\n        RegisterDate: new Date(),\r\n        ProfilePicture: null,\r\n    },\r\n    {\r\n        _id: '46802',\r\n        UserName: 'kasir1',\r\n        Name: 'kasir1',\r\n        isActive: true,\r\n        isKasir: true,\r\n        isAdmin: false,\r\n        isSuperUser: false,\r\n        LastActive: new Date(),\r\n        RegisterDate: new Date(),\r\n        ProfilePicture: null,\r\n    },\r\n]\r\n\r\nconst BarangsDataBase = [\r\n    {\r\n        _id: '1',\r\n        Barcode: '1323144320',\r\n        Name: 'Water',\r\n        Jenis: 'Drinks',\r\n        Stok: 3400,\r\n        isDecimal: true,\r\n        HargaModal: 300,\r\n        HargaJual: 500,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 500\r\n            },\r\n            {\r\n                NamaSatuan: \"Box\",\r\n                MinBarang: 40,\r\n                HargaJual: 400\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n    {\r\n        _id: '2',\r\n        Barcode: '1243163710',\r\n        Name: 'Cake',\r\n        Jenis: 'Foods',\r\n        Stok: 34,\r\n        isDecimal: true,\r\n        HargaModal: 30000,\r\n        HargaJual: 40000,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 40000\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n    {\r\n        _id: '3',\r\n        Barcode: '8726141223',\r\n        Name: 'Vanilla',\r\n        Jenis: 'Ice Cream',\r\n        Stok: 300,\r\n        isDecimal: true,\r\n        HargaModal: 2000,\r\n        HargaJual: 2500,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 2500\r\n            },\r\n            {\r\n                NamaSatuan: \"Mini Box\",\r\n                MinBarang: 12,\r\n                HargaJual: 2400\r\n            },\r\n            {\r\n                NamaSatuan: \"Box\",\r\n                MinBarang: 24,\r\n                HargaJual: 2200\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n    {\r\n        _id: '4',\r\n        Barcode: '8221459620',\r\n        Name: 'Marker',\r\n        Jenis: 'Office Stationery',\r\n        Stok: 56,\r\n        isDecimal: true,\r\n        HargaModal: 6000,\r\n        HargaJual: 8000,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 8000\r\n            },\r\n            {\r\n                NamaSatuan: \"Box\",\r\n                MinBarang: 12,\r\n                HargaJual: 7500\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n    {\r\n        _id: '5',\r\n        Barcode: '1132451672',\r\n        Name: 'Tea',\r\n        Jenis: 'Drinks',\r\n        Stok: 80,\r\n        isDecimal: true,\r\n        HargaModal: 6000,\r\n        HargaJual: 7000,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 7000\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n    {\r\n        _id: '6',\r\n        Barcode: '1323148112',\r\n        Name: 'Chocolate',\r\n        Jenis: 'Foods',\r\n        Stok: 40,\r\n        isDecimal: true,\r\n        HargaModal: 10000,\r\n        HargaJual: 12000,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 12000\r\n            },\r\n            {\r\n                NamaSatuan: \"Box\",\r\n                MinBarang: 12,\r\n                HargaJual: 11000\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n    {\r\n        _id: '7',\r\n        Barcode: '1323345720',\r\n        Name: 'Cars',\r\n        Jenis: 'etc',\r\n        Stok: 2,\r\n        isDecimal: true,\r\n        HargaModal: 100000000,\r\n        HargaJual: 300000000,\r\n        SatuanJual: [\r\n            {\r\n                NamaSatuan: \"Pcs\",\r\n                MinBarang: 1,\r\n                HargaJual: 300000000\r\n            },\r\n        ],\r\n        Ket: '',\r\n        BarangPic: null,\r\n    },\r\n]\r\nconst HistorysDataBase = [\r\n    {\r\n        _id: '123',\r\n        UserName: 'superuser',\r\n        Tanggal: new Date(),\r\n        Location: 'JenisBarang',\r\n        Action: 'Add',\r\n        Change: `{ \"NamaJenisBarang\": \"11\", \"Kepemilikan\": \"pribadi\", \"Ket\": null }`,\r\n        Status: true,\r\n    },\r\n    {\r\n        _id: '234',\r\n        UserName: 'superuser',\r\n        Tanggal: new Date(),\r\n        Location: 'JenisBarang',\r\n        Action: 'Update',\r\n        Change: `{ \"_id\": \"5f1217cb3d62e3420043a51c\", \"NamaJenisBarang\": \"11\", \"Kepemilikan\": \"nonpribadi\", \"Ket\": null, \"__v\": 0 }`,\r\n        Status: true,\r\n    },\r\n]\r\nconst JenisBarangsDataBase = [\r\n    {\r\n        _id: '124',\r\n        NamaJenisBarang: 'Drinks',\r\n        Kepemilikan: 'Personal',\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '235',\r\n        NamaJenisBarang: 'Foods',\r\n        Kepemilikan: 'Personal',\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '346',\r\n        NamaJenisBarang: 'Ice Cream',\r\n        Kepemilikan: 'Deposit',\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '457',\r\n        NamaJenisBarang: 'Office Stationery',\r\n        Kepemilikan: 'Personal',\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '568',\r\n        NamaJenisBarang: 'etc',\r\n        Kepemilikan: 'Personal',\r\n        Ket: '',\r\n    },\r\n]\r\nconst TokosDataBase = [\r\n    {\r\n        // Identitas: 'asd',\r\n        NamaToko: 'KasirQu',\r\n        Alamat: 'Woodlea Ridgeway',\r\n        Kontak: '+625391729312',\r\n        Logo: null,\r\n    },\r\n]\r\nconst TransaksisDataBase = [\r\n    {\r\n        _id: '0199',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Belanja',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '1323144320',\r\n                NamaBarang: 'Water',\r\n                Jumlah: 3000,\r\n                HargaModal: 300,\r\n                HargaJual: 500,\r\n                TotalModal: 300 * 3000\r\n            },\r\n        ],\r\n        Diskon: 0,\r\n        PotonganHarga: 0,\r\n        TotalPembayaran: 300 * 3000,\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '0298',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Belanja',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '8726141223',\r\n                NamaBarang: 'Vanilla',\r\n                Jumlah: 250,\r\n                HargaModal: 2000,\r\n                HargaJual: 2500,\r\n                TotalModal: 250 * 2000\r\n            },\r\n            {\r\n                Barcode: '1323345720',\r\n                NamaBarang: 'Cars',\r\n                Jumlah: 2,\r\n                HargaModal: 100000000,\r\n                HargaJual: 300000000,\r\n                TotalModal: 2 * 100000000\r\n            },\r\n        ],\r\n        Diskon: 0,\r\n        PotonganHarga: 0,\r\n        TotalPembayaran: (250 * 2000) + (2 * 100000000),\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '0397',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Transaksi',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '1323345720',\r\n                NamaBarang: 'Cars',\r\n                Satuan: 'Pcs',\r\n                Jumlah: 1,\r\n                HargaSatuan: 300000000,\r\n                TotalBarang: 1,\r\n                HargaTotal: 1 * 300000000\r\n            },\r\n        ],\r\n        Diskon: 10,\r\n        PotonganHarga: 0,\r\n        TotalPembayaran: (1 * 300000000) - ((300000000 * 10) / 100),\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '0496',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Transaksi',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '8221459620',\r\n                NamaBarang: 'Marker',\r\n                Satuan: 'Box',\r\n                Jumlah: 4,\r\n                HargaSatuan: 7500,\r\n                TotalBarang: 4 * 12,\r\n                HargaTotal: 4 * 12 * 7500\r\n            },\r\n        ],\r\n        Diskon: 0,\r\n        PotonganHarga: 0,\r\n        TotalPembayaran: 4 * 12 * 7500,\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '0595',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Transaksi',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '8726141223',\r\n                NamaBarang: 'Vanilla',\r\n                Satuan: 'Pcs',\r\n                Jumlah: 4,\r\n                HargaSatuan: 2500,\r\n                TotalBarang: 4,\r\n                HargaTotal: 4 * 2500\r\n            },\r\n        ],\r\n        Diskon: 0,\r\n        PotonganHarga: 0,\r\n        TotalPembayaran: 4 * 2500,\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '0694',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Transaksi',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '8726141223',\r\n                NamaBarang: 'Vanilla',\r\n                Satuan: 'Box',\r\n                Jumlah: 10,\r\n                HargaSatuan: 2200,\r\n                TotalBarang: 10 * 24,\r\n                HargaTotal: 10 * 24 * 2200\r\n            },\r\n            {\r\n                Barcode: '8726141223',\r\n                NamaBarang: 'Vanilla',\r\n                Satuan: 'Pcs',\r\n                Jumlah: 4,\r\n                HargaSatuan: 2500,\r\n                TotalBarang: 4,\r\n                HargaTotal: 4 * 2500\r\n            },\r\n        ],\r\n        Diskon: 0,\r\n        PotonganHarga: 0,\r\n        TotalPembayaran: (10 * 24 * 2200) + (4 * 2500),\r\n        Ket: '',\r\n    },\r\n    {\r\n        _id: '0793',\r\n        NamaKasir: 'superuser',\r\n        TanggalTransaksi: new Date(),\r\n        Tipe: 'Transaksi',\r\n        DetailTransaksi: [\r\n            {\r\n                Barcode: '1243163710',\r\n                NamaBarang: 'Cake',\r\n                Satuan: 'Pcs',\r\n                Jumlah: 2,\r\n                HargaSatuan: 40000,\r\n                TotalBarang: 2,\r\n                HargaTotal: 2 * 40000\r\n            },\r\n            {\r\n                Barcode: '1323144320',\r\n                NamaBarang: 'Water',\r\n                Satuan: 'Box',\r\n                Jumlah: 20,\r\n                HargaSatuan: 400,\r\n                TotalBarang: 20 * 40,\r\n                HargaTotal: 20 * 40 * 400,\r\n            },\r\n        ],\r\n        Diskon: 0,\r\n        PotonganHarga: 5000,\r\n        TotalPembayaran: (2 * 40000) + (20 * 40 * 400) - 5000,\r\n        Ket: '',\r\n    },\r\n]\r\n\r\n// const ExpiredInHour = 12\r\n\r\nexport const Error_Messages_Standardization = (ErrorCode, MSG) => {\r\n    const ErrorResponse = {\r\n        response: {\r\n            status: ErrorCode ? ErrorCode : 400,\r\n            data: {\r\n                msg: MSG ? MSG : ''\r\n            }\r\n        }\r\n    }\r\n    return ErrorResponse\r\n}\r\nexport const Action_Denied = () => {\r\n    const ActionDenied = {\r\n        status: 200,\r\n        data: {\r\n            msg: 'Cant Perform this Action on a Preview Page'\r\n        }\r\n    }\r\n    return ActionDenied\r\n}\r\n// export const CreateToken = () => {\r\n//     try {\r\n//         const VariableRandomaizer = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n//         let Token = ''\r\n//         let i = 0\r\n//         const Itteration = 10\r\n//         while (i < Itteration) {\r\n//             Token += VariableRandomaizer[Math.floor(Math.random() * VariableRandomaizer.length)]\r\n//             i = i + 1\r\n//         }\r\n//         return Token\r\n//     } catch (err) {\r\n//         console.log('Log: CreateToken -> err', err)\r\n//     }\r\n// }\r\nexport const Database_Log_In = async (UserName, Password) => {\r\n    try {\r\n        if (!UserName || !Password) {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'Data tidak lengkap')\r\n            throw ErrorResponse\r\n        }\r\n        const CorrectUserName = AccountDataBase.findIndex((item) => item.UserName === UserName)\r\n        const CorrectPassword = AccountDataBase.findIndex((item) => item.Password === Password)\r\n\r\n        if (CorrectUserName === CorrectPassword && CorrectUserName >= 0) {\r\n            // const Token = CreateToken()\r\n            // const ThisTime = new Date()\r\n            // const newTokenDataBase = {\r\n            //     token: Token,\r\n            //     ExpiredDate: ThisTime.setHours(ThisTime.getHours() + ExpiredInHour),\r\n            //     UserName: UserName,\r\n            // }\r\n            // TokenDataBase.push(newTokenDataBase)\r\n            const User = UsersDataBase.find((item) => item.UserName === AccountDataBase[CorrectUserName].UserName)\r\n            const Data = {\r\n                // token: Token,\r\n                token: AccountDataBase[CorrectUserName].token,\r\n                user: User\r\n            }\r\n\r\n            return Data\r\n        } else {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'UserName/Password Salah')\r\n            throw ErrorResponse\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Log_In -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nconst Cek_for_Token = async (Token) => {\r\n    try {\r\n        if (!Token) {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'No Token')\r\n            throw ErrorResponse\r\n        }\r\n        // const ThisTIme = new Date()\r\n        // const CorrectToken = TokenDataBase.findIndex((item) => item.token === Token)\r\n        const CorrectToken = TokenDataBase.find((item) => item.token === Token)\r\n        // if (CorrectToken >= 0) {\r\n        if (CorrectToken) {\r\n            // if (TokenDataBase[CorrectToken].ExpiredDate > ThisTIme) {\r\n            //     const Data = {\r\n\r\n            //     }\r\n            //     return Data\r\n            // } else {\r\n            //     TokenDataBase.splice(CorrectToken, 1)\r\n            //     const ErrorResponse = Error_Messages_Standardization(400, 'Token Expired')\r\n            //     throw ErrorResponse\r\n            // }\r\n            return CorrectToken\r\n        } else {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'Token Send are Unregister')\r\n            throw ErrorResponse\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Cek_for_Token -> err', err)\r\n    }\r\n}\r\n\r\nexport const Database_Load_User = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        const User = UsersDataBase.find((item) => item.UserName === CorrectToken.UserName)\r\n        return User\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Account_Detail = async (Token, AccountId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const Account = UsersDataBase.find((item) => item._id === AccountId)\r\n            if (Account) {\r\n                return Account\r\n            } else {\r\n                const ErrorResponse = Error_Messages_Standardization(404, 'Account Not Found')\r\n                throw ErrorResponse\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Account_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const AccountList = UsersDataBase\r\n            return AccountList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Toko_Detail = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const TokoDetail = TokosDataBase[0]\r\n            return TokoDetail\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_History_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const HistoryList = HistorysDataBase\r\n            return HistoryList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_History_Detail = async (Token, HistoryId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const HistoryDetail = HistorysDataBase.find((item) => item._id === HistoryId)\r\n            if (HistoryDetail) {\r\n                return HistoryDetail\r\n            } else {\r\n                const ErrorResponse = Error_Messages_Standardization(404, 'History Detail not Found')\r\n                throw ErrorResponse\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Barang_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const BarangList = BarangsDataBase\r\n            return BarangList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Barang_Detail = async (Token, BarangID) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const BarangDetail = BarangsDataBase.find((item) => item._id === BarangID)\r\n            if (BarangDetail) {\r\n                return BarangDetail\r\n            } else {\r\n                const ErrorResponse = Error_Messages_Standardization(404, 'Barang Detail not Found')\r\n                throw ErrorResponse\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Barang_Base_on_JenisBarang = async (Token, JenisBarangId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const JenisBarangDetail = JenisBarangsDataBase.find((item) => item._id === JenisBarangId)\r\n            if (JenisBarangDetail) {\r\n                const BarangBaseonJenisBarang = []\r\n                BarangsDataBase.forEach(element => {\r\n                    if (element.Jenis === JenisBarangDetail.NamaJenisBarang) {\r\n                        const newBarang = element\r\n                        BarangBaseonJenisBarang.push(newBarang)\r\n                    }\r\n                })\r\n                return BarangBaseonJenisBarang ? BarangBaseonJenisBarang : []\r\n            } else {\r\n                const ErrorResponse = Error_Messages_Standardization(404, 'Barang Detail not Found')\r\n                throw ErrorResponse\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_JenisBarang_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const JenisBarangList = JenisBarangsDataBase\r\n            return JenisBarangList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_JenisBarang_Detail = async (Token, JenisBarangId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const JenisBarangDetail = JenisBarangsDataBase.find((item) => item._id === JenisBarangId)\r\n            if (JenisBarangDetail) {\r\n                return JenisBarangDetail\r\n            } else {\r\n                const ErrorResponse = Error_Messages_Standardization(404, 'JenisBarang Detail not Found')\r\n                throw ErrorResponse\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Transaksi_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const TransaksiList = TransaksisDataBase\r\n            return TransaksiList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Transaksi_Detail = async (Token, TransaksiId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const TransaksiDetail = TransaksisDataBase.find((item) => item._id === TransaksiId)\r\n            if (TransaksiDetail) {\r\n                return TransaksiDetail\r\n            } else {\r\n                const ErrorResponse = Error_Messages_Standardization(404, 'Transaksi Detail not Found')\r\n                throw ErrorResponse\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_IncomeReport_Barang_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const TransaksiLists = TransaksisDataBase.filter((item) => item.Tipe === 'Transaksi')\r\n            const IncomeReportBarangList = []\r\n            TransaksiLists.forEach(element => {\r\n                const DetailTransaksi = element.DetailTransaksi\r\n                DetailTransaksi.forEach(element_element => {\r\n                    const DetailTransaksi_Barcode = element_element.Barcode\r\n                    const DetailTransaksi_NamaBarang = element_element.NamaBarang\r\n                    const DetailTransaksi_TotalBarang = element_element.TotalBarang ? Number(element_element.TotalBarang) : 0\r\n                    const DetailTransaksi_HargaTotal = element_element.HargaTotal ? Number(element_element.HargaTotal) : 0\r\n\r\n                    const IncomeReportBarangListIndex = IncomeReportBarangList.findIndex((item) => item.Barcode === DetailTransaksi_Barcode)\r\n                    if (IncomeReportBarangListIndex >= 0) {\r\n                        IncomeReportBarangList[IncomeReportBarangListIndex].TotalBarang = IncomeReportBarangList[IncomeReportBarangListIndex].TotalBarang + DetailTransaksi_TotalBarang\r\n                        IncomeReportBarangList[IncomeReportBarangListIndex].HargaTotal = IncomeReportBarangList[IncomeReportBarangListIndex].HargaTotal + DetailTransaksi_HargaTotal\r\n                    } else {\r\n                        const newIncomeReportBarangList = {\r\n                            Barcode: DetailTransaksi_Barcode,\r\n                            NamaBarang: DetailTransaksi_NamaBarang,\r\n                            // JenisBarang: DetailBarang_JenisBarang,\r\n                            // ModalBarang: DetailBarang_HargaModal,\r\n                            TotalBarang: DetailTransaksi_TotalBarang,\r\n                            HargaTotal: DetailTransaksi_HargaTotal,\r\n                        }\r\n                        IncomeReportBarangList.push(newIncomeReportBarangList)\r\n                    }\r\n                })\r\n            })\r\n            return IncomeReportBarangList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_IncomeReport_Keuangan_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const IncomeReportKeuanganList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            // console.log(dd)\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const now = new Date(yyyy, mm, i)\r\n                const next = new Date(yyyy, mm, i + 1)\r\n                let KeuntunganHarian = 0\r\n                let DiskonHarian = 0\r\n                let PotonganHargaHarian = 0\r\n                const ListTransaksiHarian = TransaksisDataBase.filter((item) => item.Tipe === 'Transaksi' && item.TanggalTransaksi >= now && item.TanggalTransaksi <= next)\r\n                ListTransaksiHarian.forEach(element => {\r\n                    KeuntunganHarian = KeuntunganHarian + (element.TotalPembayaran ? Number(element.TotalPembayaran) : 0)\r\n                    DiskonHarian = DiskonHarian + (element.Diskon ? Number(element.Diskon) : 0)\r\n                    PotonganHargaHarian = PotonganHargaHarian + (element.PotonganHarga ? Number(element.PotonganHarga) : 0)\r\n                })\r\n                const newIncomeReportKeuanganList = {\r\n                    Tanggal: now.toLocaleDateString(),\r\n                    KeuntunganHarian: KeuntunganHarian,\r\n                    DiskonHarian: DiskonHarian,\r\n                    PotonganHargaHarian: PotonganHargaHarian,\r\n                }\r\n                IncomeReportKeuanganList.push(newIncomeReportKeuanganList)\r\n                i = i + 1\r\n            }\r\n            return IncomeReportKeuanganList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_OutcomeReport_Barang_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const OutcomeReportBarangList = []\r\n            const TransaksiLists = TransaksisDataBase.filter((item) => item.Tipe === 'Belanja')\r\n            TransaksiLists.forEach(element => {\r\n                const DetailTransaksi = element.DetailTransaksi\r\n                DetailTransaksi.forEach(element_element => {\r\n                    const DetailTransaksi_Barcode = element_element.Barcode\r\n                    const DetailTransaksi_NamaBarang = element_element.NamaBarang\r\n                    const DetailTransaksi_Jumlah = element_element.Jumlah ? Number(element_element.Jumlah) : 0\r\n                    const DetailTransaksi_TotalModal = element_element.TotalModal ? Number(element_element.TotalModal) : 0\r\n\r\n                    const OutcomeReportBarangListIndex = OutcomeReportBarangList.findIndex((item) => item.Barcode === DetailTransaksi_Barcode)\r\n                    if (OutcomeReportBarangListIndex >= 0) {\r\n                        OutcomeReportBarangList[OutcomeReportBarangListIndex].Jumlah = OutcomeReportBarangList[OutcomeReportBarangListIndex].Jumlah + DetailTransaksi_Jumlah\r\n                        OutcomeReportBarangList[OutcomeReportBarangListIndex].TotalModal = OutcomeReportBarangList[OutcomeReportBarangListIndex].TotalModal + DetailTransaksi_TotalModal\r\n                    } else {\r\n                        const newOutcomeReportBarangList = {\r\n                            Barcode: DetailTransaksi_Barcode,\r\n                            NamaBarang: DetailTransaksi_NamaBarang,\r\n                            JenisBarang: '',\r\n                            // ModalBarang: DetailBarang_HargaModal,\r\n                            Jumlah: DetailTransaksi_Jumlah,\r\n                            TotalModal: DetailTransaksi_TotalModal,\r\n                        }\r\n                        OutcomeReportBarangList.push(newOutcomeReportBarangList)\r\n                    }\r\n                })\r\n            })\r\n            return OutcomeReportBarangList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_OutcomeReport_Modal_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const OutcomeReportModalList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            // console.log(dd)\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const now = new Date(yyyy, mm, i)\r\n                const next = new Date(yyyy, mm, i + 1)\r\n                let ModalHarian = 0\r\n                const ListTransaksiHarian = TransaksisDataBase.filter((item) => item.Tipe === 'Belanja' && item.TanggalTransaksi >= now && item.TanggalTransaksi <= next)\r\n                ListTransaksiHarian.forEach(element => {\r\n                    ModalHarian = ModalHarian + (element.TotalPembayaran ? Number(element.TotalPembayaran) : 0)\r\n                })\r\n                const newOutcomeReportModalList = {\r\n                    Tanggal: now.toLocaleDateString(),\r\n                    ModalHarian: ModalHarian,\r\n                }\r\n                OutcomeReportModalList.push(newOutcomeReportModalList)\r\n                i = i + 1\r\n            }\r\n            return OutcomeReportModalList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Aset_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const AsetList = BarangsDataBase\r\n            return AsetList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_UangMasuk_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const UangMasukList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const thisDay = new Date(yyyy, mm, i)\r\n                const nextDay = new Date(yyyy, mm, i + 1)\r\n                let UangMasukHarian = 0\r\n                const ListTransaksi = TransaksisDataBase.filter((item) => item.Tipe === 'Transaksi' && item.TanggalTransaksi >= thisDay && item.TanggalTransaksi <= nextDay)\r\n                ListTransaksi.forEach(element => {\r\n                    const ListTransaksi_TotalPembayaran = element.TotalPembayaran ? Number(element.TotalPembayaran) : 0\r\n                    UangMasukHarian = UangMasukHarian + ListTransaksi_TotalPembayaran\r\n                })\r\n                const newUangMasukList = {\r\n                    Tanggal: thisDay.toLocaleDateString(),\r\n                    UangMasuk: UangMasukHarian\r\n                }\r\n                UangMasukList.push(newUangMasukList)\r\n                i = i + 1\r\n            }\r\n            return UangMasukList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_UangKeluar_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const UangKeluarList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const thisDay = new Date(yyyy, mm, i)\r\n                const nextDay = new Date(yyyy, mm, i + 1)\r\n                let UangKeluarHarian = 0\r\n                const ListTransaksi = TransaksisDataBase.filter((item) => item.Tipe === 'Belanja' && item.TanggalTransaksi >= thisDay && item.TanggalTransaksi <= nextDay)\r\n                ListTransaksi.forEach(element => {\r\n                    const ListTransaksi_TotalPembayaran = element.TotalPembayaran ? Number(element.TotalPembayaran) : 0\r\n                    UangKeluarHarian = UangKeluarHarian + ListTransaksi_TotalPembayaran\r\n                })\r\n                const newUangKeluarList = {\r\n                    Tanggal: thisDay.toLocaleDateString(),\r\n                    UangKeluar: UangKeluarHarian\r\n                }\r\n                UangKeluarList.push(newUangKeluarList)\r\n                i = i + 1\r\n            }\r\n\r\n            return UangKeluarList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_UangLose_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const UangLoseList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const thisDay = new Date(yyyy, mm, i)\r\n                const nextDay = new Date(yyyy, mm, i + 1)\r\n                let UangLoseHarian = 0\r\n                const ListTransaksi = TransaksisDataBase.filter((item) => item.Tipe === 'Transaksi' && item.TanggalTransaksi >= thisDay && item.TanggalTransaksi <= nextDay)\r\n                ListTransaksi.forEach(element => {\r\n                    const ListTransaksi_TotalPembayaran = element.TotalPembayaran ? Number(element.TotalPembayaran) : 0\r\n                    let TotalTagihan = 0\r\n                    const ListTransaksi_DetailTransaksi = element.DetailTransaksi ? element.DetailTransaksi : []\r\n                    ListTransaksi_DetailTransaksi.forEach(element_element => {\r\n                        const DetailTransaksi_HargaTotal = element_element.HargaTotal ? Number(element_element.HargaTotal) : 0\r\n                        TotalTagihan = TotalTagihan + DetailTransaksi_HargaTotal\r\n                    })\r\n                    const DivinTransaksi = TotalTagihan - ListTransaksi_TotalPembayaran\r\n                    if (DivinTransaksi > 0) {\r\n                        UangLoseHarian = UangLoseHarian + DivinTransaksi\r\n                    } else {\r\n                        UangLoseHarian = UangLoseHarian + 0\r\n                    }\r\n                })\r\n                const newUangLoseList = {\r\n                    Tanggal: thisDay.toLocaleDateString(),\r\n                    UangLose: UangLoseHarian\r\n                }\r\n                UangLoseList.push(newUangLoseList)\r\n                i = i + 1\r\n            }\r\n            return UangLoseList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_IntensitasTransaksi_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const IntensitasTransaksiList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const thisDay = new Date(yyyy, mm, i)\r\n                const nextDay = new Date(yyyy, mm, i + 1)\r\n                let IntensitasTransaksiHarian = 0\r\n                const ListTransaksi = TransaksisDataBase.filter((item) => item.Tipe === 'Transaksi' && item.TanggalTransaksi >= thisDay && item.TanggalTransaksi <= nextDay)\r\n                ListTransaksi.forEach(element => {\r\n                    IntensitasTransaksiHarian = IntensitasTransaksiHarian + 1\r\n                })\r\n                const newIntensitasTransaksiList = {\r\n                    Tanggal: thisDay.toLocaleDateString(),\r\n                    IntensitasTransaksi: IntensitasTransaksiHarian\r\n                }\r\n                IntensitasTransaksiList.push(newIntensitasTransaksiList)\r\n                i = i + 1\r\n            }\r\n            return IntensitasTransaksiList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_IntensitasBarangTransaksi_List = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const IntensitasBarangTransaksiList = []\r\n            const date = new Date()\r\n            const dd = date.getDate()\r\n            const mm = date.getMonth()\r\n            const yyyy = date.getFullYear()\r\n            let i = 1\r\n            while (i <= dd) {\r\n                const thisDay = new Date(yyyy, mm, i)\r\n                const nextDay = new Date(yyyy, mm, i + 1)\r\n                let IntensitasBarang = []\r\n                const ListTransaksi = TransaksisDataBase.filter((item) => item.Tipe === 'Transaksi' && item.TanggalTransaksi >= thisDay && item.TanggalTransaksi <= nextDay)\r\n                ListTransaksi.forEach(element => {\r\n                    const ListTransaksi_DetailTransaksi = element.DetailTransaksi\r\n                    ListTransaksi_DetailTransaksi.forEach(element_element => {\r\n                        const DetailTransaksi_Barcode = element_element.Barcode\r\n                        const DetailTransaksi_NamaBarang = element_element.NamaBarang\r\n\r\n                        const IndexBarang = IntensitasBarang.findIndex(item => item.Barcode === DetailTransaksi_Barcode)\r\n\r\n                        if (IndexBarang >= 0) {\r\n                            IntensitasBarang[IndexBarang].IntensitasBarangTransaksi = IntensitasBarang[IndexBarang].IntensitasBarangTransaksi + 1\r\n                        } else {\r\n                            const newBarangTransaksiHarian = {\r\n                                Barcode: DetailTransaksi_Barcode,\r\n                                NamaBarang: DetailTransaksi_NamaBarang,\r\n                                IntensitasBarangTransaksi: 1\r\n                            }\r\n                            IntensitasBarang.push(newBarangTransaksiHarian)\r\n                        }\r\n                    })\r\n                })\r\n                const newIntensitasBarangTransaksiList = {\r\n                    Tanggal: thisDay.toLocaleDateString(),\r\n                    IntensitasBarangTransaksi: IntensitasBarang\r\n                }\r\n                IntensitasBarangTransaksiList.push(newIntensitasBarangTransaksiList)\r\n                i = i + 1\r\n            }\r\n            return IntensitasBarangTransaksiList\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const KasirQu_Database_Load_Useable_User_List = async () => {\r\n    try {\r\n        // const TokenDataBaseList = TokenDataBase\r\n        const UseableUserList = UsersDataBase.map((item) => ({ ...item, ...AccountDataBase.find((item_item) => item_item.UserName === item.UserName) }))\r\n        return UseableUserList\r\n    } catch (err) {\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}","import {\r\n    // CREATE_SUPER_USER_SUCCESS,\r\n    DARKMODE_CONFIG,\r\n    AUTH_LOADING,\r\n    AUTH_LOADED,\r\n    SET_NEW_IP,\r\n    LOGIN_SUCCESS,\r\n    USER_LOADED,\r\n    USER_EXPIRED,\r\n    LOGOUT_SUCCESS,\r\n} from '../Actions/Type.Actions'\r\n\r\nimport {\r\n    Create_Error_Messages,\r\n} from './Messages.Actions'\r\n\r\nimport { Database_Log_In, Database_Load_User } from './Database.Actions'\r\n\r\n// export const Get_IpAddres = () => {\r\n//     try {\r\n//         const IpAddres = localStorage.getItem('KasirQU_Server_IpAddres')\r\n//         const Port = localStorage.getItem('KasirQU_Server_Port')\r\n//         const WebSite = localStorage.getItem('KasirQU_Server_WebSite')\r\n//         const Default_IpAddress = '127.0.0.1'\r\n//         const Default_ServerPort = '5000'\r\n//         if (WebSite) {\r\n//             return `http://${WebSite}`\r\n//         } else if (IpAddres || Port) {\r\n//             return `http://${IpAddres ? IpAddres : Default_IpAddress}:${Port ? Port : Default_ServerPort}`\r\n//         } else {\r\n//             return `http://${Default_IpAddress}:${Default_ServerPort}`\r\n//         }\r\n//     } catch (err) {\r\n//         console.log(err)\r\n//     }\r\n// }\r\n\r\n// export const defaultheader = () => {\r\n//     const config = {\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         }\r\n//     }\r\n//     return config\r\n// }\r\n\r\nexport const tokenConfig = (getState) => {\r\n    // GET TOKEN FROM STATE\r\n    const token = getState().KasirQu_Auth.token\r\n\r\n    // // HEADERS\r\n    // const config = {\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     }\r\n    // }\r\n    // // if token, add header\r\n    // if (token) {\r\n    //     config.headers['x-auth-token'] = token\r\n    // }\r\n\r\n    return token\r\n}\r\n\r\n// export const tokenConfigmultipleform = (getState) => {\r\n//     const token = getState().Auth.token\r\n//     const config = {\r\n//         headers: {\r\n//             'Content-Type': 'multipart/form-data'\r\n//             // 'Content-Type':'multipart/form-data;boundary=----WebKitFormBoundaryyrV7KO0BoCBuDbTL'\r\n//         }\r\n//     }\r\n//     if (token) {\r\n//         config.headers['x-auth-token'] = `${token}`\r\n//     }\r\n//     return config\r\n// }\r\n\r\nexport const Config_DarkMode = (isDarkMode) => (dispatch) => {\r\n    dispatch({\r\n        type: DARKMODE_CONFIG,\r\n        payload: !isDarkMode,\r\n    })\r\n}\r\n\r\nexport const First_Time_Use = (UserData, TokoData) => async (dispatch, getState) => {\r\n    dispatch({ type: AUTH_LOADING })\r\n    try {\r\n        const ErrorResponse = {\r\n            response: {\r\n                status: 400,\r\n                data: {\r\n                    msg: 'Cant Use On This Preview'\r\n                }\r\n            }\r\n        }\r\n        throw ErrorResponse\r\n    } catch (err) {\r\n        console.log('Log: First_Time_Use -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: AUTH_LOADED })\r\n    }\r\n}\r\n\r\nexport const LogIn = (UserName, Password, newIp, newPort, newWebSite) => async (dispatch) => {\r\n    // console.log('Log: LogIn -> UserName', UserName)\r\n    // console.log('Log: LogIn -> Password', Password)\r\n    // console.log('Log: LogIn -> NewIp', NewIp)\r\n    dispatch({ type: AUTH_LOADING })\r\n    if (newIp || newPort || newWebSite) {\r\n        dispatch({\r\n            type: SET_NEW_IP,\r\n            payload: { newIp, newPort, newWebSite }\r\n        })\r\n    }\r\n    try {\r\n        const Responses = await Database_Log_In(UserName, Password)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: Responses\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log('Log: LogIn -> err', err)\r\n        if (err.message === 'Network Error') {\r\n            dispatch(Create_Error_Messages(null, 'ada kesalahan pada jaringan yang anda coba akses, silakan isi ip adress yang benar jika di client'))\r\n        } else {\r\n            dispatch(\r\n                Create_Error_Messages(\r\n                    err.response ? (\r\n                        err.response.status ? err.response.status\r\n                            : null) : null,\r\n                    err.response ? (\r\n                        err.response.data.msg ? err.response.data.msg\r\n                            : null) : 'anda tidak terhubung dengan server'\r\n                ))\r\n        }\r\n    }\r\n    dispatch({ type: AUTH_LOADED })\r\n}\r\n\r\nexport const Load_User = () => async (dispatch, getState) => {\r\n    dispatch({ type: AUTH_LOADING })\r\n    try {\r\n        // const Token = tokenConfig(getState)\r\n        const Responses = await Database_Load_User(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: AUTH_LOADED })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log('Log: Load_User -> err', err)\r\n        try {\r\n            if (err.message === 'Network Error') {\r\n                dispatch(Create_Error_Messages(null, 'gagal mendapatkan userdetail, anda tidak terhubung dengan server'))\r\n                dispatch({ type: AUTH_LOADED })\r\n            } else if (err.response.status === 400) {\r\n                dispatch({ type: USER_EXPIRED })\r\n                dispatch({ type: AUTH_LOADED })\r\n            } else {\r\n                dispatch(\r\n                    Create_Error_Messages(\r\n                        err.response ? (\r\n                            err.response.status ? err.response.status\r\n                                : null) : null,\r\n                        err.response ? (\r\n                            err.response.data.msg ? err.response.data.msg\r\n                                : null) : 'anda tidak terhubung dengan server'\r\n                    ))\r\n                dispatch({ type: AUTH_LOADED })\r\n            }\r\n        } catch (err_err) {\r\n            console.log(err_err.response)\r\n            dispatch({ type: AUTH_LOADED })\r\n        }\r\n    }\r\n}\r\n\r\nexport const LogOut = () => (dispatch) => {\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n    })\r\n}","import {\r\n    CREATE_MASSAGES,\r\n    SUCCESS_MASSAGES,\r\n    ERROR_MASSAGES,\r\n    // WARNING_MASSAGES,\r\n} from './Type.Actions'\r\n\r\n// CREATE_MASSAGES\r\nexport const createMassages=msg=>{\r\n    return{\r\n        type:CREATE_MASSAGES,\r\n        payload:msg\r\n    }\r\n}\r\nexport const SuccessMassages = (msg) =>{\r\n    return{\r\n        type : SUCCESS_MASSAGES,\r\n        payload : msg\r\n    }\r\n}\r\nexport const ErrorMassages = (msg) =>{\r\n    return{\r\n        type : ERROR_MASSAGES,\r\n        payload : msg\r\n    }\r\n}","const AccountDataBase = [\r\n    {\r\n        UserName: 'superuser',\r\n        Password: '123',\r\n        token: '1dAqz',\r\n    },\r\n    {\r\n        UserName: 'admin',\r\n        Password: '123',\r\n        token: '2AxxE',\r\n    },\r\n    {\r\n        UserName: 'guru',\r\n        Password: '123',\r\n        token: '3WsdA',\r\n    },\r\n    {\r\n        UserName: 'guru1',\r\n        Password: '1234',\r\n        token: '4ZadA',\r\n    },\r\n    {\r\n        UserName: 'siswa',\r\n        Password: '123',\r\n        token: '5Kol3',\r\n    },\r\n    {\r\n        UserName: 'siswa1',\r\n        Password: '1234',\r\n        token: '6aZQ3',\r\n    },\r\n    {\r\n        UserName: 'siswa2',\r\n        Password: '12345',\r\n        token: '7LaQ1',\r\n    },\r\n]\r\n\r\n// let TokenDataBase = []\r\nconst TokenDataBase = [\r\n    {\r\n        UserName: 'superuser',\r\n        ExpiredDate: null,\r\n        token: '1dAqz',\r\n    },\r\n    {\r\n        UserName: 'admin',\r\n        ExpiredDate: null,\r\n        token: '2AxxE',\r\n    },\r\n    {\r\n        UserName: 'guru',\r\n        ExpiredDate: null,\r\n        token: '3WsdA',\r\n    },\r\n    {\r\n        UserName: 'guru1',\r\n        ExpiredDate: null,\r\n        token: '4ZadA',\r\n    },\r\n    {\r\n        UserName: 'siswa',\r\n        ExpiredDate: null,\r\n        token: '5Kol3',\r\n    },\r\n    {\r\n        UserName: 'siswa1',\r\n        ExpiredDate: null,\r\n        token: '6aZQ3',\r\n    },\r\n    {\r\n        UserName: 'siswa2',\r\n        ExpiredDate: null,\r\n        token: '7LaQ1',\r\n    },\r\n]\r\n\r\nconst UsersDataBase = [\r\n    {\r\n        id: '13579',\r\n        nomerinduk: 'superuser',\r\n        active: true,\r\n        siswa: true,\r\n        staff: true,\r\n        admin: true,\r\n        supervisor: true,\r\n        superuser: true,\r\n        profile: '97531',\r\n    },\r\n    {\r\n        id: '24680',\r\n        nomerinduk: 'admin',\r\n        active: true,\r\n        siswa: true,\r\n        staff: true,\r\n        admin: true,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '86420',\r\n    },\r\n    {\r\n        id: '35791',\r\n        nomerinduk: 'guru',\r\n        active: true,\r\n        siswa: true,\r\n        staff: true,\r\n        admin: false,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '75319',\r\n    },\r\n    {\r\n        id: '46802',\r\n        nomerinduk: 'guru1',\r\n        active: true,\r\n        siswa: true,\r\n        staff: true,\r\n        admin: false,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '64208',\r\n    },\r\n    {\r\n        id: '57913',\r\n        nomerinduk: 'siswa',\r\n        active: true,\r\n        siswa: true,\r\n        staff: false,\r\n        admin: false,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '53197',\r\n    },\r\n    {\r\n        id: '68024',\r\n        nomerinduk: 'siswa1',\r\n        active: true,\r\n        siswa: true,\r\n        staff: false,\r\n        admin: false,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '42086',\r\n    },\r\n    {\r\n        id: '79135',\r\n        nomerinduk: 'siswa2',\r\n        active: true,\r\n        siswa: true,\r\n        staff: false,\r\n        admin: false,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '31975',\r\n    },\r\n]\r\n\r\nconst BiodatasDataBase = [\r\n    {\r\n        id: '97531',\r\n        NomerInduk: 'superuser',\r\n        Nama: 'superuser',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'S3',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 300,\r\n        Status: 'Staf Aktif',\r\n        Profilepicture: null,\r\n    },\r\n    {\r\n        id: '86420',\r\n        NomerInduk: 'admin',\r\n        Nama: 'admin',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'S1',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 300,\r\n        Status: 'Staf Aktif',\r\n        Profilepicture: null,\r\n    },\r\n    {\r\n        id: '75319',\r\n        NomerInduk: 'guru',\r\n        Nama: 'guru',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'S2',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 300,\r\n        Status: 'Guru Aktif',\r\n        Profilepicture: null,\r\n    },\r\n    {\r\n        id: '64208',\r\n        NomerInduk: 'guru1',\r\n        Nama: 'guru1',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'S2',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 300,\r\n        Status: 'Guru Aktif',\r\n        Profilepicture: null,\r\n    },\r\n    {\r\n        id: '53197',\r\n        NomerInduk: 'siswa',\r\n        Nama: 'siswa',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'SMP',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 300,\r\n        Status: 'Siswa Aktif',\r\n        Profilepicture: null,\r\n    },\r\n    {\r\n        id: '42086',\r\n        NomerInduk: 'siswa1',\r\n        Nama: 'siswa1',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'SMP',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 280,\r\n        Status: 'Siswa Aktif',\r\n        Profilepicture: null,\r\n    },\r\n    {\r\n        id: '31975',\r\n        NomerInduk: 'siswa2',\r\n        Nama: 'siswa2',\r\n        Agama: 'Lainnya',\r\n        TempatLahir: 'Indonesia',\r\n        TanggalLahir: new Date(),\r\n        Alamat: 'Woodlea Ridgeway',\r\n        NomerTLP: '+625391729312',\r\n        Email: 'woodlearidgeway@xyz.com',\r\n        PendidikanTerakhir: 'SMP',\r\n        InstansiPendidikanTerakhir: 'Woodlea Ridgeway',\r\n        Point: 350,\r\n        Status: 'Siswa Aktif',\r\n        Profilepicture: null,\r\n    },\r\n]\r\n\r\nconst PelanggaransDataBase = [\r\n    {\r\n        id: '19',\r\n        Nama_Pelanggaran: 'Late',\r\n        Jenis_Pelanggaran: 'Ringan',\r\n        Keterangan_Pelanggaran: 'Late for school',\r\n        Pelanggaran_Point: 10,\r\n    },\r\n    {\r\n        id: '28',\r\n        Nama_Pelanggaran: 'not doing homework',\r\n        Jenis_Pelanggaran: 'Ringan',\r\n        Keterangan_Pelanggaran: '',\r\n        Pelanggaran_Point: 20,\r\n    },\r\n    {\r\n        id: '37',\r\n        Nama_Pelanggaran: 'Fight',\r\n        Jenis_Pelanggaran: 'Sedang',\r\n        Keterangan_Pelanggaran: 'Fighting',\r\n        Pelanggaran_Point: 90,\r\n    },\r\n    {\r\n        id: '46',\r\n        Nama_Pelanggaran: 'Cheat',\r\n        Jenis_Pelanggaran: 'Sedang',\r\n        Keterangan_Pelanggaran: '',\r\n        Pelanggaran_Point: 100,\r\n    },\r\n    {\r\n        id: '55',\r\n        Nama_Pelanggaran: 'Late',\r\n        Jenis_Pelanggaran: 'Berat',\r\n        Keterangan_Pelanggaran: 'Late for school',\r\n        Pelanggaran_Point: 250,\r\n    },\r\n]\r\n\r\nconst PointsDataBase = [\r\n    {\r\n        id: '91',\r\n        Nomer_Induk_Pengaju: 'guru',\r\n        Nama_Pengaju: 'guru',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa',\r\n        Nama_Dituju: 'siswa',\r\n        Point_Awal_Dituju: 300,\r\n        Nama_Pelanggaran: 'not doing homework',\r\n        Jenis_Pelanggaran: 'Ringan',\r\n        Point_Pengurang: 20,\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Accepted',\r\n        Nomer_Induk_Assessor: 'superuser',\r\n        Nama_Assessor: 'superuser',\r\n        Tanggal_Diterima: JSON.stringify(new Date()),\r\n        Point_Akhir: 300 - 20\r\n    },\r\n    {\r\n        id: '82',\r\n        Nomer_Induk_Pengaju: 'guru',\r\n        Nama_Pengaju: 'guru',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa',\r\n        Nama_Dituju: 'siswa',\r\n        Point_Awal_Dituju: 300 - 20,\r\n        Nama_Pelanggaran: 'Fight',\r\n        Jenis_Pelanggaran: 'Sedang',\r\n        Point_Pengurang: 90,\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Menunggu',\r\n        Nomer_Induk_Assessor: null,\r\n        Nama_Assessor: null,\r\n        Tanggal_Diterima: null,\r\n        Point_Akhir: 300 - 20 - 90\r\n    },\r\n    {\r\n        id: '73',\r\n        Nomer_Induk_Pengaju: 'guru1',\r\n        Nama_Pengaju: 'guru1',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa1',\r\n        Nama_Dituju: 'siswa1',\r\n        Point_Awal_Dituju: 300,\r\n        Nama_Pelanggaran: 'Berat',\r\n        Jenis_Pelanggaran: 'Berat',\r\n        Point_Pengurang: 250,\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Menunggu',\r\n        Nomer_Induk_Assessor: null,\r\n        Nama_Assessor: null,\r\n        Tanggal_Diterima: null,\r\n        Point_Akhir: 300 - 250\r\n    },\r\n    {\r\n        id: '64',\r\n        Nomer_Induk_Pengaju: 'guru1',\r\n        Nama_Pengaju: 'guru1',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa1',\r\n        Nama_Dituju: 'siswa1',\r\n        Point_Awal_Dituju: 300,\r\n        Nama_Pelanggaran: 'not doing homework',\r\n        Jenis_Pelanggaran: 'Ringan',\r\n        Point_Pengurang: 20,\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Rejected',\r\n        Nomer_Induk_Assessor: 'superuser',\r\n        Nama_Assessor: 'superuser',\r\n        Tanggal_Diterima: JSON.stringify(new Date()),\r\n        Point_Akhir: 300 - 20\r\n    },\r\n]\r\n\r\nconst InstansisDataBase = [\r\n    {\r\n        id: '01',\r\n        Nama_Instansi: 'KasirQu',\r\n        Jenis_Instansi: 'Education',\r\n        Keterangan_Instansi: '',\r\n    },\r\n    {\r\n        id: '02',\r\n        Nama_Instansi: 'PrestasiQu',\r\n        Jenis_Instansi: 'Goverment',\r\n        Keterangan_Instansi: '',\r\n    },\r\n]\r\n\r\nconst PrestasisDataBase = [\r\n    {\r\n        id: '90',\r\n        Nomer_Induk_Pengaju: 'guru',\r\n        Nama_Pengaju: 'guru',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa2',\r\n        Nama_Dituju: 'siswa2',\r\n        Point_Awal_Dituju: 300,\r\n        Nama_Prestasi: 'Speech Contest',\r\n        No_Sertifikat: '02693128312',\r\n        Katagori_Prestasi: 'Education',\r\n        Tingkatan_Prestasi: 'City',\r\n        Prestasi_Point: 50,\r\n        Nama_Instansi: 'PrestasiQu',\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Accepted',\r\n        Nomer_Induk_Assessor: 'superuser',\r\n        Nama_Assessor: 'superuser',\r\n        Tanggal_Diterima: JSON.stringify(new Date()),\r\n        Point_Akhir: 300 + 50,\r\n    },\r\n    {\r\n        id: '80',\r\n        Nomer_Induk_Pengaju: 'guru1',\r\n        Nama_Pengaju: 'guru1',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa2',\r\n        Nama_Dituju: 'siswa2',\r\n        Point_Awal_Dituju: 350,\r\n        Nama_Prestasi: 'Business Idea Contest',\r\n        No_Sertifikat: '86123976',\r\n        Katagori_Prestasi: 'Business',\r\n        Tingkatan_Prestasi: 'National',\r\n        Prestasi_Point: 150,\r\n        Nama_Instansi: 'KasirQu',\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Menunggu',\r\n        Nomer_Induk_Assessor: null,\r\n        Nama_Assessor: null,\r\n        Tanggal_Diterima: null,\r\n        Point_Akhir: 350 + 150,\r\n    },\r\n    {\r\n        id: '70',\r\n        Nomer_Induk_Pengaju: 'guru',\r\n        Nama_Pengaju: 'guru',\r\n        Tanggal_Pengajuan: JSON.stringify(new Date()),\r\n        Nomer_Induk_Dituju: 'siswa',\r\n        Nama_Dituju: 'siswa',\r\n        Point_Awal_Dituju: 280,\r\n        Nama_Prestasi: 'esay',\r\n        No_Sertifikat: '96298321',\r\n        Katagori_Prestasi: 'Education',\r\n        Tingkatan_Prestasi: 'City',\r\n        Prestasi_Point: 50,\r\n        Nama_Instansi: 'PrestasiQu',\r\n        Lampiran: null,\r\n        Keterangan: '',\r\n        Status: 'Menunggu',\r\n        Nomer_Induk_Assessor: null,\r\n        Nama_Assessor: null,\r\n        Tanggal_Diterima: null,\r\n        Point_Akhir: 280 + 50,\r\n    },\r\n]\r\n\r\n// const ExpiredInHour = 12\r\n\r\nexport const Error_Messages_Standardization = (ErrorCode, MSG) => {\r\n    const ErrorResponse = {\r\n        response: {\r\n            status: ErrorCode ? ErrorCode : 400,\r\n            data: {\r\n                msg: MSG ? MSG : ''\r\n            }\r\n        }\r\n    }\r\n    return ErrorResponse\r\n}\r\nexport const Action_Denied = () => {\r\n    const ActionDenied = {\r\n        status: 200,\r\n        data: {\r\n            msg: 'Cant Perform this Action on a Preview Page'\r\n        }\r\n    }\r\n    return ActionDenied\r\n}\r\n// export const CreateToken = () => {\r\n//     try {\r\n//         const VariableRandomaizer = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n//         let Token = ''\r\n//         let i = 0\r\n//         const Itteration = 10\r\n//         while (i < Itteration) {\r\n//             Token += VariableRandomaizer[Math.floor(Math.random() * VariableRandomaizer.length)]\r\n//             i = i + 1\r\n//         }\r\n//         return Token\r\n//     } catch (err) {\r\n//         console.log('Log: CreateToken -> err', err)\r\n//     }\r\n// }\r\nexport const Database_Log_In = async (UserName, Password) => {\r\n    try {\r\n        if (!UserName || !Password) {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'Data tidak lengkap')\r\n            throw ErrorResponse\r\n        }\r\n        const CorrectUserName = AccountDataBase.findIndex((item) => item.UserName === UserName)\r\n        const CorrectPassword = AccountDataBase.findIndex((item) => item.Password === Password)\r\n\r\n        if (CorrectUserName === CorrectPassword && CorrectUserName >= 0) {\r\n            // const Token = CreateToken()\r\n            // const ThisTime = new Date()\r\n            // const newTokenDataBase = {\r\n            //     token: Token,\r\n            //     ExpiredDate: ThisTime.setHours(ThisTime.getHours() + ExpiredInHour),\r\n            //     UserName: UserName,\r\n            // }\r\n            // TokenDataBase.push(newTokenDataBase)\r\n            const User = UsersDataBase.find((item) => item.UserName === AccountDataBase[CorrectUserName].UserName)\r\n            const Data = {\r\n                // token: Token,\r\n                token: AccountDataBase[CorrectUserName].token,\r\n                user: User\r\n            }\r\n\r\n            return Data\r\n        } else {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'UserName/Password Salah')\r\n            throw ErrorResponse\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Log_In -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nconst Cek_for_Token = async (Token) => {\r\n    try {\r\n        if (!Token) {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'No Token')\r\n            throw ErrorResponse\r\n        }\r\n        // const ThisTIme = new Date()\r\n        // const CorrectToken = TokenDataBase.findIndex((item) => item.token === Token)\r\n        const CorrectToken = TokenDataBase.find((item) => item.token === Token)\r\n        // if (CorrectToken >= 0) {\r\n        if (CorrectToken) {\r\n            // if (TokenDataBase[CorrectToken].ExpiredDate > ThisTIme) {\r\n            //     const Data = {\r\n\r\n            //     }\r\n            //     return Data\r\n            // } else {\r\n            //     TokenDataBase.splice(CorrectToken, 1)\r\n            //     const ErrorResponse = Error_Messages_Standardization(400, 'Token Expired')\r\n            //     throw ErrorResponse\r\n            // }\r\n            return CorrectToken\r\n        } else {\r\n            const ErrorResponse = Error_Messages_Standardization(400, 'Token Send are Unregister')\r\n            throw ErrorResponse\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Cek_for_Token -> err', err)\r\n    }\r\n}\r\n\r\nexport const Database_Load_User = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        const User = UsersDataBase.find((item) => item.nomerinduk === CorrectToken.UserName)\r\n        return User\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Biodata = async (Token, BiodataId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const Biodata = BiodatasDataBase.find((item) => item.id === BiodataId)\r\n            return Biodata\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_User -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Biodata_Account = async (Token, BiodataId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const BiodataAccount = UsersDataBase.find((item) => item.profile === BiodataId)\r\n            return BiodataAccount\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_Biodata_Account -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Siswa = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofSiswa = BiodatasDataBase.filter((item) => item.Status === 'Siswa Aktif' || item.Status === 'Siswa Lulus' || item.Status === 'Siswa Diberhentikan')\r\n            return ListofSiswa\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Biodata_Account -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Staff = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofStaff = BiodatasDataBase.filter((item) => item.Status === 'Guru Aktif' || item.Status === 'Guru Pensiun' || item.Status === 'Guru Diberhentikan')\r\n            return ListofStaff\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Biodata_Account -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Admin = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofAdmin = BiodatasDataBase.filter((item) => item.Status === 'Staf Aktif' || item.Status === 'Staf Pensiun' || item.Status === 'Staf Diberhentikan')\r\n            return ListofAdmin\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Biodata_Account -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_All = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofAll = BiodatasDataBase\r\n            return ListofAll\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Biodata_Account -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Pelanggaran = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofPelanggaran = PelanggaransDataBase\r\n            return ListofPelanggaran\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Pelanggaran -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Pelanggaran_Detail = async (Token, PelanggaranId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const PelanggaranDetail = PelanggaransDataBase.find((item) => item.id === PelanggaranId)\r\n            return PelanggaranDetail\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Pelanggaran -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Point_List_of_Point = async (Token, NomerIndukDituju) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const PelanggaranDetail = PointsDataBase.filter((item) => item.Nomer_Induk_Dituju === NomerIndukDituju)\r\n            return PelanggaranDetail\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Pelanggaran -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Unconfirm_Point = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofUnconfirmPoint = PointsDataBase.filter((item) => item.Status === 'Menunggu')\r\n            return ListofUnconfirmPoint\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Pelanggaran -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Confirm_Point = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofConfirmPoint = PointsDataBase.filter((item) => item.Status === 'Accepted')\r\n            return ListofConfirmPoint\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Confirm_Point -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Point_Submission_Detail = async (Token, PointSubmissionId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const PointSubmissionDetail = PointsDataBase.find((item) => item.id === PointSubmissionId)\r\n            return PointSubmissionDetail\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_Point_Submission_Detail -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Instansi = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofInstansi = InstansisDataBase\r\n            return ListofInstansi\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Instansi -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Instansi_Detail = async (Token, InstansiId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const InstansiDetail = InstansisDataBase.find((item) => item.id === InstansiId)\r\n            return InstansiDetail\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_Instansi_Detail -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Prestasi_List_of_Prestasi = async (Token, BiodataId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const PrestasiListofPrestasi = PrestasisDataBase.find((item) => item.Nomer_Induk_Dituju === BiodataId)\r\n            return PrestasiListofPrestasi\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_PrestasiListofPrestasi -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Unconfirm_Prestasi = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofUnconfirmPrestasi = PrestasisDataBase.filter((item) => item.Status === 'Menunggu')\r\n            return ListofUnconfirmPrestasi\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Unconfirm_Prestasi -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_List_of_Confirm_Prestasi = async (Token) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const ListofConfirmPrestasi = PrestasisDataBase.filter((item) => item.Status === 'Accepted')\r\n            return ListofConfirmPrestasi\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_List_of_Confirm_Prestasi -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const Database_Load_Prestasi_Submission_Detail = async (Token, PrestasiSubmissionId) => {\r\n    try {\r\n        const CorrectToken = await Cek_for_Token(Token)\r\n        if (CorrectToken) {\r\n            const PrestasiSubmissionDetail = PrestasisDataBase.find((item) => item.id === PrestasiSubmissionId)\r\n            return PrestasiSubmissionDetail\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Database_Load_Prestasi_Submission_Detail -> err', err)\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}\r\n\r\nexport const PrestasiQu_Database_Load_Useable_User_List = async () => {\r\n    try {\r\n        // const TokenDataBaseList = TokenDataBase\r\n        const UseableUserList = UsersDataBase.map((item) => ({ ...item, ...AccountDataBase.find((item_item) => item_item.UserName === item.nomerinduk) }))\r\n        return UseableUserList\r\n    } catch (err) {\r\n        const ErrorResponse = err\r\n        throw ErrorResponse\r\n    }\r\n}","import { ErrorMassages } from './Messages.Actions'\r\nimport {\r\n    USER_LOADING,\r\n    USER_NOT_LOADING,\r\n    USER_LOADED,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_SUCCESS,\r\n    USER_EXPIRED,\r\n} from './Type.Actions'\r\n\r\nimport {\r\n    Database_Log_In,\r\n    Database_Load_User,\r\n} from './Database.Actions'\r\n\r\nexport const tokenConfig = (getState) => {\r\n    const token = getState().PrestasiQu_Auth.token\r\n    return token\r\n}\r\n\r\nexport const PrestasiQuLoadUser = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LOADING })\r\n        const Responses = await Database_Load_User(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: PrestasiQuLoadUser -> err', err)\r\n        if (err.response) {\r\n            if (err.response.status === 400) {\r\n                dispatch({ type: USER_EXPIRED })\r\n            } else {\r\n                console.log(err)\r\n            }\r\n        }\r\n        dispatch({ type: USER_NOT_LOADING })\r\n    }\r\n}\r\n\r\nexport const LogIn = (nomerinduk, password) => async (dispatch) => {\r\n    try {\r\n        const Responses = await Database_Log_In(nomerinduk, password)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LogIn -> err', err)\r\n        dispatch(ErrorMassages(err.response.data))\r\n    }\r\n}\r\n\r\nexport const LogOut = () => (dispatch) => {\r\n    dispatch({ type: LOGOUT_SUCCESS })\r\n}","import {\r\n    createMuiTheme,\r\n    createStyles,\r\n} from '@material-ui/core'\r\n\r\n////// INITIALSTATE\r\nexport const initialMUIState = {\r\n    color: {\r\n        // brown and grey\r\n        // https://colorhunt.co/palette/136145\r\n        // dark and green\r\n        // https://colorhunt.co/palette/130443\r\n        // blue light\r\n        // https://colorhunt.co/palette/189745\r\n        // pink\r\n        // https://colorhunt.co/palette/189874\r\n        orange: '#cf7500',\r\n        blue: '#1976d2',\r\n        navGrey: '#2A2E35',\r\n\r\n        // bgcolor_lg: '#f2f1e7',\r\n        bgcolor_lg: '#eeeeee',\r\n        // bgcolor_lg: '#faeee7',\r\n        // bgcolor_lg: '#e7f5f2',\r\n        // bgcolor_lg: '#f0eec9',\r\n\r\n        // bgcolor_dr: '#5c4d4d',\r\n        // bgcolor_dr: '#393e46',\r\n        // bgcolor_dr: '#2A2E35',\r\n        bgcolor_dr: '#222831',\r\n        // bgcolor_dr: '#222222',\r\n        hovercolor_lg: 'rgba(0, 0, 0, 0.04)',\r\n        hovercolor_dr: 'rgba(255, 255, 255, 0.08)',\r\n        // \r\n        navBackground_lg: '#5c4d4d',\r\n        navBackground_dr: '#000000',\r\n        navColor_lg: '#32e0c4',\r\n        navColor_dr: '#a7d129',\r\n        rotextfield_lg: '#E0E0E0',\r\n        rotextfield_dr: '#030912',\r\n        // rotextfield_dr : '#030303',\r\n    },\r\n    units: {\r\n        minWidth_first: 980,\r\n        hight_full: '100vh'\r\n    },\r\n}\r\n////// END-INITIALSTATE\r\n\r\n////// THEME\r\n////// THEME-UNAUTH\r\nexport const MUI_theme_unauth_light = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: {\r\n            main: initialMUIState.color.navColor_lg,\r\n        },\r\n        // text: {\r\n        //     primary: initialMUIState.color.navColor_lg\r\n        // },\r\n        background: {\r\n            default: initialMUIState.color.navBackground_lg\r\n        }\r\n    },\r\n    customTheme: {\r\n        loginpage: {\r\n            background: initialMUIState.color.bgcolor_lg,\r\n            // color: initialMUIState.color.navColor_lg,\r\n        }\r\n    }\r\n})\r\nexport const MUI_theme_unauth_dark = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: initialMUIState.color.navColor_dr,\r\n        },\r\n        // text: {\r\n        //     primary: initialMUIState.color.navColor_dr\r\n        // },\r\n        background: {\r\n            default: initialMUIState.color.navBackground_dr,\r\n        }\r\n    },\r\n    customTheme: {\r\n        loginpage: {\r\n            background: initialMUIState.color.bgcolor_dr,\r\n        },\r\n    }\r\n})\r\n////// END-THEME-UNAUTH\r\n////// THEME-AUTH\r\n////// THEME-MUI_theme_auth_light\r\nexport const MUI_theme_auth_light = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        // primary: {\r\n        //     main: initialMUIState.color.blue,\r\n        // },\r\n        // secondary: {\r\n        //     main: initialMUIState.color.orange,\r\n        // },\r\n        action: {\r\n            hover: initialMUIState.color.hovercolor_lg,\r\n            // hover:'red',\r\n        },\r\n        background: {\r\n            default: initialMUIState.color.bgcolor_lg\r\n        }\r\n    },\r\n    customTheme: {\r\n        navbar: {\r\n            background: initialMUIState.color.navBackground_lg,\r\n            color: initialMUIState.color.navColor_lg,\r\n        },\r\n        navbartext: {\r\n            color: initialMUIState.color.navColor_lg,\r\n        },\r\n        readonlytextfield: {\r\n            backgroundColor: initialMUIState.color.rotextfield_lg,\r\n        },\r\n        menupaper: {\r\n            background: initialMUIState.color.navBackground_lg,\r\n            color: initialMUIState.color.navColor_lg,\r\n        },\r\n        tablehead: {\r\n            background: initialMUIState.color.rotextfield_lg,\r\n        }\r\n    }\r\n})\r\n\r\n////// THEME-MUI_theme_auth_dark\r\nexport const MUI_theme_auth_dark = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        // primary: {\r\n        //     main: initialMUIState.color.orange,\r\n        // },\r\n        // secondary: {\r\n        //     main: initialMUIState.color.blue,\r\n        // },\r\n        action: {\r\n            hover: initialMUIState.color.hovercolor_dr,\r\n        },\r\n        background: {\r\n            default: initialMUIState.color.bgcolor_dr,\r\n        },\r\n    },\r\n    customTheme: {\r\n        navbar: {\r\n            background: initialMUIState.color.navBackground_dr,\r\n            color: initialMUIState.color.navColor_dr,\r\n        },\r\n        navbartext: {\r\n            color: initialMUIState.color.navColor_dr,\r\n        },\r\n        readonlytextfield: {\r\n            backgroundColor: initialMUIState.color.rotextfield_dr,\r\n        },\r\n        menupaper: {\r\n            background: initialMUIState.color.navBackground_dr,\r\n            color: initialMUIState.color.navColor_dr,\r\n        },\r\n        tablehead: {\r\n            background: initialMUIState.color.rotextfield_dr,\r\n        }\r\n    }\r\n})\r\n////// END-THEME-AUTH\r\n////// END-THEME\r\n\r\n////// TEST\r\nexport const test = createStyles({\r\n    root: {\r\n        marginTop: 0,\r\n        top: 0,\r\n\r\n    }\r\n})\r\n////// END-TEST\r\n\r\n////// STYLE\r\n////// STYLE-GLOBAL\r\nexport const MUI_st__Paper = ({\r\n    // border: '1px solid red',\r\n    height: '100vh',\r\n    // backgroundColor: primary,\r\n    // marginTop:0,\r\n    // top:0,\r\n})\r\nexport const MUI_FullWidth = ({\r\n    width: '100%',\r\n})\r\nexport const MUI_HalfWidth = ({\r\n    width: '40%',\r\n})\r\nexport const MUI_VerticalMargin = ({\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n\r\n})\r\nexport const MUI_HorizontalMargin = ({\r\n    marginLeft: '10px',\r\n    marginRight: '10px',\r\n})\r\nexport const MUI_HorizontalHalfMargin = ({\r\n    marginLeft: '5%',\r\n    marginRight: '5%',\r\n})\r\nexport const MUI_HorizontalsmButtonMargin = ({\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n})\r\nexport const MUI_Shadown = ({\r\n    boxShadow: '2px 0 10px -3px #010101',\r\n})\r\n////// END-STYLE-GLOBAL\r\n\r\n////// STYLE\r\n////// STYLE-LOGINPAGE\r\nexport const MUI_st_Login_Container = ({\r\n    // border:'1px solid red',\r\n    marginTop: '5%',\r\n    borderRadius: '30px',\r\n    boxShadow: '2px 0 10px -3px #010101',\r\n    paddingTop: '20px',\r\n    paddingBottom: '40px',\r\n    // minHeight:'100vh',\r\n})\r\n////// END-STYLE-LOGINPAGE\r\n////// STYLE-NAV\r\nexport const MUI_st__Container_SideNav = ({\r\n    // border: '1px solid red',\r\n    marginLeft: '10%',\r\n    marginRight: '0',\r\n    width: '90%',\r\n    // minHeight:'100vh',\r\n    padding: '1%',\r\n})\r\nexport const MUI_st__Container_FlatNav = ({\r\n    // border: '1px solid red',\r\n    padding: '1%',\r\n})\r\n////// STYLE-NAV-SIDENAV\r\nexport const MUI_st_navSideNavbar__ = ({\r\n    // border: '1px solid red',\r\n    height: '100vh',\r\n    minHeight: '100vh',\r\n    maxHeight: '100vh',\r\n    width: '6%',\r\n    // minWidth: '40px',\r\n    top: 0,\r\n    left: 0,\r\n    marginRight: '10px',\r\n    paddingTop: '3%',\r\n    // background: initialMUIState.color.navBackground_dr,\r\n    overflowX: 'visible',\r\n    position: 'fixed',\r\n    display: 'inline-flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    zIndex: 99,\r\n    boxShadow: '4px 0 10px -3px #010101',\r\n    transition: 'left .3s ease',\r\n})\r\n\r\nexport const MUI_st_navSideNavbar_Link = ({\r\n    // border: '1px solid red',\r\n    height: '15vh',\r\n    maxHeight: '15vh',\r\n    minHeight: '15vh',\r\n    width: '90%',\r\n    maxWidth: '90%',\r\n    // minWidth: 0,\r\n    // padding:0,\r\n    // marginLeft: 0,\r\n})\r\n\r\nexport const MUI_st_navSideNavbar_BottomNavigation = ({\r\n    // border: '1px solid blue',\r\n    height: '100%',\r\n    maxHeight: '100%',\r\n    minHeight: '100%',\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    minWidth: 0,\r\n    padding: 0,\r\n    marginLeft: 0,\r\n    // backgroundColor: initialMUIState.color.navBackground_dr,\r\n    // alignItems: 'center',\r\n})\r\n////// END-STYLE-NAV-SIDENAV\r\n////// STYLE-NAV-FLATNAV\r\nexport const MUI_st_navFlatNavbar_logo = ({\r\n    height: '9vh',\r\n    padding: '5px',\r\n    marginLeft: '40%',\r\n    marginRight: '43%'\r\n})\r\nexport const MUI_st_navFlatNavbar_logo_IMG = ({\r\n    height: '12vh',\r\n    borderRadius: '0px 0px 20px 20px'\r\n})\r\n////// END-STYLE-NAV-FLATNAV\r\n////// END-STYLE-NAV\r\n\r\n////// STYLE-MENU\r\nexport const MUI_st_Menu_Paper = ({\r\n    height: '180px',\r\n    width: '180px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    padding: '10%',\r\n    paddingTop: '35%',\r\n    borderRadius: '30px',\r\n    boxShadow: '2px 0 10px -3px #010101',\r\n})\r\n////// END-STYLE-MENU\r\n\r\n////// STYLE-ACCOUNT\r\nexport const MUI_st_Account_Container = ({\r\n    // border:'1px solid red',\r\n    marginTop: '5%',\r\n    borderRadius: '30px',\r\n    boxShadow: '2px 0 10px -3px #010101',\r\n    paddingTop: '20px',\r\n    paddingBottom: '40px',\r\n})\r\n////// STYLE-ACCOUNT-ACCOUNTDETAIL\r\nexport const MUI_st_AccountDetail_Avatar = ({\r\n    // border: '1px solid red',\r\n    width: '25vh',\r\n    height: '25vh',\r\n    // marginTop: '-10px',\r\n    marginRight: 'auto',\r\n    marginBottom: '20px',\r\n    marginLeft: 'auto',\r\n    display: 'block',\r\n    position: 'relative',\r\n    zIndex: 10\r\n})\r\nexport const MUI_st_AccountDetail_TextField = ({\r\n    width: '100%',\r\n    marginBottom: '20px',\r\n    boxShadow: '2px 0 10px -7px #010101',\r\n})\r\n////// END-STYLE-ACCOUNT-ACCOUNTDETAIL\r\n////// END-STYLE-ACCOUNT\r\n////// END-STYLE","export const MUI_Initial_State = {\r\n    units: {\r\n        minWidth_first: 980,\r\n        // hight_full: '100vh'\r\n    },\r\n}","import React, { Fragment } from 'react'\r\n\r\nconst RGBColorBackground = (props) => {\r\n    const DefaultBackgroundColor = props.BackgroundColor ? props.BackgroundColor : '#000000'\r\n    return (\r\n        <Fragment>\r\n            {/* RED */}\r\n            <svg\r\n                viewBox=\"0 0 1440 320\"\r\n                style={{ position: 'relative', zIndex: 0, backgroundColor: DefaultBackgroundColor }}\r\n            >\r\n                <path\r\n                    fill=\"#ff0000\"\r\n                    fillOpacity='1'\r\n                    d=\"M0,96L48,117.3C96,139,192,181,288,202.7C384,224,480,224,576,224C672,224,768,224,864,202.7C960,181,1056,139,1152,122.7C1248,107,1344,117,1392,122.7L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n                >\r\n                </path>\r\n            </svg>\r\n            <svg\r\n                viewBox=\"0 0 1440 320\"\r\n                style={{ marginTop: '-2%', position: 'relative', zIndex: 0, backgroundColor: DefaultBackgroundColor }}\r\n            >\r\n                <path\r\n                    fill=\"#ff0000\"\r\n                    fillOpacity='1'\r\n                    d=\"M0,320L48,288C96,256,192,192,288,149.3C384,107,480,85,576,101.3C672,117,768,171,864,208C960,245,1056,267,1152,245.3C1248,224,1344,160,1392,128L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n                >\r\n                </path>\r\n            </svg>\r\n            {/* GREEN */}\r\n            <svg\r\n                viewBox=\"0 0 1440 320\"\r\n                style={{ marginTop: '-100%', position: 'relative', zIndex: 0 }}\r\n            >\r\n                <path\r\n                    fill=\"#00ff00\"\r\n                    fillOpacity='1'\r\n                    d=\"M0,320L48,288C96,256,192,192,288,149.3C384,107,480,85,576,101.3C672,117,768,171,864,208C960,245,1056,267,1152,245.3C1248,224,1344,160,1392,128L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n                >\r\n                </path>\r\n            </svg>\r\n            <svg\r\n                viewBox=\"0 0 1440 320\"\r\n                style={{ marginTop: '-2%', position: 'relative', zIndex: 0, backgroundColor: DefaultBackgroundColor }}\r\n            >\r\n                <path\r\n                    fill=\"#00ff00\"\r\n                    fillOpacity='1'\r\n                    d=\"M0,320L48,288C96,256,192,192,288,149.3C384,107,480,85,576,101.3C672,117,768,171,864,208C960,245,1056,267,1152,245.3C1248,224,1344,160,1392,128L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n                >\r\n                </path>\r\n            </svg>\r\n            {/* BLUE */}\r\n            <svg\r\n                viewBox=\"0 0 1440 320\"\r\n                style={{ marginTop: '-100%', position: 'relative', zIndex: 0 }}\r\n            >\r\n                <path\r\n                    fill=\"#0000ff\"\r\n                    fillOpacity='1'\r\n                    d=\"M0,320L48,288C96,256,192,192,288,149.3C384,107,480,85,576,101.3C672,117,768,171,864,208C960,245,1056,267,1152,245.3C1248,224,1344,160,1392,128L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n                >\r\n                </path>\r\n            </svg>\r\n            <svg\r\n                viewBox=\"0 0 1440 320\"\r\n                style={{ marginTop: '-2%', position: 'relative', zIndex: 0, backgroundColor: DefaultBackgroundColor }}\r\n            >\r\n                <path\r\n                    fill=\"#0000ff\"\r\n                    fillOpacity='1'\r\n                    d=\"M0,256L48,224C96,192,192,128,288,133.3C384,139,480,213,576,240C672,267,768,245,864,229.3C960,213,1056,203,1152,213.3C1248,224,1344,256,1392,272L1440,288L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n                >\r\n                </path>\r\n            </svg>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RGBColorBackground","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport Store from '../../Store/Store'\r\n\r\nimport { Config_Dark_Mode, Config_Default_Theme, Config_Theme } from '../../Store/Actions/Display.Action'\r\n\r\nimport RGBColorBackground from './RGBColorBackground'\r\nimport { useTheme, Typography, Container, Paper, TextField, Button } from '@material-ui/core'\r\n\r\n// import { Inverting_Color } from './GeneralFuntion'\r\n\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded'\r\nimport NightsStayRoundedIcon from '@material-ui/icons/NightsStayRounded'\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\r\n\r\nconst ChangeTheme = (props) => {\r\n    const theme = useTheme()\r\n    const Navbar = theme.custom.navbar\r\n    const BackgroundPaperColor = theme.palette.background.paper\r\n    const BackgroundDefaultColor = theme.palette.background.default\r\n    const PrimaryColor = theme.palette.primary.main\r\n    const SecondaryColor = theme.palette.secondary.main\r\n    const TextContrastColor = theme.palette.primary.contrastText\r\n    const TextPrimaryColor = theme.palette.text.primary\r\n    const TextSecondaryColor = theme.palette.text.secondary\r\n\r\n    const initialState = {\r\n        Color_Navbar: Navbar,\r\n        Color_BackgroundPaper: BackgroundPaperColor,\r\n        Color_BackgroundDefault: BackgroundDefaultColor,\r\n        Color_PrimaryColor: PrimaryColor,\r\n        Color_SecondaryColor: SecondaryColor,\r\n        Color_TextContrastColor: TextContrastColor,\r\n        Color_TextPrimaryColor: TextPrimaryColor, //FIXME\r\n        Color_TextSecondaryColor: TextSecondaryColor, //FIXME\r\n    }\r\n\r\n    const [state, setState] = React.useState({\r\n        ...initialState,\r\n        isNightModeChange: false,\r\n    })\r\n\r\n    if (state.isNightModeChange) {\r\n        setState({\r\n            ...initialState,\r\n            isNightModeChange: false,\r\n        })\r\n    }\r\n\r\n    const FormOnChange = (E) => {\r\n        setState({ ...state, [E.target.name]: E.target.value })\r\n    }\r\n\r\n    const CloseModal = () => {\r\n        if (props.CloseFuntcion !== null) {\r\n            props.CloseFuntcion()\r\n        } else {\r\n            console.error('CloseFuntcion null')\r\n        }\r\n    }\r\n\r\n    const Change_Dark_Mode = (isDarkMode) => {\r\n        Store.dispatch(\r\n            Config_Dark_Mode(isDarkMode)\r\n        )\r\n        setState({ ...state, isNightModeChange: true })\r\n    }\r\n\r\n    const Set_Theme_to_Default = () => {\r\n        Store.dispatch(\r\n            Config_Default_Theme()\r\n        )\r\n    }\r\n\r\n    const Change_Theme = (e) => {\r\n        e.preventDefault()\r\n        const newTheme = {\r\n            NavbarTheme: state.Color_Navbar !== Navbar ? state.Color_Navbar : null,\r\n            PaperTheme: state.Color_BackgroundPaper !== BackgroundPaperColor ? state.Color_BackgroundPaper : null,\r\n            DefaultTheme: state.Color_BackgroundDefault !== BackgroundDefaultColor ? state.Color_BackgroundDefault : null,\r\n            PrimaryMainTheme: state.Color_PrimaryColor !== PrimaryColor ? state.Color_PrimaryColor : null,\r\n            SecondaryMainTheme: state.Color_SecondaryColor !== SecondaryColor ? state.Color_SecondaryColor : null,\r\n            ContrastTextTheme: state.Color_TextContrastColor !== TextContrastColor ? state.Color_TextContrastColor : null,\r\n            TextPrimaryTheme: state.Color_TextPrimaryColor !== TextPrimaryColor ? state.Color_TextPrimaryColor : null,\r\n            TextSecondaryTheme: state.Color_TextSecondaryColor !== TextSecondaryColor ? state.Color_TextSecondaryColor : null,\r\n        }\r\n        Store.dispatch(\r\n            Config_Theme(newTheme)\r\n        )\r\n    }\r\n\r\n    // const MouseHover = (id) => {\r\n    //     try {\r\n    //         document.getElementById(id).style.backgroundColor = Inverting_Color(SecondaryColor)\r\n    //         document.getElementById(id).style.color = SecondaryColor\r\n    //     } catch (err) {\r\n    //         console.log('Log: MouseHover -> err', err)\r\n    //     }\r\n    // }\r\n    // const MouseOut = (id) => {\r\n    //     try {\r\n    //         document.getElementById(id).style.backgroundColor = SecondaryColor\r\n    //         document.getElementById(id).style.color = TextContrastColor\r\n    //     } catch (err) {\r\n    //         console.log('Log: MouseHover -> err', err)\r\n    //     }\r\n    // }\r\n\r\n    const isNight = props.isDarkMode\r\n    const DayNightStyle = { marginRight: '88%', marginTop: '1%', fontSize: '4vw', cursor: 'pointer' }\r\n    const FormStyle = { width: '100%', padding: '1%', margin: '1%' }\r\n    // console.log(state)\r\n\r\n    return (\r\n        <Fragment>\r\n            <Typography\r\n                align='right'\r\n\r\n            >\r\n                {isNight ?\r\n                    <NightsStayRoundedIcon\r\n                        onClick={() => Change_Dark_Mode(false)}\r\n                        style={{ ...DayNightStyle, color: TextContrastColor }}\r\n                    /> :\r\n                    <WbSunnyRoundedIcon\r\n                        onClick={() => Change_Dark_Mode(true)}\r\n                        style={{ ...DayNightStyle, color: TextContrastColor }}\r\n                    />\r\n                }\r\n                <CloseRoundedIcon\r\n                    onClick={() => CloseModal()}\r\n                    style={{ marginRight: '1%', marginTop: '1%', fontSize: '4vw', cursor: 'pointer', color: TextContrastColor }}\r\n                />\r\n            </Typography>\r\n            <Paper\r\n                variant='outlined'\r\n                style={{ position: 'relative', zIndex: '1', border: 'none', backgroundColor: PrimaryColor, padding: 0, margin: 0 }}\r\n            >\r\n                <RGBColorBackground BackgroundColor={PrimaryColor} />\r\n            </Paper>\r\n            <Container\r\n                style={{ position: 'relative', zIndex: '10', marginTop: '-75%', marginBottom: '5%' }}\r\n            >\r\n                <Paper\r\n                    variant='elevation'\r\n                    style={{ minHeight: '100vh', padding: '3%' }}\r\n                >\r\n                    <form>\r\n                        <TextField type='color' label='Navbar Color' variant='outlined' name='Color_Navbar' value={state.Color_Navbar} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Paper Color' variant='outlined' name='Color_BackgroundPaper' value={state.Color_BackgroundPaper} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Default Background Color' variant='outlined' name='Color_BackgroundDefault' value={state.Color_BackgroundDefault} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Primary Color' variant='outlined' name='Color_PrimaryColor' value={state.Color_PrimaryColor} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Secondary Color' variant='outlined' name='Color_SecondaryColor' value={state.Color_SecondaryColor} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Contrast Text Color' variant='outlined' name='Color_TextContrastColor' value={state.Color_TextContrastColor} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Primary Text Color' variant='outlined' name='Color_TextPrimaryColor' value={state.Color_TextPrimaryColor} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <TextField type='color' label='Secondary Text Color' variant='outlined' name='Color_TextSecondaryColor' value={state.Color_TextSecondaryColor} onChange={(e) => FormOnChange(e)} style={{ ...FormStyle }} />\r\n                        <Button\r\n                            // id='Default_Button'\r\n                            // onMouseOver={() => MouseHover('Default_Button')}\r\n                            // onMouseOut={() => MouseOut('Default_Button')}\r\n                            color='secondary'\r\n                            variant='contained'\r\n                            style={{ ...FormStyle }}\r\n                            onClick={() => Set_Theme_to_Default()}\r\n                        >\r\n                            Set Back to Default\r\n                                </Button>\r\n                        <Button type='submit' color='primary' variant='contained' style={{ ...FormStyle }} onClick={(e) => Change_Theme(e)} >Change Themes</Button>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isDarkMode: state.Generic_Display.isDarkMode\r\n})\r\n\r\nexport default connect(mapStateToProps)(ChangeTheme)","import {\r\n    DARK_MODE,\r\n    HIDE_NAVBAR,\r\n    CHANGE_THEME,\r\n    DEFAULT_THEME,\r\n    RELOAD_PAGE,\r\n} from './Type.Actions'\r\n\r\nexport const Config_Dark_Mode = (isDarkMode) => (dispatch) => {\r\n    dispatch({\r\n        type: DARK_MODE,\r\n        payload: isDarkMode\r\n    })\r\n    dispatch({ type: RELOAD_PAGE })\r\n}\r\n\r\nexport const Hide_Nabar = () => (dispatch) => {\r\n    dispatch({ type: HIDE_NAVBAR })\r\n}\r\n\r\nexport const Config_Theme = (ThemeColor) => (dispatch) => {\r\n    dispatch({\r\n        type: CHANGE_THEME,\r\n        payload: {\r\n            NavbarTheme: ThemeColor.NavbarTheme ? ThemeColor.NavbarTheme : '',\r\n            PaperTheme: ThemeColor.PaperTheme ? ThemeColor.PaperTheme : '',\r\n            DefaultTheme: ThemeColor.DefaultTheme ? ThemeColor.DefaultTheme : '',\r\n            PrimaryMainTheme: ThemeColor.PrimaryMainTheme ? ThemeColor.PrimaryMainTheme : '',\r\n            SecondaryMainTheme: ThemeColor.SecondaryMainTheme ? ThemeColor.SecondaryMainTheme : '',\r\n            ContrastTextTheme: ThemeColor.ContrastTextTheme ? ThemeColor.ContrastTextTheme : '',\r\n            TextPrimaryTheme: ThemeColor.TextPrimaryTheme ? ThemeColor.TextPrimaryTheme : '',\r\n            TextSecondaryTheme: ThemeColor.TextSecondaryTheme ? ThemeColor.TextSecondaryTheme : '',\r\n        }\r\n    })\r\n    dispatch({ type: RELOAD_PAGE })\r\n}\r\n\r\nexport const Config_Default_Theme = () => (dispatch) => {\r\n    dispatch({ type: DEFAULT_THEME, })\r\n    dispatch({ type: RELOAD_PAGE })\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport { Link as GoTo } from 'react-router-dom'\r\n\r\n// import { useMediaQuery, useTheme, AppBar, Typography, Link, Toolbar, IconButton, Drawer, Modal, Paper } from '@material-ui/core'\r\nimport { useMediaQuery, useTheme, AppBar, Typography, Toolbar, IconButton, Drawer, Modal, Paper } from '@material-ui/core'\r\n\r\nimport { MUI_Initial_State } from '../../MUI_Theme_Style'\r\n\r\nimport Logo from '../../IMG/logo_2.png'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded'\r\n\r\nimport ChangeTheme from '../Containers/ChangeTheme'\r\n\r\nconst Navbar = () => {\r\n    const theme = useTheme()\r\n    const NavbarColor = theme.custom.navbar\r\n    const PrimaryColor = theme.palette.primary.main\r\n    const SecondaryColor = theme.palette.secondary.main\r\n    const ContrastTextColor = theme.palette.primary.contrastText\r\n\r\n    const [scrollPosition, setSrollPosition] = useState(0)\r\n    const handleScroll = () => {\r\n        const position = window.pageYOffset\r\n        setSrollPosition(position)\r\n    }\r\n\r\n    const [isModalOpen, setOpen] = React.useState(false)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll, { passive: true })\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    }, [])\r\n\r\n    const MouseHover = (e) => {\r\n        try {\r\n            const Id = e.target.id\r\n            document.getElementById(Id).style.color = SecondaryColor\r\n        } catch (err) {\r\n            console.log('Log: MouseHover -> err', err)\r\n        }\r\n    }\r\n    const MouseOut = (e) => {\r\n        try {\r\n            const Id = e.target.id\r\n            document.getElementById(Id).style.color = ContrastTextColor\r\n        } catch (err) {\r\n            console.log('Log: MouseOut -> err', err)\r\n        }\r\n    }\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n    const Toolbar_Menu = { textDecoration: 'none', color: ContrastTextColor, minWidth: '10%', textAlign: 'center', fontSize: '2vw', padding: '10px' }\r\n    const Logo_Style = { border: '6px solid #900d0d', borderRadius: '15px', width: '20%', height: '100%', padding: '10px', margin: '5px', marginLeft: '5%' }\r\n    const Logo_Image_Style = { width: '100%', height: '100%', marginLeft: '0px' }\r\n\r\n    const FullNavbar = () => {\r\n        return (\r\n            <Fragment>\r\n                <GoTo\r\n                    to='/blog'\r\n                    id='FullNavbar_Blog'\r\n                    onMouseOver={(e) => MouseHover(e)}\r\n                    onMouseOut={(e) => MouseOut(e)}\r\n                    style={{ ...Toolbar_Menu, marginLeft: '40%' }}\r\n                >\r\n                    Blog\r\n                </GoTo>\r\n                <GoTo\r\n                    to='/about'\r\n                    id='FullNavbar_About'\r\n                    onMouseOver={(e) => MouseHover(e)}\r\n                    onMouseOut={(e) => MouseOut(e)}\r\n                    style={{ ...Toolbar_Menu }}\r\n                >\r\n                    About\r\n                </GoTo>\r\n                {/* <Link\r\n                    href='/about'\r\n                    id='FullNavbar_About'\r\n                    onMouseOver={(e) => MouseHover(e)}\r\n                    onMouseOut={(e) => MouseOut(e)}\r\n                    style={{ ...Toolbar_Menu }}\r\n                >\r\n                    About\r\n                </Link> */}\r\n                <Typography\r\n                    id='FullNavbar_ChangeTheme'\r\n                    onMouseOver={(e) => MouseHover(e)}\r\n                    onMouseOut={(e) => MouseOut(e)}\r\n                    onClick={() => handleOpen()}\r\n                    style={{ ...Toolbar_Menu, minWidth: 'auto', marginRight: '5%', cursor: 'pointer' }}\r\n                >\r\n                    Change a Theme?\r\n                </Typography>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const PartialNavbar = () => {\r\n        const [state, setState] = React.useState({\r\n            isDrawerOpen: false,\r\n        })\r\n\r\n        const toggleDrawer = (open) => (event) => {\r\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n                return\r\n            }\r\n            setState({ ...state, isDrawerOpen: open })\r\n        }\r\n\r\n        const drawerlist = (\r\n            <Fragment>\r\n                <AppBar position=\"fixed\" style={{ minHeight: '100vh', backgroundColor: NavbarColor, position: 'fixed' }} >\r\n                    <Toolbar style={{ padding: 0, margin: 0 }}>\r\n                        <GoTo\r\n                            to='/'\r\n                            onClick={toggleDrawer(false)}\r\n                            style={{ ...Logo_Style }}\r\n                        >\r\n                            <img src={Logo} alt='logo' style={{ ...Logo_Image_Style }} />\r\n                        </GoTo>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={toggleDrawer(false)}\r\n                            style={{ marginLeft: '75%' }}\r\n                        >\r\n                            <CloseRoundedIcon style={{ fontSize: '5vw', marginRight: '5%' }} />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    <GoTo\r\n                        to='/about'\r\n                        id='PartialNavbar_drawerlist_About'\r\n                        onMouseOver={(e) => MouseHover(e)}\r\n                        onMouseOut={(e) => MouseOut(e)}\r\n                        onClick={toggleDrawer(false)}\r\n                        style={{ ...Toolbar_Menu, textAlign: 'left', fontSize: '5vw' }}\r\n                    >\r\n                        About\r\n                </GoTo>\r\n                    <GoTo\r\n                        to='/blog'\r\n                        id='PartialNavbar_drawerlist_Blog'\r\n                        onMouseOver={(e) => MouseHover(e)}\r\n                        onMouseOut={(e) => MouseOut(e)}\r\n                        onClick={toggleDrawer(false)}\r\n                        style={{ ...Toolbar_Menu, textAlign: 'left', fontSize: '5vw' }}\r\n                    >\r\n                        Blog\r\n                </GoTo>\r\n                </AppBar>\r\n            </Fragment>\r\n        )\r\n\r\n        return (\r\n            <Fragment>\r\n                <Typography\r\n                    id='PartialNavbar_ChangeTheme'\r\n                    onMouseOver={(e) => MouseHover(e)}\r\n                    onMouseOut={(e) => MouseOut(e)}\r\n                    onClick={() => handleOpen()}\r\n                    style={{ ...Toolbar_Menu, marginLeft: '60%', minWidth: 'auto', cursor: 'pointer' }}\r\n                >\r\n                    Change a Theme?\r\n                </Typography>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" style={{ marginLeft: '1%' }} onClick={toggleDrawer(true)}>\r\n                    <MenuIcon\r\n                        id='PartialNavbar_MenuIcon'\r\n                        style={{ fontSize: '5vw', marginRight: '5%' }}\r\n                    />\r\n                </IconButton>\r\n                <Fragment >\r\n                    <Drawer\r\n                        anchor='top'\r\n                        open={state.isDrawerOpen}\r\n                        onClose={toggleDrawer(false)}\r\n                    >\r\n                        {state.isDrawerOpen ? drawerlist : null}\r\n                    </Drawer>\r\n                </Fragment>\r\n            </Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <AppBar id='NAVBAR' position=\"fixed\" style={{ Height: '15%', boxShadow: scrollPosition ? '0 2px 4px -1px #010101' : 'none', backgroundColor: NavbarColor }} >\r\n                <Toolbar style={{ padding: 0, margin: 0 }}>\r\n                    <GoTo\r\n                        to='/'\r\n                        style={{ ...Logo_Style }}\r\n                    >\r\n                        <img src={Logo} alt='logo' style={{ width: '100%', height: '100%', minWidth: '100%', maxWidth: '100%', minHeight: '100%', maxHeight: '100%', marginLeft: '0px' }} />\r\n                    </GoTo>\r\n                    {isFullNavbar ?\r\n                        <FullNavbar /> :\r\n                        <PartialNavbar />\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Modal\r\n                open={isModalOpen}\r\n                onClose={handleClose}\r\n                style={{\r\n                    overflow: 'auto',\r\n                    display: 'block',\r\n                }}\r\n            >\r\n                <Paper\r\n                    variant='outlined'\r\n                    style={{\r\n                        position: 'absolute',\r\n                        minHeight: '40%',\r\n                        minWidth: '80%',\r\n                        maxWidth: '80%',\r\n                        border: 'none',\r\n                        padding: 0,\r\n                        marginTop: '10%',\r\n                        marginLeft: '10%',\r\n                        marginBottom: \"10%\",\r\n                        borderRadius: '15px',\r\n                        backgroundColor: PrimaryColor,\r\n                    }}\r\n                >\r\n                    <ChangeTheme CloseFuntcion={handleClose} />\r\n                </Paper>\r\n            </Modal>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\n// import Store from '../../Store/Store'\r\nimport Store from '../../../../../../Store/Store'\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\"\r\n\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\n\r\nexport const ToggleLightNight = (props) => {\r\n    const theme = useTheme()\r\n    const [isDarkMode, setChecked] = React.useState((props.isDarkMode === true || props.isDarkMode === 'true') ? true : false)\r\n    const toggleDarkMode = (isDarkMode, dispatch) => {\r\n        setChecked((prev) => !prev)\r\n        Store.dispatch({\r\n            type: \"DARKMODE_CONFIG\",\r\n            payload: !isDarkMode\r\n        })\r\n    }\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormControlLabel\r\n                value=\"bottom\"\r\n                control={<Switch checked={isDarkMode} onChange={() => toggleDarkMode(isDarkMode)} style={theme.customTheme.navbartext} />}\r\n                label=\"Light/Dark\"\r\n                labelPlacement=\"bottom\"\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ToggleLightNight","import React from 'react'\r\n\r\nimport { Link, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\r\nimport { useTheme } from \"@material-ui/core/styles\"\r\nimport { MUI_st_navSideNavbar__, MUI_st_navSideNavbar_Link, MUI_st_navSideNavbar_BottomNavigation } from '../../MUI_theme'\r\nimport logo from '../../IMG/logo.png'\r\n\r\nimport ToggleLightNight from './Toggle_LightNight'\r\n\r\nimport ShoppingCartTwoToneIcon from '@material-ui/icons/ShoppingCartTwoTone'\r\nimport StorageTwoToneIcon from '@material-ui/icons/StorageTwoTone'\r\nimport LiveHelpTwoToneIcon from '@material-ui/icons/LiveHelpTwoTone'\r\nimport AccountBoxTwoToneIcon from '@material-ui/icons/AccountBoxTwoTone'\r\n\r\nconst NavSideNavbar = (props) => {\r\n    const theme = useTheme()\r\n    // const logo = process.env.PUBLIC_URL + '/IMG/logo.png'\r\n    const st_nav = { ...MUI_st_navSideNavbar__, ...theme.customTheme.navbar, }\r\n    const st_btnnav = { ...MUI_st_navSideNavbar_BottomNavigation, ...theme.customTheme.navbar, }\r\n    return (\r\n        // <nav className='NavSideNavbar'>\r\n        <nav style={st_nav}>\r\n            <Link href='/blog/preview/kasirqu/' style={MUI_st_navSideNavbar_Link} underline='none' color='primary'>\r\n                <BottomNavigation showLabels style={st_btnnav}>\r\n                    <BottomNavigationAction icon={<img src={logo} alt='logo kasirqu' className='Navbar-Logo' />} style={theme.customTheme.navbartext} >\r\n                    </BottomNavigationAction >\r\n                </BottomNavigation>\r\n            </Link>\r\n            <Link href='/blog/preview/kasirqu/transaksi' style={MUI_st_navSideNavbar_Link} underline='none'>\r\n                <BottomNavigation showLabels style={st_btnnav}>\r\n                    <BottomNavigationAction label=\"Transaksi\" icon={<ShoppingCartTwoToneIcon style={theme.customTheme.navbar} />} style={theme.customTheme.navbartext} >\r\n                    </BottomNavigationAction >\r\n                </BottomNavigation>\r\n            </Link>\r\n            <Link href='/blog/preview/kasirqu/barang' style={MUI_st_navSideNavbar_Link} underline='none'>\r\n                <BottomNavigation showLabels style={st_btnnav}>\r\n                    <BottomNavigationAction label=\"Barang\" icon={<StorageTwoToneIcon style={theme.customTheme.navbar} />} style={theme.customTheme.navbartext} >\r\n                    </BottomNavigationAction >\r\n                </BottomNavigation>\r\n            </Link>\r\n            <Link href='/blog/preview/kasirqu/help' style={MUI_st_navSideNavbar_Link} underline='none'>\r\n                <BottomNavigation showLabels style={st_btnnav}>\r\n                    <BottomNavigationAction label=\"Help\" icon={<LiveHelpTwoToneIcon style={theme.customTheme.navbar} />} style={theme.customTheme.navbartext} >\r\n                    </BottomNavigationAction >\r\n                </BottomNavigation>\r\n            </Link>\r\n            <Link href='/blog/preview/kasirqu/account' style={MUI_st_navSideNavbar_Link} underline='none'>\r\n                <BottomNavigation showLabels style={st_btnnav}>\r\n                    <BottomNavigationAction label=\"Account\" icon={<AccountBoxTwoToneIcon style={theme.customTheme.navbar} />} style={theme.customTheme.navbartext} >\r\n                    </BottomNavigationAction >\r\n                </BottomNavigation>\r\n            </Link>\r\n            <ToggleLightNight isDarkMode={props.isDarkMode} />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavSideNavbar","import React, { Fragment } from 'react'\r\n\r\nimport { AppBar, Toolbar, IconButton, Link, Drawer, List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core'\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\"\r\nimport { MUI_st_navFlatNavbar_logo, MUI_st_navFlatNavbar_logo_IMG } from '../../MUI_theme'\r\nimport logo from '../../IMG/logo.png'\r\n\r\nimport ToggleLightNight from './Toggle_LightNight'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone'\r\nimport ShoppingCartTwoToneIcon from '@material-ui/icons/ShoppingCartTwoTone'\r\nimport StorageTwoToneIcon from '@material-ui/icons/StorageTwoTone'\r\nimport LiveHelpTwoToneIcon from '@material-ui/icons/LiveHelpTwoTone'\r\nimport AccountBoxTwoToneIcon from '@material-ui/icons/AccountBoxTwoTone'\r\n\r\nconst NavFlatNavbar = (props) => {\r\n    const theme = useTheme()\r\n    const [state, setState] = React.useState({\r\n        isDrawerOpen: false,\r\n    })\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, isDrawerOpen: open });\r\n    }\r\n    const drawerlist = (\r\n        <div>\r\n            <List style={theme.customTheme.navbar}>\r\n                <Link href='/blog/preview/kasirqu/' underline='none' style={theme.customTheme.navbar}>\r\n                    <ListItem button >\r\n                        <ListItemIcon style={theme.customTheme.navbar} ><HomeTwoToneIcon /> </ListItemIcon>\r\n                        <ListItemText primary='Home' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link href='/blog/preview/kasirqu/transaksi' underline='none' style={theme.customTheme.navbar}>\r\n                    <ListItem button >\r\n                        <ListItemIcon style={theme.customTheme.navbar}><ShoppingCartTwoToneIcon /> </ListItemIcon>\r\n                        <ListItemText primary='Transaksi' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link href='/blog/preview/kasirqu/barang' underline='none' style={theme.customTheme.navbar}>\r\n                    <ListItem button >\r\n                        <ListItemIcon style={theme.customTheme.navbar}><StorageTwoToneIcon /> </ListItemIcon>\r\n                        <ListItemText primary='Barang' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link href='/blog/preview/kasirqu/help' underline='none' style={theme.customTheme.navbar}>\r\n                    <ListItem button >\r\n                        <ListItemIcon style={theme.customTheme.navbar}><LiveHelpTwoToneIcon /> </ListItemIcon>\r\n                        <ListItemText primary='Help' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link href='/blog/preview/kasirqu/account' underline='none' style={theme.customTheme.navbar}>\r\n                    <ListItem button >\r\n                        <ListItemIcon style={theme.customTheme.navbar}><AccountBoxTwoToneIcon /> </ListItemIcon>\r\n                        <ListItemText primary='Account' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n            </List>\r\n        </div>\r\n    )\r\n    // const logo = process.env.PUBLIC_URL + '/IMG/logo.png'\r\n    return (\r\n        <div >\r\n            <Fragment >\r\n                <AppBar position=\"fixed\" style={theme.customTheme.navbar}>\r\n                    {/* <AppBar position=\"sticky\"> */}\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Link style={MUI_st_navFlatNavbar_logo} href='/blog/preview/kasirqu/'>\r\n                            <img src={logo} alt='logo kasirqu' style={MUI_st_navFlatNavbar_logo_IMG} />\r\n                        </Link>\r\n                        <ToggleLightNight isDarkMode={props.isDarkMode} />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Toolbar />\r\n                {/* <Toolbar /> */}\r\n            </Fragment>\r\n            <Fragment >\r\n                <Drawer\r\n                    anchor='top'\r\n                    open={state.isDrawerOpen}\r\n                    onClose={toggleDrawer(false)}\r\n                >\r\n                    {state.isDrawerOpen ? drawerlist : null}\r\n                </Drawer>\r\n            </Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavFlatNavbar","import React, { Fragment } from 'react'\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { initialMUIState } from '../../MUI_theme'\r\n\r\nimport NavSideNavbar from './navSideNavbar'\r\nimport NavFlatNavbar from './navFlatNavbar'\r\n\r\nconst Navbar = (props) => {\r\n  const MinWindowWidth = useMediaQuery(`(min-width:${initialMUIState.units.minWidth_first}px)`)\r\n  // const MinWindowWidth = true\r\n  // console.log(props.isDarkMode)\r\n  return (\r\n    <Fragment>\r\n      {\r\n        MinWindowWidth ?\r\n          <NavSideNavbar isDarkMode={props.isDarkMode} /> :\r\n          <NavFlatNavbar isDarkMode={props.isDarkMode} />\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LogOut } from '../../Store/Actions/Auth.Actions'\r\n\r\nimport Logo from '../../IMG/Logo.png'\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        const { isAuthenticated } = this.props.auth\r\n        const NavForGuest = (\r\n            <div>\r\n            </div>\r\n        )\r\n        if (isAuthenticated === false || isAuthenticated === null) {\r\n            return (\r\n                NavForGuest\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light custom-navbar\">\r\n                        <a className=\"navbar-brand nav-logo\" href=\"/blog/preview/prestasiqu\">\r\n                            <img src={Logo} className=\"d-inline-block align-top imgnavbarlogo\" alt=\"logo\" />\r\n                            <label className=\"navbartextlogo\">Prestasi Qu</label>\r\n                        </a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav custom-nav-menu\">\r\n                                <li className=\"nav-item dropdown active custom-nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/blog/preview/prestasiqu/biodata\">\r\n                                        Biodata\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu custom-dropdown-menu\" id=\"biodatadropdown\">\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/biodata/data-siswa\">Data Siswa</a>\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/biodata/data-guru\">Data Guru</a>\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/biodata/data-admin\">Data Admin</a>\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/biodata/data-instansi\">Data Instansi</a>\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/biodata/data-pelanggaran\">Data Pelanggaran</a>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown active custom-nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/blog/preview/prestasiqu/prestasi\">\r\n                                        Prestasi\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu custom-dropdown-menu\">\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/prestasi/pengajuan-prestasi\">Pengajuan Prestasi</a>\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/prestasi/penerimaan-pengajuan-prestasi\">ACC Pengajuan Prestasi</a>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown active custom-nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/blog/preview/prestasiqu/point\">\r\n                                        Point\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu custom-dropdown-menu\">\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/point/pengajuan-point\">Pengajuan Point</a>\r\n                                        <a className=\"dropdown-item custom-dropdown-item\" href=\"/blog/preview/prestasiqu/point/penerimaan-pengajuan-point\">ACC Pengajuan Point</a>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item active custom-nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/blog/preview/prestasiqu/logout\">Logout</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.PrestasiQu_Auth\r\n})\r\nexport default connect(mapStateToProps, { LogOut })(Navbar)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Clean_Messages } from '../../Store/Actions/Messages.Actions'\r\n\r\nimport { Snackbar } from '@material-ui/core'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\n\r\nexport class Messages extends React.Component {\r\n    handleClick = () => {\r\n        this.setState({ isSnackbarOpen: true })\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        this.props.Clean_Messages()\r\n    }\r\n    render() {\r\n        const vertical = 'bottom'\r\n        const horizontal = 'left'\r\n        const { isMessages, MessagesType, MessagesCode, Messages } = this.props.messages\r\n        return (\r\n            <div>\r\n                <Snackbar open={isMessages} autoHideDuration={2400} onClose={this.handleClose} anchorOrigin={{ vertical, horizontal }}>\r\n                    <MuiAlert onClose={this.handleClose} severity={MessagesType ? MessagesType : 'info'} elevation={10} variant=\"filled\">\r\n                        {MessagesCode ? MessagesCode : ''} :&emsp;\r\n                        {Messages ? Messages : ''}\r\n                    </MuiAlert>\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    messages: state.KasirQu_Messages\r\n})\r\n\r\nexport default connect(mapStateToProps, { Clean_Messages })(Messages)\r\n","import React from 'react'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nclass Massages extends React.Component{\r\n    render(){\r\n        const {isMassages,MassagesType, Massages} = this.props.messages\r\n\r\n        const successalerts = (\r\n            <div className='custom-alerts'>\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                 {Massages ? Massages : null}\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n        const warningalerts = (\r\n            <div className='custom-alerts'>\r\n                <div className=\"alert alert-warning\" role=\"alert\">\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    {Massages ? Massages : null}\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n        const dangeralerts = (\r\n            <div className='custom-alerts'>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    {Massages ? (\r\n                        <div>\r\n                            {/* {Object.keys(Massages)} */}\r\n                            {/* {Object.keys(Massages).map(Massage=>Massages[Massage])} */}\r\n                            {Object.keys(Massages).map(Massage => (\r\n                                <div key={Massage}>\r\n                                    <li key={Massage}>{Massage}:{Massages[Massage]}</li>\r\n                                </div>\r\n                            ))}\r\n                        </div>)\r\n                        : null}\r\n                    {/* {Massages ? (console.log('ada kesalahan',Massages)):null} */}\r\n                </div>\r\n            </div>\r\n        )\r\n        const infoalerts = (\r\n            <div className='custom-alerts'>\r\n                <div className=\"alert alert-info\" role=\"alert\">\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    {Massages ? Massages : null}\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n        if (isMassages === true){\r\n            if (MassagesType === 'SUCCESS'){\r\n                return(successalerts)\r\n            }else if (MassagesType === 'WARNING'){\r\n                return (warningalerts)\r\n            }else if (MassagesType === 'ERROR'){\r\n                return (dangeralerts)\r\n            }else{\r\n                return (infoalerts)\r\n            }\r\n        }else{\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    messages:state.PrestasiQu_Messages\r\n  })\r\n\r\nexport default connect(mapStateToProps,{})(Massages)\r\n","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { useTheme, Paper, Container, Typography } from '@material-ui/core'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nconst Introduce = (props) => {\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    useEffect(() => {\r\n        const AnimatedId = props.TextclassName ? `.${props.TextclassName}` : '.Introduce'\r\n        if (document.querySelector(AnimatedId)) {\r\n            gsap.fromTo(AnimatedId, {\r\n                opacity: 0,\r\n                y: -50,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: AnimatedId,\r\n                    toggleActions: 'restart none none none'\r\n                },\r\n                opacity: 1,\r\n                y: 0,\r\n                duration: 1,\r\n            })\r\n        }\r\n    })\r\n\r\n    const theme = useTheme()\r\n    const NavbarColor = theme.custom.navbar\r\n    const ContrastTextColor = theme.palette.primary.contrastText\r\n\r\n    return (\r\n        <Fragment >\r\n            <Paper\r\n                variant=\"outlined\"\r\n                style={\r\n                    props.PaperStyle ?\r\n                        props.PaperStyle\r\n                        : { border: 'none', paddingTop: '10%', paddingBottom: '1%', backgroundColor: NavbarColor, borderRadius: '0', position: 'relative', zIndex: 1 }\r\n                }\r\n            >\r\n                <Container>\r\n                    <Typography\r\n                        align={props.TextAligin ? props.TextAligin : 'center'}\r\n                        variant={props.TextVariant ? props.TextVariant : 'h4'}\r\n                        className={props.TextclassName ? props.TextclassName : 'Introduce'}\r\n                        style={\r\n                            props.TextStyle ?\r\n                                props.TextStyle\r\n                                : { color: ContrastTextColor }\r\n                        }\r\n                    >\r\n                        {props.Description ? props.Description : ''}\r\n                    </Typography>\r\n                </Container>\r\n            </Paper>\r\n            {props.SVG ?\r\n                props.SVG\r\n                : (props.SVG !== 'none' ?\r\n                    <svg\r\n                        viewBox={props.SVGViewBox ?\r\n                            props.SVGViewBox\r\n                            : \"0 0 1440 320\"\r\n                        }\r\n                        style={\r\n                            props.SVGStyle ?\r\n                                props.SVGStyle\r\n                                : {\r\n                                    ...{ marginTop: '-1%', position: 'relative', zIndex: 0 },\r\n                                    ...props.AditionalSVGStyle ? props.AditionalSVGStyle : {}\r\n                                }\r\n                        }\r\n                    >\r\n                        <path\r\n                            fill={props.SVGColor ?\r\n                                props.SVGColor\r\n                                : NavbarColor\r\n                            }\r\n                            fillOpacity={props.SVGFill ?\r\n                                props.SVGFill\r\n                                : \"1\"\r\n                            }\r\n                            d={\r\n                                props.SVGd ?\r\n                                    props.SVGd\r\n                                    : \"M0,64L48,80C96,96,192,128,288,128C384,128,480,96,576,106.7C672,117,768,171,864,181.3C960,192,1056,160,1152,165.3C1248,171,1344,213,1392,234.7L1440,256L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n                            }\r\n                        >\r\n                        </path>\r\n                    </svg>\r\n                    : null\r\n                )}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Introduce","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { Link as GoTo } from 'react-router-dom'\r\n\r\nimport { useTheme, Container, Paper, Typography } from '@material-ui/core'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nconst OpeningPanel = (props) => {\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    useEffect(() => {\r\n        const IdforGSAP = props.id ? `.${props.id}` : '.OpeningPanel'\r\n        if (document.querySelector(IdforGSAP)) {\r\n            gsap.fromTo(IdforGSAP, {\r\n                opacity: 0,\r\n                y: 50,\r\n                duration: 1\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: IdforGSAP,\r\n                    toggleActions: 'restart none none none'\r\n                },\r\n                opacity: 1,\r\n                y: 0,\r\n            })\r\n        }\r\n    })\r\n\r\n    const theme = useTheme()\r\n    // const NavbarColor = theme.custom.navbar\r\n    // const PrimaryColor = theme.palette.primary.main\r\n    // const SecondaryColor = theme.palette.secondary.main\r\n    // const ContrastTextColor = theme.palette.primary.contrastText\r\n    const PrimaryTextColor = theme.palette.text.primary\r\n    const SecondaryTextColor = theme.palette.text.secondary\r\n    return (\r\n        <Container\r\n            id={props.id ? props.id : 'OpeningPanel'}\r\n            className={props.id ? props.id : 'OpeningPanel'}\r\n            style={props.ContainerStyle ?\r\n                props.ContainerStyle\r\n                : {\r\n                    ...{ marginTop: '-18%', position: 'relative', zIndex: 5 },\r\n                    ...props.AditionalContainerStyle ? props.AditionalContainerStyle : {}\r\n                }\r\n            }\r\n        >\r\n            <Paper\r\n                variant='elevation'\r\n                style={\r\n                    props.PaperStyle ?\r\n                        props.PaperStyle\r\n                        : {\r\n                            ...{ minHeight: '50vh', padding: '20px', borderRadius: '20px', boxShadow: '0 2px 4px -1px #010101' },\r\n                            ...props.AditionalPaperStyle ? props.AditionalPaperStyle : {}\r\n                        }\r\n                }\r\n            >\r\n                {props.UnUsualContent ? props.UnUsualContent : (\r\n                    <Fragment>\r\n                        {props.Title ? (\r\n                            <Typography\r\n                                variant='h1'\r\n                                align={props.TitleAlign ? props.TitleAlign : 'center'}\r\n                                style={\r\n                                    props.TitleStyle ?\r\n                                        props.TitleStyle\r\n                                        : {\r\n                                            ...{ fontSize: '4vw' },\r\n                                            ...props.AditionalTitleStyle ? props.AditionalTitleStyle : {}\r\n                                        }\r\n                                }\r\n                            >\r\n                                {props.TitleLink ? (\r\n                                    <GoTo\r\n                                        to={props.TitleLink}\r\n                                        style={{\r\n                                            ...{ textDecoration: 'none', color: PrimaryTextColor },\r\n                                            ...props.TitleStyle ? props.TitleStyle : {}\r\n                                        }}\r\n                                    >\r\n                                        {props.Title}\r\n                                    </GoTo>\r\n                                ) : props.Title}\r\n                            </Typography>)\r\n                            : null}\r\n\r\n                        {props.Description ? (\r\n                            <Typography\r\n                                variant='subtitle1'\r\n                                align={props.DescriptionAlign ? props.DescriptionAlign : 'center'}\r\n                                style={\r\n                                    props.DescriptionStyle ?\r\n                                        props.DescriptionStyle\r\n                                        : {\r\n                                            ...{ fontSize: '2vw', color: SecondaryTextColor },\r\n                                            ...props.AditionalDescriptionStyle ? props.AditionalDescriptionStyle : {}\r\n                                        }\r\n                                }\r\n                            >\r\n                                {props.Description}\r\n                            </Typography>)\r\n                            : null}\r\n                    </Fragment>\r\n                )}\r\n            </Paper>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default OpeningPanel","import {\r\n    BLOG_LOADING,\r\n    BLOG_LOADED,\r\n    GET_NEWEST_BLOG_LIST,\r\n    Go_To_Blog_Preview,\r\n    GET_BLOG_LIST,\r\n    GET_FILTERED_BLOG_LIST,\r\n    GET_BLOG_DETAIL,\r\n    USEABLE_KASIRQU_USER_LIST,\r\n    USEABLE_PRESTASIQU_USER_LIST,\r\n} from './Type.Actions'\r\n\r\nimport { KasirQu_Database_Load_Useable_User_List } from '../../Components/Cluster/KasirQu/src/Store/Actions/Database.Actions'\r\nimport { PrestasiQu_Database_Load_Useable_User_List } from '../../Components/Cluster/PrestasiQu/src/Store/Actions/Database.Actions'\r\n\r\nexport const Get_Newest_Blog_List = () => (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    dispatch({ type: GET_NEWEST_BLOG_LIST })\r\n    dispatch({ type: BLOG_LOADED })\r\n}\r\n\r\nexport const Redirect_to_Blog_Preview = (URL) => (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    dispatch({\r\n        type: Go_To_Blog_Preview,\r\n        payload: URL\r\n    })\r\n    dispatch({ type: BLOG_LOADED })\r\n}\r\n\r\n\r\nexport const Get_Blog_List = () => (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    dispatch({ type: GET_BLOG_LIST })\r\n    dispatch({ type: BLOG_LOADED })\r\n}\r\n\r\nexport const Filter_Blog_Base_on_Tags = (ListOfTags) => (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    dispatch({\r\n        type: GET_FILTERED_BLOG_LIST,\r\n        payload: ListOfTags,\r\n    })\r\n    dispatch({ type: BLOG_LOADED })\r\n}\r\n\r\nexport const Get_Blog_Detail = (BlogId) => (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    dispatch({\r\n        type: GET_BLOG_DETAIL,\r\n        payload: BlogId,\r\n    })\r\n    dispatch({ type: BLOG_LOADED })\r\n}\r\n\r\nexport const Get_Useable_KasirQu_User_List = () => async (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    try {\r\n        const Responses = await KasirQu_Database_Load_Useable_User_List()\r\n        if (Responses) {\r\n            dispatch({\r\n                type: USEABLE_KASIRQU_USER_LIST,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: BLOG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Get_Useable_KasirQu_User_List -> err', err)\r\n        dispatch({ type: BLOG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Get_Useable_PrestasiQu_User_List = () => async (dispatch) => {\r\n    dispatch({ type: BLOG_LOADING })\r\n    try {\r\n        const Responses = await PrestasiQu_Database_Load_Useable_User_List()\r\n        if (Responses) {\r\n            dispatch({\r\n                type: USEABLE_PRESTASIQU_USER_LIST,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: BLOG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Get_Useable_PrestasiQu_User_List -> err', err)\r\n        dispatch({ type: BLOG_LOADED })\r\n    }\r\n}","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { Link as GoTo, Redirect } from 'react-router-dom'\r\n\r\nimport Store from '../../../Store/Store'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Get_Newest_Blog_List, Redirect_to_Blog_Preview } from '../../../Store/Actions/Blog.Actions'\r\n\r\nimport { useTheme, useMediaQuery, Grid, Paper, Typography, Button, Link } from '@material-ui/core'\r\nimport { MUI_Initial_State } from '../../../MUI_Theme_Style'\r\n\r\n\r\nimport { gsap } from 'gsap'\r\n\r\nimport NavigateBeforeRoundedIcon from '@material-ui/icons/NavigateBeforeRounded'\r\nimport NavigateNextRoundedIcon from '@material-ui/icons/NavigateNextRounded'\r\n\r\nconst IntroduceProducts = (props) => {\r\n    useEffect(() => {\r\n        Store.dispatch(Get_Newest_Blog_List())\r\n    }, [])\r\n    const [state, setState] = React.useState({\r\n        MyLatestWorkListNumber: 0,\r\n        RedirectTo: false,\r\n    })\r\n    const ChangeLatestWorkList = (Increament) => {\r\n        try {\r\n            if (state.MyLatestWorkListNumber + Increament > ListBlog.length - 1) {\r\n                setState({ ...state, MyLatestWorkListNumber: 0 })\r\n            } else if (state.MyLatestWorkListNumber + Increament < 0) {\r\n                setState({ ...state, MyLatestWorkListNumber: ListBlog.length - 1 })\r\n            } else {\r\n                setState({ ...state, MyLatestWorkListNumber: state.MyLatestWorkListNumber + Increament })\r\n            }\r\n        } catch (err) {\r\n            console.log('Log: ChangeLatestWorkList -> err', err)\r\n        }\r\n    }\r\n    const PreviousList = () => {\r\n        gsap.to('.My_latest_work_Detail', {\r\n            duration: 0,\r\n            opacity: 0,\r\n            ease: \"power3.out\",\r\n            x: 100,\r\n            onComplete: (() => gsap.to('.My_latest_work_Detail', {\r\n                duration: 0.3,\r\n                opacity: 1,\r\n                ease: \"power3.in\",\r\n                x: 0,\r\n            }))\r\n        })\r\n        ChangeLatestWorkList(-1)\r\n    }\r\n    const NextList = () => {\r\n        gsap.to('.My_latest_work_Detail', {\r\n            duration: 0,\r\n            opacity: 0,\r\n            ease: \"power3.out\",\r\n            x: -100,\r\n            onComplete: (() => gsap.to('.My_latest_work_Detail', {\r\n                duration: 0.3,\r\n                opacity: 1,\r\n                ease: \"power3.in\",\r\n                x: 0,\r\n            }))\r\n        })\r\n        ChangeLatestWorkList(1)\r\n    }\r\n\r\n    const RedirectingToBlogPreview = (inputUrl) => {\r\n        Store.dispatch(Redirect_to_Blog_Preview(inputUrl))\r\n        setState({ RedirectTo: true })\r\n    }\r\n\r\n    const theme = useTheme()\r\n    // const NavbarColor = theme.custom.navbar\r\n    // const PrimaryColor = theme.palette.primary.main\r\n    // const SecondaryColor = theme.palette.secondary.main\r\n    // const ContrastTextColor = theme.palette.primary.contrastText\r\n    const PrimaryTextColor = theme.palette.text.primary\r\n    const SecondaryTextColor = theme.palette.text.secondary\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n    const ListBlog = props.Blog_List\r\n    return (\r\n        <Fragment>\r\n            <Grid\r\n                container\r\n                direction={isFullNavbar ? 'row' : 'column'}\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Paper\r\n                    variant='outlined'\r\n                    style={{ border: 'none', minHeight: isFullNavbar ? '50vh' : '0', maxHeight: '50vh', width: isFullNavbar ? '25%' : '90%', padding: '10px' }}\r\n                >\r\n                    <Typography\r\n                        variant='h1'\r\n                        align='center'\r\n                        style={{ fontSize: '4vw', paddingTop: isFullNavbar ? '30%' : '5%', color: PrimaryTextColor }}\r\n                    >\r\n                        <GoTo\r\n                            to='/blog'\r\n                            style={{ textDecoration: 'none', color: PrimaryTextColor }}\r\n                        >\r\n                            My latest work\r\n                        </GoTo>\r\n                    </Typography>\r\n                </Paper>\r\n                <Paper\r\n                    variant='outlined'\r\n                    className='My_latest_work_Detail'\r\n                    style={{ border: 'none', height: '50vh', minHeight: '50vh', maxHeight: '50vh', width: isFullNavbar ? '70%' : '90%', padding: '10px' }\r\n                    }>\r\n                    <Typography\r\n                        variant='h1'\r\n                        align='center'\r\n                        color='textPrimary'\r\n                        style={{ fontSize: '3vw', color: PrimaryTextColor }}\r\n                    >\r\n                        {ListBlog[state.MyLatestWorkListNumber]?.GithubLink ? (\r\n                            // BlogLink\r\n                            <GoTo\r\n                                to={`${ListBlog[state.MyLatestWorkListNumber].BlogLink}`}\r\n                                style={{ textDecoration: 'none', color: PrimaryTextColor }}\r\n                            >\r\n                                {ListBlog ? ListBlog[state.MyLatestWorkListNumber]?.Title : ''}\r\n                            </GoTo>)\r\n                            : ListBlog ? ListBlog[state.MyLatestWorkListNumber]?.Title : ''}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='subtitle1'\r\n                        align='center'\r\n                        style={{ fontSize: '1.5vw', minHeight: '30vh', color: SecondaryTextColor }}\r\n                    >\r\n                        {ListBlog ? ListBlog[state.MyLatestWorkListNumber]?.Description : ''}\r\n                    </Typography>\r\n                    <Typography\r\n                        align='center'\r\n\r\n                    >\r\n                        {ListBlog[state.MyLatestWorkListNumber]?.GithubLink ? (\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href={`${ListBlog[state.MyLatestWorkListNumber].GithubLink}`}\r\n                                color='primary'\r\n                                style={{ fontSize: '2vw', margin: '2%', }}\r\n                            >\r\n                                <b>Goto Github Page</b>\r\n                            </Link>)\r\n                            : ''}\r\n                        {ListBlog[state.MyLatestWorkListNumber]?.PrototypeLink ? (\r\n                            // <Link\r\n                            //     target=\"_blank\"\r\n                            //     rel=\"noreferrer\"\r\n                            //     href={`${ListBlog[state.MyLatestWorkListNumber].PrototypeLink}`}\r\n                            //     color='primary'\r\n                            //     style={{ fontSize: '2vw', marginRight: '5px', marginLeft: '5px' }}\r\n                            // >\r\n                            //     <b>Goto Priview Page</b>\r\n                            // </Link>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={() => RedirectingToBlogPreview(ListBlog[state.MyLatestWorkListNumber].PrototypeLink)}\r\n                                style={{ padding: '1%', margin: '2%', fontSize: '1.3vw', }}\r\n                            >\r\n                                <b>Goto Priview Page</b>\r\n                            </Button>\r\n                        ) : ''}\r\n                    </Typography>\r\n                    {state.RedirectTo ? <Redirect to='/blog/preview' /> : null}\r\n                </Paper>\r\n            </Grid>\r\n            <Typography>\r\n                <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    style={{ padding: '5px', margin: '5px', marginLeft: '20%' }}\r\n                    onClick={() => PreviousList()}\r\n                >\r\n                    <NavigateBeforeRoundedIcon />\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    style={{ padding: '5px', margin: '5px' }}\r\n                    onClick={() => NextList()}\r\n                >\r\n                    <NavigateNextRoundedIcon />\r\n                </Button>\r\n            </Typography>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    Blog_List: state.Generic_Blog.Blog_List\r\n})\r\n\r\nexport default connect(mapStateToProps)(IntroduceProducts)","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Store from '../../../Store/Store'\r\nimport { Redirect_to_Blog_Preview } from '../../../Store/Actions/Blog.Actions'\r\n\r\nimport { useTheme, useMediaQuery, Container, Grid, Paper, Typography, Link } from '@material-ui/core'\r\nimport { MUI_Initial_State } from '../../../MUI_Theme_Style'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LanguageIcon from '@material-ui/icons/Language'\r\n\r\nconst FooterPanel = (props) => {\r\n    const [state, setState] = React.useState({\r\n        RedirectTo: false,\r\n    })\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    useEffect(() => {\r\n        const IdforGSAP = props.id ? `.${props.id}` : '.FooterPanel'\r\n        if (document.querySelector(IdforGSAP)) {\r\n            gsap.fromTo(IdforGSAP, {\r\n                opacity: 0,\r\n                y: 50,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: IdforGSAP,\r\n                    start: 'top 110%',\r\n                    toggleActions: 'restart none none none',\r\n                    // markers: true,\r\n                },\r\n                opacity: 1,\r\n                y: 0,\r\n                duration: 1,\r\n            })\r\n        }\r\n    })\r\n\r\n    const theme = useTheme()\r\n    // const NavbarColor = theme.custom.navbar\r\n    const PrimaryColor = theme.palette.primary.main\r\n    // const SecondaryColor = theme.palette.secondary.main\r\n    // const ContrastTextColor = theme.palette.primary.contrastText\r\n    // const PrimaryTextColor = theme.palette.text.primary\r\n    // const SecondaryTextColor = theme.palette.text.secondary\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n\r\n    const RedirectingToBlogPreview = (inputUrl) => {\r\n        Store.dispatch(Redirect_to_Blog_Preview(inputUrl))\r\n        setState({ RedirectTo: true })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container\r\n                id={props.id ? props.id : 'FooterPanel'}\r\n                className={props.id ? props.id : 'FooterPanel'}\r\n                style={props.ContainerStyle ?\r\n                    props.ContainerStyle\r\n                    : {\r\n                        ...{ border: 'none', position: 'relative', zIndex: 5 },\r\n                        ...props.AditionalContainerStyle ? props.AditionalContainerStyle : {}\r\n                    }\r\n                }\r\n            >\r\n                <Paper\r\n                    variant='elevation'\r\n                    style={\r\n                        props.PaperStyle ?\r\n                            props.PaperStyle\r\n                            : {\r\n                                ...{ border: 'none', minHeight: '40vh', padding: '20px', borderRadius: '20px', boxShadow: '0 2px 4px -1px #010101', marginTop: '10vh', marginBottom: '10vh' },\r\n                                ...props.AditionalPaperStyle ? props.AditionalPaperStyle : {}\r\n                            }\r\n                    }\r\n                >\r\n                    {props.UnUsualContent ?\r\n                        props.UnUsualContent\r\n                        : (\r\n                            <Grid\r\n                                container\r\n                                direction={isFullNavbar ? \"row\" : \"column\"}\r\n                                // justify={isFullNavbar ? \"space-between\" : \"center\"}\r\n                                justify={isFullNavbar ? \"space-around\" : \"center\"}\r\n                                alignItems=\"center\"\r\n                                style={{ border: 'none', paddingTop: '2vh', paddingBottom: '2vh' }}\r\n                            >\r\n                                {props.GithubLink ? (\r\n                                    <Paper\r\n                                        variant='outlined'\r\n                                        style={{ border: 'none', width: isFullNavbar ? '40vw' : '90vw', height: '25vh' }}\r\n                                    >\r\n                                        <Link\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                            href={props.GithubLink}\r\n                                            color='textPrimary'\r\n                                        // style={{ border: '1px solid black' }}\r\n                                        >\r\n                                            <center>\r\n                                                <GitHubIcon\r\n                                                    style={{ fontSize: '5vw' }}\r\n                                                />\r\n                                                <Typography\r\n                                                    style={{ fontSize: '2.5vw' }}\r\n                                                >\r\n                                                    Go to Github Page\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Link>\r\n\r\n                                    </Paper>)\r\n                                    : null}\r\n\r\n                                {props.PrototypeLink ? (\r\n                                    <Paper\r\n                                        variant='outlined'\r\n                                        style={{ border: 'none', width: isFullNavbar ? '40vw' : '90vw', height: '25vh' }}\r\n                                    >\r\n                                        <Typography\r\n                                            align='center'\r\n                                            color='primary'\r\n                                            onClick={() => RedirectingToBlogPreview(props.PrototypeLink)}\r\n                                            style={{ fontSize: '2.5vw', cursor: 'pointer' }}\r\n                                        >\r\n                                            <LanguageIcon\r\n                                                style={{ fontSize: '5vw', cursor: 'pointer' }}\r\n                                            />\r\n                                            <br />Go to Preview\r\n                                            </Typography>\r\n                                        {state.RedirectTo ? <Redirect to='/blog/preview' /> : null}\r\n                                    </Paper>)\r\n                                    : null}\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Paper>\r\n            </Container >\r\n            {\r\n                props.SVG ?\r\n                    props.SVG\r\n                    : (props.SVG !== 'none' ?\r\n                        <svg\r\n                            viewBox={props.SVGViewBox ?\r\n                                props.SVGViewBox\r\n                                : \"0 0 1440 320\"}\r\n                            style={props.SVGStyle ?\r\n                                props.SVGStyle\r\n                                : {\r\n                                    ...{ marginBottom: '-1%', marginTop: '-30vh', position: 'relative', zIndex: 0 },\r\n                                    ...props.AditionalSVGStyle ? props.AditionalSVGStyle : {}\r\n                                }\r\n                            }\r\n                        >\r\n                            <path\r\n                                fill={props.SVGColor ?\r\n                                    props.SVGColor\r\n                                    : PrimaryColor\r\n                                }\r\n                                fillOpacity={props.SVGFill ?\r\n                                    props.SVGFill\r\n                                    : \"1\"\r\n                                }\r\n                                d={props.SVGd ?\r\n                                    props.SVGd\r\n                                    : \"M0,288L0,64L288,64L288,32L576,32L576,96L864,96L864,160L1152,160L1152,32L1440,32L1440,320L1152,320L1152,320L864,320L864,320L576,320L576,320L288,320L288,320L0,320L0,320Z\"\r\n                                }\r\n                            >\r\n                            </path>\r\n                        </svg>\r\n                        : null\r\n                    )\r\n            }\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default FooterPanel","import React, { Fragment } from 'react'\r\n\r\nimport { Link as GoTo } from 'react-router-dom'\r\n\r\nimport { useTheme, Typography } from '@material-ui/core'\r\n\r\nimport Introduce from '../Containers/Blog/Introduce'\r\nimport OpeningPanel from '../Containers/Blog/OpeningPanel'\r\nimport IntroduceProducts from '../Containers/Blog/IntroduceProducts'\r\nimport FooterPanel from '../Containers/Blog/FooterPanel'\r\n\r\nconst Home = () => {\r\n    const theme = useTheme()\r\n    // const NavbarColor = theme.custom.navbar\r\n    // const PrimaryColor = theme.palette.primary.main\r\n    // const SecondaryColor = theme.palette.secondary.main\r\n    // const ContrastTextColor = theme.palette.primary.contrastText\r\n    const PrimaryTextColor = theme.palette.text.primary\r\n    const SecondaryTextColor = theme.palette.text.secondary\r\n    const About = () => {\r\n        return (\r\n            <Fragment>\r\n                <Typography\r\n                    variant='h1'\r\n                    align='center'\r\n                    style={{ fontSize: '4vw' }}\r\n                >\r\n                    <GoTo\r\n                        to='/about'\r\n                        style={{ textDecoration: 'none', color: PrimaryTextColor }}\r\n                    >\r\n                        About\r\n                            </GoTo>\r\n                </Typography>\r\n                <Typography\r\n                    variant='subtitle1'\r\n                    align='center'\r\n                    style={{ fontSize: '2vw', color: SecondaryTextColor }}\r\n                >\r\n                    Interested in tech progress, especially in machine learning and backend devloper, to know more about me you can cek \"About\" page\r\n                    {/* you can see \"About\" page to see more infotmation. */}\r\n                    {/* I dont know what to write here, please cek \"About\" page if you interesting to know more */}\r\n                    {/* idk what should i write here. i dont like other to see my personal information, but i need to write so people who come visit know me. i think its like a bullshit you know frameing your self so other think you are a good, you must be writen so goodly as you can to convinc other right? it just not me, i cant do this kind of thing, if you wanna know me that socialize with me not by reading this \"About\" i wrote */}\r\n                </Typography>\r\n            </Fragment >\r\n        )\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Introduce\r\n                Description='A Portfolio Page, Contain Personal Information and Portfolio'\r\n            />\r\n            <OpeningPanel\r\n                UnUsualContent={<IntroduceProducts />}\r\n            />\r\n            {/* <OpeningPanel\r\n                id='HomeOpeningPanel'\r\n                Title='About'\r\n                TitleLink='/about'\r\n            // Description='you can see \"About\" page to see more infotmation'\r\n            // Description='I dont know what to write here, please cek \"About\" page if you interesting to know more'\r\n            // Description='idk what should i write here. i dont like other to see my personal information, but i need to write so people who come visit know me. i think its like a bullshit you know frameing your self so other think you are a good, you must be writen so goodly as you can to convinc other right? it just not me, i cant do this kind of thing, if you wanna know me that socialize with me not by reading this \"About\" i wrote'\r\n            /> */}\r\n            <FooterPanel\r\n                UnUsualContent={<About />}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { Link as GoTo } from 'react-router-dom'\r\n\r\nimport Store from '../../Store/Store'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Get_Blog_List, Filter_Blog_Base_on_Tags } from '../../Store/Actions/Blog.Actions'\r\n\r\nimport { useTheme, useMediaQuery, Paper, Grid, Typography, Chip, Button } from '@material-ui/core'\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport SubjectRoundedIcon from '@material-ui/icons/SubjectRounded'\r\n\r\nimport { MUI_Initial_State } from '../../MUI_Theme_Style'\r\n\r\nconst Blog = (props) => {\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    const [state, setState] = React.useState({\r\n        isComponentMount: false,\r\n        BlogOrder: 'ascending',\r\n        SelectedList: [],\r\n        // QueryTags: false,\r\n        // TagLists: [],\r\n        Blog_GSAP: [],\r\n        Tags_GSAP: [],\r\n    })\r\n\r\n    // console.log(state)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (state.isComponentMount === false) {\r\n            Store.dispatch(Get_Blog_List())\r\n            setState({ ...state, isComponentMount: true })\r\n            // setState({ ...state, isComponentMount: true, QueryTags: true })\r\n        }\r\n\r\n        try {\r\n            gsap.fromTo(state.Blog_GSAP, {\r\n                opacity: 0,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: state.Blog_GSAP,\r\n                    toggleActions: 'restart pause resume pause',\r\n                },\r\n                opacity: 1,\r\n                duration: 0.5,\r\n                scale: 1,\r\n                stagger: {\r\n                    amount: 1\r\n                }\r\n                // ease: \"power1.in\",\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('Log: Blog -> err', err)\r\n        }\r\n\r\n        try {\r\n            gsap.fromTo(state.Tags_GSAP, {\r\n                opacity: 0,\r\n                // ease: \"power1.in\",\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: state.Tags_GSAP,\r\n                    toggleActions: 'restart pause resume pause',\r\n                },\r\n                opacity: 1,\r\n                duration: 0.1,\r\n                scale: 1,\r\n                stagger: {\r\n                    amount: 1\r\n                }\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('Log: Blog -> err', err)\r\n        }\r\n\r\n    })\r\n\r\n    // const TagListsData = state.TagLists\r\n    const TagListsData = [\r\n        'python',\r\n        'machine-learning',\r\n        'javascript',\r\n        'django',\r\n        'django-rest-framework',\r\n        'sql',\r\n        'react',\r\n        'bootstrap',\r\n        'express.js',\r\n        'nosql',\r\n        'material-ui',\r\n    ]\r\n    const TagLists = TagListsData.sort()\r\n    const Blog_List = props.Blog_List\r\n\r\n    const theme = useTheme()\r\n    const DefaultTheme = theme.palette.background.default\r\n    const PrimaryMainTheme = theme.palette.primary.main\r\n    const SecondaryMainTheme = theme.palette.secondary.main\r\n    const ContrastTextTheme = theme.palette.primary.contrastText\r\n    const TextPrimaryTheme = theme.palette.text.primary\r\n    const TextSecondaryTheme = theme.palette.text.secondary\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n\r\n    const handleBlogOrder = (e, newOrder) => {\r\n        // TODO Shorting\r\n        setState({ ...state, BlogOrder: newOrder })\r\n    }\r\n\r\n    // const Create_Tags_Lists = (BlogListData) => { // FIXME idk just cause button didnt change color\r\n    //     try {\r\n    //         const TagListsData = []\r\n    //         BlogListData.forEach(element => {\r\n    //             const Blog_List_Tags = element.Tags ? element.Tags : []\r\n    //             Blog_List_Tags.forEach(element_element => {\r\n    //                 const isTaginTagListsData = TagListsData.find(item => item === element_element)\r\n    //                 if (!isTaginTagListsData) {\r\n    //                     TagListsData.push(element_element)\r\n    //                 }\r\n    //             })\r\n    //         })\r\n    //         return TagListsData\r\n    //     } catch (err) {\r\n    //         console.log('Log: Blog -> err', err)\r\n    //     }\r\n    // }\r\n\r\n    const Change_Selected_List = (Tag) => {\r\n        try {\r\n            const SelectedList = state.SelectedList\r\n            const TagSelected = SelectedList.findIndex((item) => item === Tag)\r\n            const ButtonId = `tags_${Tag}`\r\n            // console.log('Log: Change_Selected_List -> ButtonId', ButtonId)\r\n            if (TagSelected >= 0) {\r\n                SelectedList.splice(TagSelected, 1)\r\n                setState({ ...state, SelectedList: SelectedList })\r\n                document.getElementById(ButtonId).style.backgroundColor = SecondaryMainTheme\r\n            } else {\r\n                SelectedList.push(Tag)\r\n                setState({ ...state, SelectedList: SelectedList })\r\n                document.getElementById(ButtonId).style.backgroundColor = PrimaryMainTheme\r\n            }\r\n            Store.dispatch(Filter_Blog_Base_on_Tags(SelectedList))\r\n            // setState({ ...state, QueryTags: true })\r\n            // console.log('Log: Blog -> SelectedList', SelectedList)\r\n        } catch (err) {\r\n            console.log('Log: If_Tag_Selected -> err', err)\r\n        }\r\n    }\r\n\r\n    const Restart_Selected_List = () => {\r\n        try {\r\n            const SelectedList = state.SelectedList\r\n            SelectedList.forEach(element => {\r\n                const ButtonId = `tags_${element}`\r\n                document.getElementById(ButtonId).style.backgroundColor = SecondaryMainTheme\r\n            })\r\n            setState({ ...state, SelectedList: [] })\r\n            Store.dispatch(Filter_Blog_Base_on_Tags([]))\r\n        } catch (err) {\r\n            console.log('Log: If_Tag_Selected -> err', err)\r\n        }\r\n    }\r\n\r\n    // console.log('Log: Blog -> Blog_List', Blog_List)\r\n\r\n    return (\r\n        <Fragment>\r\n            <Paper\r\n                variant=\"outlined\"\r\n                style={{ border: 'none', paddingTop: '11%', paddingBottom: '1%', backgroundColor: DefaultTheme, borderRadius: '0', position: 'relative', zIndex: 1, minHeight: '100vh' }}\r\n            >\r\n                <Grid\r\n                    container\r\n                    direction={isFullNavbar ? 'row' : 'column-reverse'}\r\n                    justify=\"space-between\"\r\n                    alignItems={isFullNavbar ? \"stretch\" : \"center\"}\r\n                >\r\n                    <Paper\r\n                        variant='outlined'\r\n                        style={{ border: 'none', minHeight: '50vh', width: isFullNavbar ? '70%' : '90%', padding: '10px', backgroundColor: DefaultTheme }}\r\n                    >\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"stretch\"\r\n                        >\r\n                            <ToggleButtonGroup\r\n                                value={state.BlogOrder}\r\n                                exclusive\r\n                                onChange={handleBlogOrder}\r\n                            >\r\n                                <ToggleButton value=\"ascending\" aria-label=\"ascending\">\r\n                                    <SubjectRoundedIcon style={{ transform: 'scaleY(-1)' }} />\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"descending\" aria-label=\"descending\">\r\n                                    <SubjectRoundedIcon />\r\n                                </ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                            {Blog_List.map((item, index) => (\r\n                                <Paper\r\n                                    key={index}\r\n                                    // id={`Blog_List_${item.Title}`}\r\n                                    ref={reference => state.Blog_GSAP[index] = reference}\r\n                                    variant='elevation'\r\n                                    style={{ marginBottom: '1vh', marginTop: '1vh', paddingBottom: '1vh', paddingTop: '1vh', paddingRight: '1vw', paddingLeft: '1vw', borderRadius: '15px', minHeight: '20vh', boxShadow: '0 2px 4px -1px #010101' }}\r\n                                >\r\n                                    <Typography\r\n                                        align='center'\r\n                                        variant='h2'\r\n                                        style={{ fontSize: '2vw', color: TextPrimaryTheme }}\r\n                                    >\r\n                                        {item.BlogLink ? (\r\n                                            <GoTo\r\n                                                to={item.BlogLink}\r\n                                                style={{ textDecoration: 'none', color: TextPrimaryTheme }}\r\n                                            >\r\n                                                {item.Title ? item.Title : 'Title'}\r\n                                            </GoTo>)\r\n                                            : item.Title}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                        align='left'\r\n                                        // variant='subtitle1'\r\n                                        style={{ fontSize: '1.4vw', color: TextSecondaryTheme }}\r\n                                    >\r\n                                        {item.Description}\r\n                                    </Typography>\r\n                                    <div\r\n                                        style={{ marginTop: '1vh', marginBottom: '1vh' }}\r\n                                    >\r\n                                        <center>\r\n                                            {item.Tags.map((item_item, index_index) => (\r\n                                                <Chip\r\n                                                    key={index_index}\r\n                                                    label={item_item}\r\n                                                    style={{ background: PrimaryMainTheme, color: ContrastTextTheme, fontSize: '1.1vw', paddingLeft: '0.5vw', paddingRight: '0.5vw', marginLeft: '0.25vw', marginRight: '0.25vw', marginTop: '1vh' }}\r\n                                                />\r\n                                            ))}\r\n                                        </center>\r\n                                    </div>\r\n                                </Paper>\r\n                            ))}\r\n                        </Grid>\r\n                    </Paper>\r\n                    <Paper\r\n                        variant='outlined'\r\n                        className='My_latest_work_Detail'\r\n                        style={{ border: 'none', marginBottom: isFullNavbar ? '0' : '1%', minHeight: isFullNavbar ? 'none' : '20vh', maxHeight: isFullNavbar ? 'none' : '20vh', width: isFullNavbar ? '25%' : '90%', padding: '10px', backgroundColor: DefaultTheme }\r\n                        }>\r\n                        <center>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                onClick={() => Restart_Selected_List()}\r\n                                style={{ paddingTop: '1vh', paddingBottom: '1vh', margin: '1%', borderRadius: '5px', width: '90%' }}\r\n                            >\r\n                                Restart\r\n                            </Button>\r\n                            {TagLists.map((item, index) => (\r\n                                <Button\r\n                                    key={index}\r\n                                    id={`tags_${item}`}\r\n                                    ref={reference => state.Tags_GSAP[index] = reference}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={() => Change_Selected_List(item)}\r\n                                    style={{ paddingTop: '1vh', paddingBottom: '1vh', margin: '1%', borderRadius: '5px' }}\r\n                                >\r\n                                    {item}\r\n                                </Button>\r\n                            ))}\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n            </Paper>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    Blog_List: state.Generic_Blog.Blog_List\r\n})\r\n\r\nexport default connect(mapStateToProps)(Blog)","import React, { } from 'react'\r\n\r\nimport { useTheme, useMediaQuery, Grid, Paper, Avatar, Typography, Link, Tooltip, Fade } from '@material-ui/core'\r\nimport { MUI_Initial_State } from '../../../MUI_Theme_Style'\r\n\r\nimport ProfilePicture from '../../../IMG/Profile_Picture.jpg'\r\n// import ProfilePicture from '../../../IMG/logo_1.png'\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded'\r\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded'\r\nimport FacebookIcon from '@material-ui/icons/Facebook'\r\nimport TwitterIcon from '@material-ui/icons/Twitter'\r\nimport InstagramIcon from '@material-ui/icons/Instagram'\r\n\r\nconst Biodata = () => {\r\n    const isFacebookActive = false\r\n    const isTwitterActive = false\r\n    const isInstagramActive = true\r\n\r\n    const theme = useTheme()\r\n    // const NavbarTheme = theme.custom.navbar\r\n    const DefaultTheme = theme.palette.background.default\r\n    // const ContrastTextTheme = theme.palette.primary.contrastText\r\n    const BiodataBackgrondColor = DefaultTheme\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={isFullNavbar ? 'column' : 'row'}\r\n            justify={isFullNavbar ? 'flex-start' : 'space-around'}\r\n            alignItems='center'\r\n        >\r\n            <Paper\r\n                variant=\"outlined\"\r\n                style={{ border: 'none', padding: '1%', backgroundColor: BiodataBackgrondColor, margin: '1%', width: isFullNavbar ? '90%' : '20%', }}\r\n            >\r\n                <center>\r\n                    <Avatar\r\n                        src={ProfilePicture}\r\n                        alt=\"Profile Picture\"\r\n                        style={{ width: '13vw', height: '13vw', boxShadow: '0 2px 4px -1px #010101' }}\r\n                    />\r\n                </center>\r\n            </Paper>\r\n            <Paper\r\n                variant=\"outlined\"\r\n                style={{ border: 'none', padding: '1%', backgroundColor: BiodataBackgrondColor, margin: '1%', width: isFullNavbar ? '90%' : '70%', }}\r\n            >\r\n\r\n                <div\r\n                    style={{ margin: '2%', padding: '1%', marginTop: '10%' }}\r\n                >\r\n                    <center>\r\n                        <RoomRoundedIcon style={{ fontSize: '2.5vw' }} />\r\n                        <Typography>\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href='https://www.google.com/maps/place/Bekasi,+Bekasi+City,+West+Java/@-6.2845348,106.9033364,12z'\r\n                                color='textPrimary'\r\n                                style={{ fontSize: '1.1vw' }}\r\n                            >\r\n                                Bekasi City, West Java, Indonesia\r\n                        </Link>\r\n                        </Typography>\r\n                    </center>\r\n                </div>\r\n                <div\r\n                    style={{ margin: '2%', padding: '1%' }}\r\n                >\r\n                    <center>\r\n                        <EmailRoundedIcon style={{ fontSize: '2.5vw' }} />\r\n                        <Typography>\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href='mailto:hudanasution@gmail.com?subject=Get your email from hudhanst.github.io&body=Get your email from hudhanst.github.io'\r\n                                color='textPrimary'\r\n                                style={{ fontSize: '1.1vw' }}\r\n                            >\r\n                                hudanasution@gmail.com\r\n                        </Link>\r\n                        </Typography>\r\n                    </center>\r\n                </div>\r\n                <div\r\n                    style={{ margin: '2%', padding: '1%', marginTop: isFullNavbar ? '10vh' : '5vh' }}\r\n                >\r\n                    <center>\r\n                        <Typography>\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href='https://www.facebook.com/khudha1'\r\n                                color={isFacebookActive ? 'textPrimary' : 'textSecondary'}\r\n                                style={{ fontSize: '1.1vw' }}\r\n                            >\r\n                                <Tooltip\r\n                                    title='Inactive'\r\n                                    TransitionComponent={Fade}\r\n                                    TransitionProps={{ timeout: 600 }}\r\n                                >\r\n                                    <FacebookIcon style={{ fontSize: '2vw', marginLeft: '1.5vw', marginRight: '1.5vw' }} />\r\n                                </Tooltip>\r\n                            </Link>\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href='https://twitter.com/nasusion'\r\n                                color={isTwitterActive ? 'textPrimary' : 'textSecondary'}\r\n                                style={{ fontSize: '1.1vw' }}\r\n                            >\r\n                                <Tooltip\r\n                                    title='Inactive'\r\n                                    TransitionComponent={Fade}\r\n                                    TransitionProps={{ timeout: 600 }}\r\n                                >\r\n                                    <TwitterIcon style={{ fontSize: '2vw', marginLeft: '1.5vw', marginRight: '1.5vw' }} />\r\n                                </Tooltip>\r\n                            </Link>\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href='https://www.instagram.com/nasusion/'\r\n                                color={isInstagramActive ? 'textPrimary' : 'textSecondary'}\r\n                                style={{ fontSize: '1.1vw' }}\r\n                            >\r\n                                <Tooltip\r\n                                    title='Active'\r\n                                    TransitionComponent={Fade}\r\n                                    TransitionProps={{ timeout: 600 }}\r\n                                >\r\n                                    <InstagramIcon style={{ fontSize: '2vw', marginLeft: '1.5vw', marginRight: '1.5vw' }} />\r\n                                </Tooltip>\r\n                            </Link>\r\n                        </Typography>\r\n                        <Typography\r\n                            color='textSecondary'\r\n                            style={{ fontSize: '0.8vw' }}\r\n                        >\r\n                            *All social media/networking above are set to a private/protected\r\n                            </Typography>\r\n                    </center>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Biodata","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport Store from '../../../Store/Store'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Get_LifePath_List } from '../../../Store/Actions/About.Action'\r\n\r\nimport { useTheme, useMediaQuery, Paper, Grid, Typography, Tooltip, Fade, Button } from '@material-ui/core'\r\nimport { Timeline, TimelineItem, TimelineOppositeContent, TimelineSeparator, TimelineDot, TimelineConnector, TimelineContent } from '@material-ui/lab'\r\nimport { MUI_Initial_State } from '../../../MUI_Theme_Style'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday'\r\nimport DateRangeIcon from '@material-ui/icons/DateRange'\r\n\r\nimport NavigateNextRoundedIcon from '@material-ui/icons/NavigateNextRounded'\r\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded'\r\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded'\r\nimport NavigateBeforeRoundedIcon from '@material-ui/icons/NavigateBeforeRounded'\r\nimport SkipPreviousRoundedIcon from '@material-ui/icons/SkipPreviousRounded'\r\n\r\nconst LifePath = (props) => {\r\n    const [state] = React.useState({\r\n        LifePath_GSAP: [],\r\n        Active_TimeLine: [],\r\n    })\r\n    Store.dispatch(Get_LifePath_List())\r\n\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    gsap.config({\r\n        nullTargetWarn: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        ////// TIMELINE\r\n        try {\r\n            gsap.utils.toArray(state.LifePath_GSAP.forEach((panel, index) => {\r\n                // gsap.fromTo(panel, {\r\n\r\n                //     opacity: -0.1,\r\n                //     y: -50,\r\n                //     scale: 0,\r\n                //     // duration: 1\r\n                // }, {\r\n                //     scrollTrigger: {\r\n                //         trigger: panel,\r\n                //         // start: 'top 110%',\r\n                //         toggleActions: 'restart none none none',\r\n                //         // toggleActions: 'restart pause resume pause',\r\n                //         // scrub: 1,\r\n                //         // snap: index === 0 ? false : 1,\r\n                //         // markers: true,\r\n                //         onToggle: self => {\r\n                //             if (self.isActive === true) {\r\n                //                 state.Active_TimeLine.push(index)\r\n                //                 // console.log(state.Active_TimeLine)\r\n                //             }\r\n                //         },\r\n                //     },\r\n                //     opacity: 1.2,\r\n                //     y: 0,\r\n                //     scale: 1,\r\n                // })\r\n                gsap.fromTo(panel, {\r\n                    opacity: -0.1,\r\n                    scale: 0,\r\n                    // y:-100\r\n                }, {\r\n                    scrollTrigger: {\r\n                        trigger: panel,\r\n                        // start: 'top bottom', \r\n                        start: 'top 70%',\r\n                        toggleActions: 'restart pause resume pause',\r\n                        scrub: 1,\r\n                        snap: index === 0 ? false : 1,\r\n                        pin: true,\r\n                        // pinSpacing: true,\r\n                        // markers: true,\r\n                        onToggle: self => {\r\n                            if (self.isActive === true) {\r\n                                state.Active_TimeLine.push(index)\r\n                                // console.log(state.Active_TimeLine)\r\n                            }\r\n                        },\r\n                    },\r\n                    opacity: 1.2,\r\n                    scale: 1,\r\n                })\r\n                if (index !== 0 || index !== state.LifePath_GSAP.length - 1) {\r\n                    gsap.to(state.LifePath_GSAP[index - 1], {\r\n                        opacity: 0,\r\n                        scale: 0,\r\n                    })\r\n                }\r\n            }))\r\n        } catch (err) {\r\n            console.log('Log: About -> err', err)\r\n        }\r\n\r\n        ////// TIMELINE-NAV\r\n        try {\r\n            gsap.fromTo('#LifePathNav', {\r\n                opacity: -0.1,\r\n                scale: 0,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: state.LifePath_GSAP[0],\r\n                    // start: 'top bottom', \r\n                    start: 'top 70%',\r\n                    // toggleActions: 'restart pause resume pause',\r\n                    scrub: 1,\r\n                    // markers: true,\r\n                },\r\n                opacity: 1.2,\r\n                scale: 1,\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('Log: About1 -> err', err)\r\n        }\r\n\r\n        ////// TIMELINE-NAV/REVERST\r\n        try {\r\n            gsap.fromTo('#LifePathNav', {\r\n                opacity: 1.2,\r\n                scale: 1,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: '#Skill',\r\n                    start: 'top bottom',\r\n                    // toggleActions: 'restart pause resume pause',\r\n                    scrub: 1,\r\n                    // markers: true,\r\n                },\r\n                opacity: -1,\r\n                scale: 0,\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('Log: About2 -> err', err)\r\n        }\r\n    })\r\n\r\n    const theme = useTheme()\r\n    const NavbarTheme = theme.custom.navbar\r\n    // const DefaultTheme = theme.palette.background.default\r\n    const ContrastTextTheme = theme.palette.primary.contrastText\r\n    // const TextSecondaryTheme = theme.palette.text.secondary\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n\r\n    const LifePathData = props.LifePath_List ? props.LifePath_List : []\r\n    // console.log('Log: LifePath -> LifePathData', LifePathData)\r\n\r\n    const MonthPathData = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ]\r\n\r\n    const LifePathNav = () => {\r\n        const Scroll_To_Component = (id, pxFromTop) => {\r\n            // console.log('Log: Scroll_To_Component -> id', id)\r\n            try {\r\n                // const distanceScrolled = Reff ? document.body.scrollTop : 0\r\n                // const RefPosition = Reff ? document.getElementById(Reff).getBoundingClientRect().top : 0\r\n                // const FinalRefLocation = distanceScrolled + RefPosition\r\n\r\n\r\n                // const HeighestComp = Reff ? document.getElementById('ScrollText').offsetHeight : 0\r\n                // const LowestComp = Reff ? document.getElementById('Skill').offsetTop : 0\r\n                // const PxDiv = (LowestComp - HeighestComp) / (state.LifePath_GSAP.length)\r\n                // const TotalTop = Reff ? HeighestComp + (PxDiv * Reff) + ((PxDiv * 12) / 100) : 0\r\n\r\n                // window.scrollTo({\r\n                //     top: Reff ? TotalTop : id ? document.getElementById(id).offsetTop : pxFromTop ? pxFromTop : 0,\r\n                //     left: 0,\r\n                //     behavior: 'smooth'\r\n                // })\r\n                if (pxFromTop >= 0) {\r\n                    window.scrollTo({\r\n                        top: pxFromTop,\r\n                        left: 0,\r\n                        behavior: 'smooth'\r\n                    })\r\n                } else {\r\n                    // document.getElementById(id).scrollIntoView({ behavior: \"smooth\" })\r\n                    document.getElementById(!id && !pxFromTop ? 0 : id).scrollIntoView({ behavior: \"smooth\" })\r\n                }\r\n            } catch (err) {\r\n                console.log('Log: Scroll_To_Component -> err', err)\r\n            }\r\n        }\r\n        const ActiveYears = LifePathData.filter((item) => item.Month)\r\n        // console.log('Log: LifePathNav -> ActiveYears', ActiveYears)\r\n        const Scroll_To_Active_Years = (id, inc) => {\r\n            try {\r\n                const TargetComp = ActiveYears.filter((item) => inc ? item.id > id : item.id < id)\r\n                const TargetList = TargetComp.map(item => item.id)\r\n                const NearestTarget = TargetList.length > 0 ? TargetList.reduce((prev, curr) => Math.abs(curr - id) < Math.abs(prev - id) ? curr : prev) : null\r\n                if (NearestTarget) {\r\n                    document.getElementById(NearestTarget).scrollIntoView({ behavior: \"smooth\" })\r\n                }\r\n            } catch (err) {\r\n                console.log('Log: Scroll_To_Active_Years -> err', err)\r\n            }\r\n        }\r\n        return (\r\n            <div\r\n                // className='unvisible'\r\n                id='LifePathNav'\r\n                style={{ position: 'fixed', zIndex: 100, left: 0, top: 0, padding: '1%', marginLeft: isFullNavbar ? '22vw' : '2%', marginTop: '15vh' }}\r\n            >\r\n                <Typography\r\n                    style={{ marginBottom: '1.1vh' }}\r\n                >\r\n                    <Tooltip\r\n                        title='previous year'\r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            onClick={() => {\r\n                                Scroll_To_Component(\r\n                                    state.Active_TimeLine[state.Active_TimeLine.length - 1] <= 1 ? 0 : state.Active_TimeLine[state.Active_TimeLine.length - 1] - 1\r\n                                )\r\n                            }}\r\n                            style={{ marginRight: '0.4vw' }}\r\n                        >\r\n                            <NavigateBeforeRoundedIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip\r\n                        title='next year'\r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={() => {\r\n                                Scroll_To_Component(\r\n                                    state.Active_TimeLine[state.Active_TimeLine.length - 1] >= state.LifePath_GSAP.length - 2 ? state.LifePath_GSAP.length - 1 : state.Active_TimeLine[state.Active_TimeLine.length - 1] + 1\r\n                                )\r\n                            }}\r\n                            style={{ marginLeft: '0.4vw' }}\r\n                        >\r\n                            <NavigateNextRoundedIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Typography>\r\n\r\n                <Typography\r\n                    style={{ marginTop: '1.1vh', marginBottom: '1.1vh' }}\r\n                >\r\n                    <Tooltip\r\n                        title='previous big event'\r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            onClick={() => {\r\n                                Scroll_To_Active_Years(state.Active_TimeLine[state.Active_TimeLine.length - 1], false)\r\n                            }}\r\n                            style={{ marginRight: '0.4vw' }}\r\n                        >\r\n                            <DoubleArrowRoundedIcon\r\n                                style={{ transform: 'rotate(180deg)' }}\r\n                            />\r\n                        </Button>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip\r\n                        title='next big event'\r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={() => {\r\n                                Scroll_To_Active_Years(state.Active_TimeLine[state.Active_TimeLine.length - 1], true)\r\n                            }}\r\n                            style={{ marginLeft: '0.4vw' }}\r\n                        >\r\n                            <DoubleArrowRoundedIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Typography>\r\n\r\n                <Typography\r\n                    style={{ marginTop: '1.1vh', }}\r\n                >\r\n                    <Tooltip\r\n                        title='back to start'\r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            onClick={() => Scroll_To_Component(null, 0)}\r\n                            style={{ marginRight: '0.4vw' }}\r\n                        >\r\n                            <SkipPreviousRoundedIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip\r\n                        title='skip timeline'\r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={() => Scroll_To_Component('Skill')}\r\n                            style={{ marginLeft: '0.4vw' }}\r\n                        >\r\n\r\n                            <SkipNextRoundedIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            id='LifePath'\r\n            variant='outlined'\r\n            style={{ border: 'none', margin: '0', padding: '1%', width: '90%', backgroundColor: NavbarTheme }}\r\n        >\r\n            <LifePathNav />\r\n            <Typography\r\n                align='center'\r\n                id='ScrollText'\r\n                variant='h1'\r\n                style={{ fontSize: '3vw', color: ContrastTextTheme, paddingTop: '60vh' }}\r\n            >\r\n                Scroll Bottom\r\n            </Typography>\r\n            {LifePathData.map((item, index) => (\r\n                <Paper\r\n                    key={index}\r\n                    id={index}\r\n                    variant='outlined'\r\n                    style={{ border: 'none', padding: '1%', backgroundColor: NavbarTheme }}\r\n                    ref={reference => state.LifePath_GSAP[index] = reference}\r\n                >\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Paper\r\n                            variant='outlined'\r\n                            style={{ border: 'none', width: '20%', backgroundColor: NavbarTheme }}\r\n                        >\r\n                            <Typography\r\n                                variant='h1'\r\n                                align='center'\r\n                                style={{ fontSize: '4vw', color: ContrastTextTheme, textShadow: '' }}\r\n                            >\r\n                                {item?.Year ? item.Year : index}\r\n                            </Typography>\r\n                        </Paper>\r\n\r\n                        <Paper\r\n                            variant='outlined'\r\n                            style={{ border: 'none', width: '75%', paddingTop: '50vh', backgroundColor: NavbarTheme }}\r\n                        >\r\n                            <Timeline align=\"alternate\">\r\n                                {MonthPathData.map((month_item, month_index) => (\r\n                                    <TimelineItem\r\n                                        key={`${index}_${month_index}`}\r\n                                    >\r\n                                        <TimelineOppositeContent>\r\n                                            <Typography\r\n                                                variant=\"body2\"\r\n                                                style={{ fontSize: \"1vw\", color: ContrastTextTheme }}\r\n                                            >\r\n                                                {month_item}\r\n                                            </Typography>\r\n                                        </TimelineOppositeContent>\r\n\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot\r\n                                                color={item.Month ? (\r\n                                                    item.Month[month_index].length > 0 ? (\r\n                                                        'primary'\r\n                                                    ) : 'secondary'\r\n                                                ) : 'secondary'}\r\n                                            >\r\n                                                {item.Month ? (\r\n                                                    item.Month[month_index].length > 0 ? (\r\n                                                        <DateRangeIcon />\r\n                                                    ) : <CalendarTodayIcon />\r\n                                                ) : <CalendarTodayIcon />}\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector\r\n                                                style={{ display: month_index === MonthPathData.length - 1 ? 'none' : 'initial' }}\r\n                                            />\r\n                                        </TimelineSeparator>\r\n\r\n                                        {item.Month ? (\r\n                                            <Fragment>\r\n                                                {item.Month[month_index].length > 0 ? (\r\n                                                    <TimelineContent>\r\n                                                        <Paper\r\n                                                            variant='elevation'\r\n                                                            style={{ padding: '2%', boxShadow: '0 2px 4px -1px #010101' }}\r\n                                                        >\r\n                                                            {item.Month[month_index].map((item_month_event, index_month_event) => (\r\n\r\n                                                                <div\r\n                                                                    key={`${index}_${month_index}_${index_month_event}`}\r\n                                                                    style={{ padding: '1%' }}\r\n                                                                >\r\n\r\n                                                                    {item_month_event.Event_Title ?\r\n                                                                        <Typography\r\n                                                                            variant='h1'\r\n                                                                            style={{ fontSize: '1.5vw' }}\r\n                                                                        >\r\n                                                                            {item_month_event.Event_Title}\r\n                                                                        </Typography>\r\n                                                                        : null}\r\n\r\n                                                                    {item_month_event.Event_Description ?\r\n                                                                        <Typography\r\n                                                                            variant='subtitle1'\r\n                                                                            style={{ fontSize: '1vw' }}\r\n                                                                        >\r\n                                                                            {item_month_event.Event_Description}\r\n                                                                        </Typography>\r\n                                                                        : null}\r\n\r\n                                                                    {item_month_event.Other ? item_month_event.Other : null}\r\n\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n                                                        </Paper>\r\n                                                    </TimelineContent>\r\n                                                ) : null}\r\n                                            </Fragment>\r\n                                        ) : null}\r\n\r\n                                    </TimelineItem>\r\n                                ))}\r\n                            </Timeline>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Paper>\r\n            ))}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    LifePath_List: state.Generic_About.LifePath_List\r\n})\r\n\r\nexport default connect(mapStateToProps)(LifePath)","import {\r\n    ABOUT_LOADING,\r\n    ABOUT_LOADED,\r\n    GET_ABOUT_LIFEPATH_LIST,\r\n    GET_ABOUT_SKILL_LIST,\r\n} from './Type.Actions'\r\n\r\nexport const Get_LifePath_List = () => (dispatch) => {\r\n    dispatch({ type: ABOUT_LOADING })\r\n    dispatch({ type: GET_ABOUT_LIFEPATH_LIST })\r\n    dispatch({ type: ABOUT_LOADED })\r\n}\r\n\r\nexport const Get_Skill_List = () => (dispatch) => {\r\n    dispatch({ type: ABOUT_LOADING })\r\n    dispatch({ type: GET_ABOUT_SKILL_LIST })\r\n    dispatch({ type: ABOUT_LOADED })\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport Store from '../../../Store/Store'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Get_Skill_List } from '../../../Store/Actions/About.Action'\r\n\r\nimport { useTheme, Paper, Typography } from '@material-ui/core'\r\nimport { Rating } from '@material-ui/lab'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nconst Skill = (props) => {\r\n    const [state] = React.useState({\r\n        MajorSkill_GSAP: [],\r\n        MinorSkill_GSAP: [],\r\n    })\r\n    Store.dispatch(Get_Skill_List())\r\n\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    gsap.config({\r\n        nullTargetWarn: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        // console.log('skill')\r\n        ////// SKILLTYPOGRAPHY\r\n        try {\r\n            gsap.fromTo('.SkillTypography', {\r\n                opacity: 0,\r\n                y: -50,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: '.SkillTypography',\r\n                    start: 'top 110%',\r\n                    toggleActions: 'restart none none none'\r\n                    // toggleActions: 'restart pause resume pause',\r\n                    // markers: true,\r\n                },\r\n                opacity: 1,\r\n                y: 0,\r\n                scale: 1,\r\n                duration: 1,\r\n            })\r\n        } catch (err) {\r\n            console.log('Log: Skill 1 -> err', err)\r\n        }\r\n        ////// MAJORSKILL\r\n        try {\r\n            gsap.utils.toArray(state.MajorSkill_GSAP.forEach((panel, index) => {\r\n                gsap.fromTo(panel, {\r\n                    opacity: 0,\r\n                    y: 50,\r\n                }, {\r\n                    scrollTrigger: {\r\n                        trigger: panel,\r\n                        start: 'top 110%',\r\n                        toggleActions: 'restart none none none',\r\n                        // toggleActions: 'restart pause resume pause',\r\n                        // markers: true,\r\n                    },\r\n                    opacity: 1,\r\n                    y: 0,\r\n                    duration: 1,\r\n                })\r\n            }))\r\n        } catch (err) {\r\n            console.log('Log: Skill 2 -> err', err)\r\n        }\r\n        ////// MINORSKILL\r\n        try {\r\n            gsap.utils.toArray(state.MinorSkill_GSAP.forEach((panel, index) => {\r\n                gsap.fromTo(panel, {\r\n                    opacity: 0,\r\n                    y: -50,\r\n                    scale: 0,\r\n                }, {\r\n                    scrollTrigger: {\r\n                        trigger: panel,\r\n                        start: 'top 110%',\r\n                        toggleActions: 'restart none none none',\r\n                        // toggleActions: 'restart pause resume pause',\r\n                        // markers: true,\r\n                    },\r\n                    opacity: 1,\r\n                    y: 0,\r\n                    scale: 1,\r\n                    duration: 1,\r\n                })\r\n            }))\r\n        } catch (err) {\r\n            console.log('Log: Skill 3 -> err', err)\r\n        }\r\n        ScrollTrigger.refresh()\r\n    })\r\n\r\n    const theme = useTheme()\r\n    const NavbarTheme = theme.custom.navbar\r\n    const DefaultTheme = theme.palette.background.default\r\n    const ContrastTextTheme = theme.palette.primary.contrastText\r\n    const TextSecondaryTheme = theme.palette.text.secondary\r\n\r\n    const SkillsData = props.Skill_List ? props.Skill_List : []\r\n\r\n    return (\r\n        <Paper\r\n            id='Skill'\r\n            variant='outlined'\r\n            style={{ border: 'none', margin: '1%', padding: '1%', width: '90%', marginTop: '5vh', backgroundColor: NavbarTheme }}\r\n        >\r\n            <Typography\r\n                variant='h1'\r\n                className='SkillTypography'\r\n                align='center'\r\n                style={{ fontSize: '4vw', color: ContrastTextTheme }}\r\n            >\r\n                Skill\r\n            </Typography>\r\n            <Typography\r\n                variant='subtitle1'\r\n                className='SkillTypography'\r\n                align='center'\r\n                style={{ fontSize: '1vw', color: ContrastTextTheme }}\r\n            >\r\n                *Keep in mind the score given below are uncertain. The score given based on my own opinion, to make it more clear i give a reason why score that height and that low\r\n            </Typography>\r\n            {SkillsData.map((item_skill, index_skill) => (\r\n                <Paper\r\n                    variant='elevation'\r\n                    key={`MajorSkill_${index_skill}`}\r\n                    id={`MajorSkill_${index_skill}`}\r\n                    ref={reference => state.MajorSkill_GSAP[index_skill] = reference}\r\n                    style={{ border: 'none', padding: '1%', marginTop: '2vh', marginBottom: '2vh', backgroundColor: DefaultTheme, boxShadow: '0 2px 4px -1px #010101' }}\r\n                >\r\n                    <Typography\r\n                        variant='h2'\r\n                        style={{ fontSize: '2.5vw' }}\r\n                    >\r\n                        {item_skill.CategoryName}\r\n                    </Typography>\r\n                    {item_skill.SkillRelated.map((item_skill_related, index_skill_related) => (\r\n                        <Paper\r\n                            variant='elevation'\r\n                            key={`MinorSkill_${index_skill_related}`}\r\n                            id={`MinorSkill_${index_skill_related}`}\r\n                            ref={reference => state.MinorSkill_GSAP[state.MinorSkill_GSAP.length] = reference}\r\n                            style={{ border: 'none', padding: '1%', marginTop: '1vh', marginBottom: '1vh', boxShadow: '0 2px 4px -1px #010101' }}\r\n                        >\r\n                            <Typography\r\n                                variant='h3'\r\n                                style={{ fontSize: '2vw', marginLeft: '1%' }}\r\n                            >\r\n                                {item_skill_related.Name}\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                                align='center'\r\n                            >\r\n                                <Rating\r\n                                    readOnly\r\n                                    size=\"large\"\r\n                                    value={item_skill_related.Rating}\r\n                                    max={10}\r\n                                />\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                                variant='h4'\r\n                                style={{ fontSize: '1.5vw', marginLeft: '2%' }}\r\n                            >\r\n                                why do you put yourself that high?\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='subtitle1'\r\n                                style={{ fontSize: '1.1vw', color: TextSecondaryTheme, marginLeft: '3%' }}\r\n                            >\r\n                                {item_skill_related.Positive}\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                                variant='h4'\r\n                                style={{ fontSize: '1.5vw', marginLeft: '2%' }}\r\n                            >\r\n                                why do you put yourself that low?\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='subtitle1'\r\n                                style={{ fontSize: '1.1vw', color: TextSecondaryTheme, marginLeft: '3%' }}\r\n                            >\r\n                                {item_skill_related.negative}\r\n                            </Typography>\r\n                        </Paper>\r\n                    ))}\r\n                </Paper>\r\n            ))}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    Skill_List: state.Generic_About.Skill_List\r\n})\r\n\r\nexport default connect(mapStateToProps)(Skill)","// import React, { Fragment, useState, useEffect, useRef, useCallback } from 'react'\r\n\r\n// import Cv from '../../../IMG/CurriculumVitae.pdf'\r\n\r\n// import pdfjsLib from 'pdfjs-dist/build/pdf'\r\n// import pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\r\n\r\nimport React, { Fragment, useEffect } from 'react'\r\n\r\n// import { Document, Page } from 'react-pdf'\r\n\r\nimport { Paper, Typography } from '@material-ui/core'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\n// import CvPdf from '../../../IMG/CurriculumVitae.pdf'\r\nimport Cv from '../../../IMG/CurriculumVitae.png'\r\n// import Skill from '../About/Skill'\r\n\r\nconst CurriculumVitae = (props) => {\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    gsap.config({\r\n        nullTargetWarn: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        try {\r\n            gsap.fromTo('#CurriculumVitae', {\r\n                opacity: 0,\r\n                scale: 0,\r\n                y: -50,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: '#CurriculumVitae',\r\n                    start: 'top 110%',\r\n                    toggleActions: 'restart none none none',\r\n                    // toggleActions: 'restart pause resume pause',\r\n                    // markers: true,\r\n                },\r\n                opacity: 1,\r\n                y: 0,\r\n                scale: 1,\r\n                duration: 1\r\n            })\r\n        } catch (err) {\r\n            console.log('Log: CurriculumVitae -> err', err)\r\n        }\r\n    })\r\n    return (\r\n        <Fragment>\r\n            <Paper\r\n                id='CurriculumVitae'\r\n                variant='elevation'\r\n                style={{ border: 'none', padding: '2vw' }}\r\n            >\r\n                <img\r\n                    src={Cv}\r\n                    alt=\"CurriculumVitae\"\r\n                    style={{ maxWidth: '100vw', maxHeight: '160vh' }}\r\n                />\r\n                <Typography\r\n                    align='center'\r\n                    color='textSecondary'\r\n                    variant='subtitle1'\r\n                    style={{ fontSize: '1vw' }}\r\n                >\r\n                    *Due to privacy reasons, email and phone number are censored, for uncensored version please email me\r\n                    {/* *Because of a privacy reasons, email and phone number are censored, for uncensored version please email me */}\r\n                </Typography>\r\n                {/* <Document\r\n                    file={CvPdf}\r\n                    options={{ workerSrc: \"pdf.worker.js\" }}\r\n                >\r\n                    <Page\r\n                        pageNumber={1}\r\n                    />\r\n                </Document> */}\r\n            </Paper>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CurriculumVitae","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { useTheme, useMediaQuery, Grid, Paper } from '@material-ui/core'\r\nimport { Tabs, Tab } from '@material-ui/core'\r\nimport { MUI_Initial_State } from '../../MUI_Theme_Style'\r\n\r\n// import { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport Biodata from '../Containers/About/Biodata'\r\nimport LifePath from '../Containers/About/LifePath'\r\n// import LifePath from '../Containers/About/ShortLifePath'\r\nimport Skill from '../Containers/About/Skill'\r\nimport CurriculumVitae from '../Containers/About/CurriculumVitae'\r\n\r\n////// TODO ADD CV LOADER (PDF) DONT FOREGET CENSOR SOME OF THEM\r\n\r\nconst About = () => {\r\n    const [Tabsvalue, setTabsValue] = React.useState(0)\r\n    const handleTabsChange = (event, newValue) => {\r\n        setTabsValue(newValue)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(Tabsvalue)\r\n        ScrollTrigger.refresh()\r\n        // ScrollTrigger.update()\r\n    }, [Tabsvalue])\r\n    const theme = useTheme()\r\n    const NavbarTheme = theme.custom.navbar\r\n    const DefaultTheme = theme.palette.background.default\r\n    const ContrastTextTheme = theme.palette.primary.contrastText\r\n    const BiodataBackgrondColor = DefaultTheme\r\n    // const BiodataBackgrondColor = NavbarTheme\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n\r\n    const TapData = [\r\n        { taplabel: 'Curriculum Vitae', TapPanel: <CurriculumVitae /> },\r\n        { taplabel: 'Life Path', TapPanel: <LifePath /> },\r\n    ]\r\n\r\n    return (\r\n        <Paper\r\n            variant=\"outlined\"\r\n            style={{ border: 'none', paddingTop: '11%', paddingBottom: '1%', backgroundColor: NavbarTheme, borderRadius: '0', position: 'relative', zIndex: 1, minHeight: '100vh' }}\r\n        >\r\n            <Grid\r\n                container\r\n                direction={isFullNavbar ? 'row' : 'column-reverse'}\r\n                justify={isFullNavbar ? 'space-between' : 'center'}\r\n                alignItems={isFullNavbar ? 'flex-start' : 'center'}\r\n            >\r\n                <Paper\r\n                    variant='outlined'\r\n                    style={{\r\n                        ...{ border: 'none', padding: '10px', backgroundColor: BiodataBackgrondColor },\r\n                        ...{ minHeight: isFullNavbar ? '100vh' : '20vh', width: isFullNavbar ? '20%' : '90%', marginTop: isFullNavbar ? '-11%' : 0, paddingTop: isFullNavbar ? '8%' : 0, position: isFullNavbar ? 'fixed' : '' }\r\n                    }}\r\n                >\r\n                    <Biodata />\r\n                </Paper>\r\n                <Paper\r\n                    variant='outlined'\r\n                    style={{\r\n                        ...{ border: 'none', minHeight: '50vh', padding: 0, margin: 0, backgroundColor: NavbarTheme },\r\n                        ...{ width: isFullNavbar ? '75%' : '90%', marginLeft: isFullNavbar ? '25%' : 0, marginBottom: isFullNavbar ? 0 : '2%' }\r\n                    }}\r\n                >\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Tabs\r\n                            value={Tabsvalue}\r\n                            onChange={handleTabsChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                            scrollButtons=\"auto\"\r\n                            centered={TapData.length > 6 ? false : true}\r\n                        >\r\n                            {TapData.map((tapdata, index) => (\r\n                                <Tab\r\n                                    key={index}\r\n                                    label={tapdata.taplabel}\r\n                                    style={{ color: ContrastTextTheme }}\r\n                                />\r\n                            ))}\r\n                        </Tabs>\r\n\r\n                        {Tabsvalue === 0 ? (\r\n                            <Fragment>\r\n                                {TapData[Tabsvalue].TapPanel}\r\n                                <Skill Tabsvalue={Tabsvalue} />\r\n                            </Fragment>\r\n                        ) : null}\r\n\r\n                        {Tabsvalue === 1 ? (\r\n                            <Fragment>\r\n                                {TapData[Tabsvalue].TapPanel}\r\n                                <Skill Tabsvalue={Tabsvalue} />\r\n                            </Fragment>\r\n                        ) : null}\r\n\r\n                        {/* <Skill Tabsvalue={Tabsvalue} /> */}\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default About","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport Store from '../../Store/Store'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Hide_Nabar } from '../../Store/Actions/Display.Action'\r\nimport { Get_Useable_KasirQu_User_List, Get_Useable_PrestasiQu_User_List } from '../../Store/Actions/Blog.Actions'\r\n\r\n// import { Redirect } from 'react-router-dom'\r\n\r\nimport { useTheme, Paper, Link, Typography, Box, LinearProgress, Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\n\r\nimport Logo from '../../IMG/logo_1.png'\r\n\r\nimport PauseCircleFilledRoundedIcon from '@material-ui/icons/PauseCircleFilledRounded'\r\nimport PlayCircleFilledRoundedIcon from '@material-ui/icons/PlayCircleFilledRounded'\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded'\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded'\r\n\r\nconst Preview = (props) => {\r\n    const [state, setState] = React.useState({\r\n        isPause: false,\r\n    })\r\n    const WaitTime = 10\r\n\r\n    const Destination = props.BlogPreviewURL ? props.BlogPreviewURL : null\r\n    console.log('Log: Preview -> Destination', Destination)\r\n\r\n    const KasirQuDestination = '/blog/preview/kasirqu'\r\n    const PrestasiQuDestination = '/blog/preview/prestasiqu'\r\n\r\n    const [progress, setProgress] = React.useState(0)\r\n    console.log(`${progress}/${WaitTime}s`)\r\n    // console.log('Log: Preview -> progress', state.isPause)\r\n    useEffect(() => {\r\n        Store.dispatch(Hide_Nabar())\r\n        if (Destination === KasirQuDestination) {\r\n            Store.dispatch(Get_Useable_KasirQu_User_List())\r\n        } else if (Destination === PrestasiQuDestination) {\r\n            Store.dispatch(Get_Useable_PrestasiQu_User_List())\r\n        }\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (state.isPause === false && prevProgress < WaitTime ? prevProgress + 1 : prevProgress + 0))\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [state.isPause, WaitTime, Destination])\r\n\r\n    const theme = useTheme()\r\n    const DefaultTheme = theme.palette.background.default\r\n    // const PrimaryMainTheme = theme.palette.primary.main\r\n    // const SecondaryMainTheme = theme.palette.secondary.main\r\n    // const ContrastTextTheme = theme.palette.primary.contrastText\r\n    // const TextPrimaryTheme = theme.palette.text.primary\r\n    // const TextSecondaryTheme = theme.palette.text.secondary\r\n\r\n    const PauseLoading = (PauseCondition) => {\r\n        setState({ isPause: PauseCondition })\r\n        // console.log(state.isPause)\r\n    }\r\n\r\n    const UseableUserList = Destination === KasirQuDestination ?\r\n        (props.KasirQu_Useable_User_List ?\r\n            props.KasirQu_Useable_User_List\r\n            : [])\r\n        : Destination === PrestasiQuDestination ?\r\n            (props.PrestasiQu_Useable_User_List ?\r\n                props.PrestasiQu_Useable_User_List\r\n                : [])\r\n            : []\r\n    // console.log('Log: Preview -> UseableUserList', UseableUserList)\r\n\r\n    const QuestionTypography = (props) => {\r\n        return <Typography\r\n            align='left'\r\n            variant='h3'\r\n            color='textPrimary'\r\n            style={{ fontSize: '1.8vw' }}\r\n            {...props}\r\n        />\r\n    }\r\n\r\n    const AnswerTypography = (props) => {\r\n        return <Typography\r\n            align='left'\r\n            variant='subtitle1'\r\n            color='textSecondary'\r\n            style={{ fontSize: '1.2vw', marginLeft: '1vw' }}\r\n            {...props}\r\n        />\r\n    }\r\n\r\n    const ReadMeKasirQu = () => {\r\n        return (\r\n            <Fragment>\r\n                <QuestionTypography>\r\n                    Is a preview 100% same as original?\r\n                                        </QuestionTypography>\r\n                <AnswerTypography>\r\n                    No, because there is no backend service avaliable some of them are not working, a preview only show frontend\r\n                                </AnswerTypography>\r\n\r\n                <QuestionTypography>\r\n                    What kind of function didnt work on preview?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    All function related with backend service (add, get, update, delete), in addition some of them changes to give better experience, some of them also change to give warning about related function didnt work\r\n                                </AnswerTypography>\r\n\r\n                <QuestionTypography>\r\n                    How can i use preview page?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    To use a preview page, first you need to have account and password (listed below), after login you can go to help page and read related topic\r\n                                </AnswerTypography>\r\n                <AnswerTypography>\r\n                    Account Detail:\r\n                                </AnswerTypography>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align='center' style={{ width: '5%' }} >No</TableCell>\r\n                            <TableCell align='center' style={{ width: '40%' }} >User Name</TableCell>\r\n                            <TableCell align='center' style={{ width: '15%' }} >Password</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Active</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Kasir</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Admin</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Super User</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {UseableUserList.map((item, index) => (\r\n                            <TableRow\r\n                                hover\r\n                                key={index}\r\n                            >\r\n                                <TableCell align='right' >{index + 1}</TableCell>\r\n                                <TableCell align='left' >{item.UserName}</TableCell>\r\n                                <TableCell align='left' >{item.Password}</TableCell>\r\n                                <TableCell align='center' >{item.isActive ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.isKasir ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.isAdmin ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.isSuperUser ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <QuestionTypography>\r\n                    How can i back to homepage?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    to back to homepage you can change url or logout, after logout you will redirected to login page, in there you can find button to back to homepage\r\n                                </AnswerTypography>\r\n                <QuestionTypography>\r\n                    Where can i find logout button?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    first you must go to account menu, you can find it on side menu or main menu. in account menu under profile you can find logout button\r\n                </AnswerTypography>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const ReadMePrestasiQu = () => {\r\n        return (\r\n            <Fragment>\r\n                <QuestionTypography>\r\n                    Is a preview 100% same as original?\r\n                                        </QuestionTypography>\r\n                <AnswerTypography>\r\n                    No, because there is no backend service avaliable some of them are not working, a preview only show frontend\r\n                                </AnswerTypography>\r\n\r\n                <QuestionTypography>\r\n                    What kind of function didnt work on preview?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    All function related with backend service (add, get, update, delete), in addition some of them changes to give better experience, some of them also change to give warning about related function didnt work\r\n                                </AnswerTypography>\r\n\r\n                <QuestionTypography>\r\n                    How can i use preview page?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    To use a preview page, first you need to have account and password (listed below), after login you can go to help page and read related topic\r\n                                </AnswerTypography>\r\n                <AnswerTypography>\r\n                    Account Detail:\r\n                                </AnswerTypography>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align='center' style={{ width: '5%' }} >No</TableCell>\r\n                            <TableCell align='center' style={{ width: '20%' }} >User Name</TableCell>\r\n                            <TableCell align='center' style={{ width: '15%' }} >Password</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Active</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Siswa</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Staff</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Admin</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Super Visor</TableCell>\r\n                            <TableCell align='center' style={{ width: '10%' }} >Super User</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {UseableUserList.map((item, index) => (\r\n                            <TableRow\r\n                                hover\r\n                                key={index}\r\n                            >\r\n                                <TableCell align='right' >{index + 1}</TableCell>\r\n                                <TableCell align='left' >{item.UserName}</TableCell>\r\n                                <TableCell align='left' >{item.Password}</TableCell>\r\n                                <TableCell align='center' >{item.active ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.siswa ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.staff ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.admin ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.supervisor ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                                <TableCell align='center' >{item.superuser ? <CheckCircleOutlineRoundedIcon color='primary' /> : <CancelRoundedIcon color='secondary' />}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <QuestionTypography>\r\n                    How can i back to homepage?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    to back to homepage you can change url or logout, after logout you will redirected to login page, in there you can find button to back to homepage\r\n                                </AnswerTypography>\r\n                <QuestionTypography>\r\n                    Where can i find logout button?\r\n                                </QuestionTypography>\r\n                <AnswerTypography>\r\n                    at the right side of navbar\r\n                </AnswerTypography>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            variant='outlined'\r\n            style={{ minWidth: '100vw', minHeight: '100vh', paddingBottom: '5vh', backgroundColor: DefaultTheme, border: 'none' }}\r\n        >\r\n            {/* {progress === WaitTime ? <Redirect to={Destination ? Destination : \"/\"} /> : null} */}\r\n            {progress === WaitTime ? window.location = Destination ? Destination : \"/\" : null}\r\n            {/* {progress === WaitTime ? window.open(Destination ? Destination : \"/\", '_blank') : null} */}\r\n            <center>\r\n                <Link\r\n                    href='/' underline='none'\r\n                >\r\n                    <img\r\n                        src={Logo}\r\n                        alt='logo'\r\n                        // 512 x 522\r\n                        style={{ width: '19vw', height: '28vh', paddingTop: '10vh' }}\r\n                    />\r\n                </Link>\r\n                <Typography\r\n                    variant='subtitle1'\r\n                    color='textSecondary'\r\n                    align='center'\r\n                    style={{ fontSize: '0.9vw', marginTop: '1vh' }}\r\n                >\r\n                    {`*Clik Image Above To Redirect to Home Page or Wait ${WaitTime} Sec`}\r\n                </Typography>\r\n                <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    style={{ border: 'none', paddingLeft: '40%' }}\r\n                >\r\n                    <Box\r\n                        width=\"30%\"\r\n                        mr={1}\r\n                    >\r\n                        <LinearProgress\r\n                            variant='determinate'\r\n                            color={state.isPause ? 'secondary' : 'primary'}\r\n                            value={(progress / WaitTime) * 100}\r\n                        // style={{ width: '25vw', height: '1vh' }}\r\n                        />\r\n                    </Box>\r\n                    <Box\r\n                        // minWidth={35}\r\n                        style={{ border: 'none' }}\r\n                    >\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                        >\r\n                            {`${Math.round((progress / WaitTime) * 100)}%`}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box\r\n                    // style={{ border: '1px solid red' }}\r\n                    >\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                        >\r\n                            {state.isPause ?\r\n                                <PlayCircleFilledRoundedIcon\r\n                                    color='primary'\r\n                                    onClick={() => PauseLoading(false)}\r\n                                />\r\n                                : <PauseCircleFilledRoundedIcon\r\n                                    color='secondary'\r\n                                    onClick={() => PauseLoading(true)}\r\n                                />}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                {Destination ? (\r\n                    <Paper\r\n                        variant='outlined'\r\n                        style={{ width: '80vw', minHeight: '40vh', boxShadow: '0 2px 4px -1px #010101', marginTop: '5vh', marginBottom: '5vh', padding: '2vw', borderRadius: '15px' }}\r\n                    >\r\n                        <Typography\r\n                            variant='h1'\r\n                            color='textPrimary'\r\n                            align='center'\r\n                            style={{ fontSize: '2vw' }}\r\n                        >\r\n                            {Destination === KasirQuDestination ?\r\n                                \"KasirQu\"\r\n                                : Destination === PrestasiQuDestination ?\r\n                                    \"PrestasiQu\"\r\n                                    : ''}\r\n                        </Typography>\r\n\r\n                        {Destination === KasirQuDestination ? <ReadMeKasirQu />\r\n                            : Destination === PrestasiQuDestination ? <ReadMePrestasiQu />\r\n                                : null}\r\n                        {/* <center> */}\r\n                        {state.isPause ?\r\n                            <Button\r\n                                color='primary'\r\n                                variant='contained'\r\n                                style={{ paddingTop: '1vh', paddingBottom: '1vh', margin: '1%', borderRadius: '5px', width: '90%' }}\r\n                                onClick={() => PauseLoading(false)}\r\n                            >\r\n                                Continue a Timer\r\n                                </Button>\r\n                            : <Button\r\n                                color='secondary'\r\n                                variant='contained'\r\n                                style={{ paddingTop: '1vh', paddingBottom: '1vh', margin: '1%', borderRadius: '5px', width: '90%' }}\r\n                                onClick={() => PauseLoading(true)}\r\n                            >\r\n                                Pause a Timer\r\n                                </Button>\r\n                        }\r\n                        <Button\r\n                            color='primary'\r\n                            variant='contained'\r\n                            style={{ paddingTop: '1vh', paddingBottom: '1vh', margin: '1%', borderRadius: '5px', width: '90%' }}\r\n                            onClick={() => setProgress(WaitTime)}\r\n                        >\r\n                            Go To Preview Page\r\n                            </Button>\r\n                        {/* </center> */}\r\n                    </Paper>)\r\n\r\n                    : (<Typography\r\n                        variant='h1'\r\n                        color='secondary'\r\n                        align='center'\r\n                        style={{ marginTop: '10vh', fontSize: '3vw' }}\r\n                    >\r\n                        Something Wrong Happen, Cant Redirect to Unknow Destination\r\n                    </Typography>)}\r\n            </center>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    BlogPreviewURL: state.Generic_Blog.BlogPreviewURL,\r\n    KasirQu_Useable_User_List: state.Generic_Blog.KasirQu_Useable_User_List,\r\n    PrestasiQu_Useable_User_List: state.Generic_Blog.PrestasiQu_Useable_User_List,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Preview)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Button } from '@material-ui/core'\r\n\r\nimport logo from '../../IMG/logo_1.png'\r\n\r\nexport const PageNotFound = (props) => {\r\n    // return (\r\n    //     <Fragment>\r\n    //         <h1\r\n    //             style={{ paddingTop: '20%', paddingLeft: '40%', position: 'absolute' }}\r\n    //         >\r\n    //             this is Page Not Found\r\n    //             </h1>\r\n    //     </Fragment>\r\n    // )\r\n    const BackButton = () => {\r\n        window.history.back()\r\n    }\r\n    const HomeButton = () => {\r\n        window.location = \"/\"\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' style={{ marginTop: '10%', padding: '10px' }}>\r\n                <img src={logo} alt='logo kasirqu' onClick={() => HomeButton()} />\r\n            </Typography>\r\n            <Typography variant='h2' align='center'>\r\n                Halaman Tidak Ditemukan\r\n            </Typography>\r\n            <Typography variant='subtitle1' align='center'>\r\n                Klik tombol dibawah untuk kembali atau logo untuk ke halaman utama\r\n            </Typography>\r\n            <Typography align='center'>\r\n                <Button variant='contained' color='primary' onClick={() => BackButton()} style={{ padding: '10px', marginTop: '10px' }} >\r\n                    Kembali !\r\n                </Button>\r\n            </Typography>\r\n            {props.ket ?\r\n                <Typography variant='h6' align='center'>\r\n                    {props.ket}\r\n                </Typography>\r\n                : null\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { useTheme, useMediaQuery, Paper, Grid, Typography } from '@material-ui/core'\r\nimport { MUI_Initial_State } from '../../../MUI_Theme_Style'\r\n\r\nimport { gsap } from 'gsap'\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nconst ExplanationPanel = (props) => {\r\n    gsap.registerPlugin(ScrollTrigger)\r\n    useEffect(() => {\r\n        const IdforGSAP = props.id ? `.${props.id}` : '.ExplanationPanel'\r\n        if (document.querySelector(IdforGSAP)) {\r\n            gsap.fromTo(IdforGSAP, {\r\n                opacity: 0,\r\n                scale: 0,\r\n            }, {\r\n                scrollTrigger: {\r\n                    trigger: IdforGSAP,\r\n                    start: 'top 110%',\r\n                    toggleActions: 'restart none none none',\r\n                    // markers: true,\r\n                },\r\n                opacity: 1,\r\n                scale: 1,\r\n                duration: 1\r\n            })\r\n        }\r\n        ScrollTrigger.refresh()\r\n    })\r\n\r\n    const theme = useTheme()\r\n    // const NavbarColor = theme.custom.navbar\r\n    // const PrimaryColor = theme.palette.primary.main\r\n    // const SecondaryColor = theme.palette.secondary.main\r\n    // const ContrastTextColor = theme.palette.primary.contrastText\r\n    // const PrimaryTextColor = theme.palette.text.primary\r\n    const SecondaryTextColor = theme.palette.text.secondary\r\n\r\n    const minScreenWidth = MUI_Initial_State.units.minWidth_first\r\n    const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\r\n\r\n    return (\r\n        <Paper\r\n            variant='outlined'\r\n            id={props.id ? props.id : 'ExplanationPanel'}\r\n            className={props.id ? props.id : 'ExplanationPanel'}\r\n            style={props.ContainerStyle ?\r\n                props.ContainerStyle\r\n                : {\r\n                    ...{ border: 'none', position: 'relative', zIndex: 5, minHeight: '40vh', marginTop: '5vh', marginBottom: '5vh' },\r\n                    ...props.AditionalContainerStyle ? props.AditionalContainerStyle : {}\r\n                }\r\n            }\r\n        >\r\n            {props.UnUsualContent ? props.UnUsualContent : (\r\n                <Grid\r\n                    container\r\n                    direction={isFullNavbar ? props.ReverstRow ? \"row-reverse\" : \"row\" : props.ReverstColumn ? \"column-reverse\" : \"column\"}\r\n                    justify={isFullNavbar ? props.ContentImage || props.ContentICO ? \"space-between\" : \"center\" : \"center\"}\r\n                    alignItems=\"center\"\r\n                    style={{ border: 'none', paddingTop: '2vh', paddingBottom: '2vh' }}\r\n                >\r\n                    <Paper\r\n                        variant='outlined'\r\n                        style={{ border: 'none', width: isFullNavbar ? '60vw' : \"90vw\", marginTop: isFullNavbar ? 0 : '2vh', marginBottom: isFullNavbar ? 0 : '2vh' }}\r\n                    >\r\n                        {props.Title ? (\r\n                            <Typography\r\n                                variant='h1'\r\n                                align={props.TitleAlign ? props.TitleAlign : 'center'}\r\n                                style={\r\n                                    props.TitleStyle ?\r\n                                        props.TitleStyle\r\n                                        : {\r\n                                            ...{ fontSize: '3vw' },\r\n                                            ...props.AditionalTitleStyle ? props.AditionalTitleStyle : {}\r\n                                        }\r\n                                }\r\n                            >\r\n                                {props.Title}\r\n                            </Typography>)\r\n                            : null}\r\n\r\n                        {props.Description ? (\r\n                            <Typography\r\n                                variant='subtitle1'\r\n                                align={props.DescriptionAlign ? props.DescriptionAlign : 'center'}\r\n                                style={\r\n                                    props.DescriptionStyle ?\r\n                                        props.DescriptionStyle\r\n                                        : {\r\n                                            ...{ fontSize: '1.5vw', color: SecondaryTextColor },\r\n                                            ...props.AditionalDescriptionStyle ? props.AditionalDescriptionStyle : {}\r\n                                        }\r\n                                }\r\n                            >\r\n                                {props.Description}\r\n                            </Typography>)\r\n                            : null}\r\n                    </Paper>\r\n\r\n                    {props.ContentImage || props.ContentICO ? (\r\n                        <Paper\r\n                            variant='outlined'\r\n                            style={{ border: 'none', width: '35vw', marginTop: isFullNavbar ? 0 : '2vh', marginBottom: isFullNavbar ? 0 : '2vh' }}\r\n                        >\r\n                            {props.ContentImage ?\r\n                                <img\r\n                                    src={props.ContentImage}\r\n                                    alt={props.Title ?\r\n                                        `${props.Title}Image`\r\n                                        : 'ExplanationPanelImage'}\r\n                                    style={{ height: '100vh', width: '100vw', maxHeight: '30vh', maxWidth: '35vw' }}\r\n                                />\r\n                                : <props.ContentICO style={{ border: 'none', height: '100vh', width: '100vw', maxHeight: '30vh', maxWidth: '35vw' }} />\r\n                            }\r\n                        </Paper>\r\n                    ) : null}\r\n                </Grid>\r\n            )}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ExplanationPanel","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport Store from '../../../Store/Store'\r\nimport { connect } from 'react-redux'\r\nimport { Get_Blog_Detail } from '../../../Store/Actions/Blog.Actions'\r\n\r\n// import { gsap } from 'gsap'\r\n// // import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\n// import { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport Introduce from '../../Containers/Blog/Introduce'\r\nimport OpeningPanel from '../../Containers/Blog/OpeningPanel'\r\nimport ExplanationPanel from '../../Containers/Blog/ExplanationPanel'\r\nimport FooterPanel from '../../Containers/Blog/FooterPanel'\r\n\r\nimport Logo from '../../../IMG/logo_1.png'\r\nimport { GiTicTacToe, GiCardJoker } from 'react-icons/gi'\r\n\r\nconst BlogLearning = (props) => {\r\n    useEffect(() => {\r\n        Store.dispatch(Get_Blog_Detail(1))\r\n        // ScrollTrigger.refresh()\r\n    }, [])\r\n    const ShowData = props.Blog_Detail\r\n    return (\r\n        <Fragment>\r\n            <Introduce\r\n                Description={ShowData?.Title ? ShowData.Title : ''}\r\n                SVGd=\"M0,128L48,106.7C96,85,192,43,288,53.3C384,64,480,128,576,144C672,160,768,128,864,138.7C960,149,1056,203,1152,202.7C1248,203,1344,149,1392,122.7L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n            />\r\n            <OpeningPanel\r\n                Title={ShowData?.Title ? ShowData.Title : ''}\r\n                Description={ShowData?.Description ? ShowData.Description : ''}\r\n            />\r\n            {/* <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 1440 320\"\r\n            >\r\n                <path\r\n                    fill=\"#0099ff\"\r\n                    fill-opacity=\"1\"\r\n                    d=\"M0,128L48,106.7C96,85,192,43,288,53.3C384,64,480,128,576,144C672,160,768,128,864,138.7C960,149,1056,203,1152,202.7C1248,203,1344,149,1392,122.7L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n                >\r\n                </path>\r\n            </svg> */}\r\n            <ExplanationPanel\r\n                id='TicTacToe'\r\n                Title='TicTacToe'\r\n                Description='Recreate TicTacToe game on python, you can play with your friend (in same pc) or play with scripted bot but without GUI'\r\n                // ContentImage={Logo}\r\n                ContentICO={GiTicTacToe}\r\n            />\r\n            <ExplanationPanel\r\n                id='CardGame41'\r\n                Title='41CardGame'\r\n                Description='Recreate 41CardGame game on python, you can play with your friend (in same pc) or play with scripted bot but without GUI'\r\n                ContentICO={GiCardJoker}\r\n                ReverstRow={true}\r\n            />\r\n            <ExplanationPanel\r\n                id='MachineLearning'\r\n                Title='Machine Learning'\r\n                Description='Image Recognition/Classification, Regression Analysis, Classification. using multiple dataset'\r\n                ContentImage={Logo}\r\n            />\r\n            {/* <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 1440 320\"\r\n            >\r\n                <path\r\n                    fill=\"#0099ff\"\r\n                    fill-opacity=\"1\"\r\n                    d=\"M0,128L288,0L576,192L864,96L1152,256L1440,96L1440,320L1152,320L864,320L576,320L288,320L0,320Z\"\r\n                >\r\n                </path>\r\n            </svg> */}\r\n            <FooterPanel\r\n                GithubLink={ShowData?.GithubLink ? ShowData.GithubLink : ''}\r\n                PrototypeLink={ShowData?.PrototypeLink ? ShowData.PrototypeLink : ''}\r\n                SVGd=\"M0,128L288,0L576,192L864,96L1152,256L1440,96L1440,320L1152,320L864,320L576,320L288,320L0,320Z\"\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    Blog_Detail: state.Generic_Blog.Blog_Detail\r\n})\r\n\r\nexport default connect(mapStateToProps)(BlogLearning)","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport Store from '../../../Store/Store'\r\nimport { connect } from 'react-redux'\r\nimport { Get_Blog_Detail } from '../../../Store/Actions/Blog.Actions'\r\n\r\n// import { gsap } from 'gsap'\r\n// // import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\n// import { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport Introduce from '../../Containers/Blog/Introduce'\r\nimport OpeningPanel from '../../Containers/Blog/OpeningPanel'\r\nimport ExplanationPanel from '../../Containers/Blog/ExplanationPanel'\r\nimport FooterPanel from '../../Containers/Blog/FooterPanel'\r\n\r\nimport Logo from '../../../IMG/logo_1.png'\r\nimport { GrGroup, GrHistory, GrServers } from 'react-icons/gr'\r\nimport { GoGraph } from 'react-icons/go'\r\nimport { IoIosPricetags } from 'react-icons/io'\r\nimport { MdImportExport } from 'react-icons/md'\r\n\r\nconst BlogKasirQu = (props) => {\r\n    useEffect(() => {\r\n        Store.dispatch(Get_Blog_Detail(3))\r\n        // ScrollTrigger.refresh()\r\n    }, [])\r\n    const ShowData = props.Blog_Detail\r\n    return (\r\n        <Fragment>\r\n            <Introduce\r\n                Description={ShowData?.Title ? ShowData.Title : ''}\r\n                SVGd=\"M0,160L48,165.3C96,171,192,181,288,202.7C384,224,480,256,576,240C672,224,768,160,864,138.7C960,117,1056,139,1152,138.7C1248,139,1344,117,1392,106.7L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n            />\r\n            {/* <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 1440 320\"\r\n            >\r\n                <path\r\n                    fill=\"#0099ff\"\r\n                    fill-opacity=\"1\"\r\n                    d=\"M0,160L48,165.3C96,171,192,181,288,202.7C384,224,480,256,576,240C672,224,768,160,864,138.7C960,117,1056,139,1152,138.7C1248,139,1344,117,1392,106.7L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n                >\r\n                </path>\r\n            </svg> */}\r\n            <OpeningPanel\r\n                Title={ShowData?.Title ? ShowData.Title : ''}\r\n                Description={ShowData?.Description ? ShowData.Description : ''}\r\n            />\r\n            <ExplanationPanel\r\n                id='GroupedUser'\r\n                Title='Grouped User'\r\n                Description='Each User grouped into a category, an action allowed or not determine based on User Group'\r\n                ContentICO={GrGroup}\r\n            />\r\n            <ExplanationPanel\r\n                id='PriceCategory'\r\n                Title='PriceCategory'\r\n                Description='An Admin User can set a price category base on minimum stuff buyer purchase'\r\n                ContentICO={IoIosPricetags}\r\n                ReverstRow={true}\r\n            />\r\n            <ExplanationPanel\r\n                id='ReportSystem'\r\n                Title='Report System'\r\n                Description='User can check for Report about what happen in apps related to the transaction, like how much supply remaining, how much transaction in a day or anything else user want'\r\n                ContentICO={GoGraph}\r\n            />\r\n            <ExplanationPanel\r\n                id='EasyToUse'\r\n                Title='Easy to Use'\r\n                Description='System designed to easy to use, a feature like sorting, searching, query, day and night theme and many more are available'\r\n                ContentImage={Logo}\r\n                ReverstRow={true}\r\n            />\r\n            <ExplanationPanel\r\n                id='ServerSide'\r\n                Title='Can be accessed from local network'\r\n                Description='Because this system build based on express.js and bundle with electron.js user can use this apps concurrently as long main apps run in the same local network'\r\n                ContentICO={GrServers}\r\n            />\r\n            <ExplanationPanel\r\n                id='ImportExport'\r\n                Title='Import/Export'\r\n                Description='If you are tired of input data one by one or scared data lose, we provide Import/Export using an excel file'\r\n                ContentICO={MdImportExport}\r\n                ReverstRow={true}\r\n            />\r\n            <ExplanationPanel\r\n                id='History'\r\n                Title='History'\r\n                Description='Recode all important stuff that happens in the system'\r\n                ContentICO={GrHistory}\r\n            />\r\n            {/* <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 1440 320\"\r\n            >\r\n                <path\r\n                    fill=\"#0099ff\"\r\n                    fill-opacity=\"1\"\r\n                    d=\"M0,160L48,165.3C96,171,192,181,288,202.7C384,224,480,256,576,240C672,224,768,160,864,138.7C960,117,1056,139,1152,138.7C1248,139,1344,117,1392,106.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n                >\r\n                </path>\r\n            </svg> */}\r\n            <FooterPanel\r\n                GithubLink={ShowData?.GithubLink ? ShowData.GithubLink : ''}\r\n                PrototypeLink={ShowData?.PrototypeLink ? ShowData.PrototypeLink : ''}\r\n                SVGd=\"M0,160L48,165.3C96,171,192,181,288,202.7C384,224,480,256,576,240C672,224,768,160,864,138.7C960,117,1056,139,1152,138.7C1248,139,1344,117,1392,106.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    Blog_Detail: state.Generic_Blog.Blog_Detail\r\n})\r\n\r\nexport default connect(mapStateToProps)(BlogKasirQu)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Create_Error_Messages } from '../Store/Actions/Messages.Actions'\r\n\r\n// import Store from '../Store/Store'\r\nimport Store from '../../../../../Store/Store'\r\n\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// import Loading from '../Components/Container/Loading'\r\n\r\nconst PrivateRoute = ({ component: Component, auth, SecurityType, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        if (auth.isUserLoading) {\r\n            return <h2>loading...</h2>\r\n            // return <Loading />\r\n        } else if (!auth.isAuth) {\r\n            return <Redirect to=\"/blog/preview/kasirqu/login\" />\r\n        } else {\r\n            const User = auth.User\r\n            if (User) {\r\n                if (SecurityType) {\r\n                    const isAdmin = User.isAdmin\r\n                    const isSuperUser = User.isSuperUser\r\n                    if (SecurityType === 'SuperPrivacry' && !isSuperUser) {\r\n                        Store.dispatch(\r\n                            Create_Error_Messages(null, 'anda harus masuk dengan akun SUPERUSER untuk mengakses halaman terkait')\r\n                        )\r\n                        return <Redirect to=\"/blog/preview/kasirqu/\" />\r\n                    } else if (SecurityType === 'Privacry' && !(isAdmin || isSuperUser)) {\r\n                        Store.dispatch(\r\n                            Create_Error_Messages(null, 'anda harus masuk dengan akun ADMIN atau SUPERUSER untuk mengakses halaman terkait')\r\n                        )\r\n                        return <Redirect to=\"/blog/preview/kasirqu/\" />\r\n                    } else {\r\n                        return <Component {...props} />\r\n                    }\r\n                } else {\r\n                    return <Component {...props} />\r\n                }\r\n            }\r\n        }\r\n    }} />\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.KasirQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LogIn } from '../../../Store/Actions/Auth.Actions'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n// import { Link as GoTo } from 'react-router-dom'\r\n\r\nimport { Container, Typography, TextField, FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton, FormGroup, FormControlLabel, Checkbox, FormHelperText, Button, Link } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_st_Login_Container, MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\nimport logo from '../../../IMG/logo.png'\r\n\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        isShowPassword: false,\r\n        firsttimeuse_clickcounter: 0,\r\n        isClient: false,\r\n        IpAddress: '',\r\n        Port: '',\r\n        WebSite: ''\r\n    }\r\n    onChange = E => this.setState({ [E.target.name]: E.target.value })\r\n    onSubmit = E => {\r\n        E.preventDefault()\r\n        // console.log(1)\r\n        this.props.LogIn(this.state.username, this.state.password, this.state.IpAddress, this.state.Port, this.state.WebSite)\r\n    }\r\n    onClickShowPassword = () => {\r\n        this.setState({ isShowPassword: !this.state.isShowPassword })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    onClickFirstTimeUse = () => {\r\n        console.log('counter', this.state.firsttimeuse_clickcounter)\r\n        if (this.state.firsttimeuse_clickcounter < 10) {\r\n            this.setState({ firsttimeuse_clickcounter: (this.state.firsttimeuse_clickcounter + 1) })\r\n        } else {\r\n            window.location.href = '/blog/preview/kasirqu/firsttimeuse'\r\n        }\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        if ((this.props.isAuth && this.props.token)) {\r\n            return <Redirect to=\"/blog/preview/kasirqu/\" />\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            isClient,\r\n            IpAddress,\r\n            Port,\r\n            WebSite,\r\n        } = this.state\r\n        // const logo = process.env.PUBLIC_URL + '/IMG/Logo.png'\r\n        const LoginPageTheme = theme.customTheme?.loginpage ? theme.customTheme.loginpage : {}\r\n        const st_container = { ...MUI_st_Login_Container, ...LoginPageTheme }\r\n        const st_textfield = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const st_button = { ...MUI_FullWidth }\r\n        // console.log(this.state)\r\n        return (\r\n            <Fragment >\r\n                <Container maxWidth='sm' style={st_container} >\r\n                    <Typography variant=\"h3\" align='center' gutterBottom>\r\n                        Login page\r\n                    </Typography>\r\n                    <Typography align='center'>\r\n                        <img src={logo} alt='logo kasirqu' onClick={this.onClickFirstTimeUse} />\r\n                    </Typography>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <Typography align='right' style={{ padding: '10px', margin: '10px' }} color='textPrimary' >\r\n                            <Link href='/blog/preview/kasirqu/help/login' color=\"textPrimary\"  >Bantuan Login?</Link>\r\n                            <Link href='/blog/preview/kasirqu/help/first_time_use' color=\"textPrimary\" style={{ padding: '10px' }} >Penggunaan Pertama?</Link>\r\n                        </Typography>\r\n                        <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='User Name' name='username' value={username} />\r\n                        <FormControl variant=\"outlined\" style={st_textfield} >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={this.state.isShowPassword ? 'text' : 'password'}\r\n                                value={password}\r\n                                name='password'\r\n                                onChange={this.onChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={this.onClickShowPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {this.state.isShowPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n\r\n                        <FormGroup row>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color='primary' onChange={this.CheckBox_OnChange} name=\"isClient\" value={isClient} />}\r\n                                label=\"Saya Mengakses dari Client\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        {isClient ? (\r\n                            <Fragment>\r\n                                <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Ip Address' name='IpAddress' value={IpAddress}\r\n                                    inputProps={{\r\n                                        minLength: 7,\r\n                                        maxLength: 15,\r\n                                        /* eslint-disable */\r\n                                        pattern: \"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\"\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>fromat: xxx.xxx.xxx.xxx -&gt; xxx = 0-256</FormHelperText>\r\n                                <FormHelperText>ipaddres bisa di cek di Run -&gt; \"cmd\" -&gt; \"ipconfig\" -&gt; IPv4 Address</FormHelperText>\r\n                                <TextField style={st_textfield} variant='outlined' type='text' inputMode='numeric' onChange={this.onChange} label='Port' name='Port' value={Port} />\r\n                                <FormHelperText>Berikut contoh port http://127.0.0.1:<b style={{ color: 'blue' }}>3000</b>/login biasanya diantara \":\" dan \"/\" setlah alamt web</FormHelperText>\r\n                                <FormHelperText>Port diseting di 5000, form ini disediakan untuk jaga jaga saja jika terjadi masalah pada port, biasanya anda tidak perlu mengisi port</FormHelperText>\r\n                                <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Alamat Web' name='WebSite' value={WebSite} />\r\n                                <FormHelperText>format penulisan hanya alamtnya saja, misal https://www.google.com/ yang dimasukkan hanya google.com </FormHelperText>\r\n                            </Fragment>\r\n                        ) : null}\r\n\r\n                        <Button variant=\"outlined\" style={st_button} color='primary' size=\"large\" type='submit' >\r\n                            Log In\r\n                        </Button>\r\n                        <Button variant=\"outlined\" style={{ ...st_button, ...{ marginTop: '3vh' } }} color='secondary' size=\"large\" onClick={() => window.location = \"/\"} >\r\n                            Back to Home\r\n                        </Button>\r\n                    </form>\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.KasirQu_Auth.isAuth,\r\n    token: state.KasirQu_Auth.token,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LogIn })(withTheme(Login))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { First_Time_Use } from '../../Store/Actions/Auth.Actions'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Container, TextField, Link } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_st_Login_Container, MUI_FullWidth, MUI_VerticalMargin, MUI_HorizontalsmButtonMargin } from '../../MUI_theme'\r\n\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\nclass FirsTimeUse extends React.Component {\r\n    state = {\r\n        UserName: '',\r\n        Name: '',\r\n        Password: '',\r\n        ConfirmPassword: '',\r\n        Cupon: '',\r\n        Profilepicture: null,\r\n        NamaToko: '',\r\n        Alamat: '',\r\n        Kontak: '',\r\n        Logo: null,\r\n        activeStep: 0,\r\n    }\r\n    onChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    onSubmit = E => {\r\n        E.preventDefault()\r\n        if (((this.state.Password === this.state.ConfirmPassword) && (this.state.Password))) {\r\n            const User = {\r\n                UserName: this.state.UserName,\r\n                Name: this.state.Name,\r\n                Password: this.state.Password,\r\n                cupon: this.state.Cupon,\r\n                Profilepicture: this.state.Profilepicture,\r\n            }\r\n            const Toko = {\r\n                NamaToko: this.state.NamaToko,\r\n                Alamat: this.state.Alamat,\r\n                Kontak: this.state.Kontak,\r\n                Logo: this.state.Logo,\r\n            }\r\n            this.props.First_Time_Use(User, Toko)\r\n        }\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    onClickCancel = () => {\r\n        window.location.href = '/blog/preview/kasirqu/login'\r\n    }\r\n    handleNext = () => {\r\n        this.setState({ activeStep: this.state.activeStep + 1 })\r\n    }\r\n    handleBack = () => {\r\n        this.setState({ activeStep: this.state.activeStep - 1 })\r\n    }\r\n    handleReset = () => {\r\n        this.setState({\r\n            UserName: '',\r\n            Name: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n            Cupon: '',\r\n            Profilepicture: null,\r\n            NamaToko: '',\r\n            Alamat: '',\r\n            Kontak: '',\r\n            Logo: null,\r\n            activeStep: 0,\r\n        })\r\n    }\r\n    render() {\r\n        if ((this.props.isAuth && this.props.token)) {\r\n            return <Redirect to=\"/blog/preview/kasirqu/\" />\r\n        }\r\n        const theme = this.props.theme\r\n        const LoginPageTheme = theme.customTheme?.loginpage ? theme.customTheme.loginpage : {}\r\n        const st_container = { ...MUI_st_Login_Container, ...LoginPageTheme }\r\n        const st_textfield = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const steps = ['Registrasi Super User', 'Registrasi Data Toko']\r\n        const {\r\n            UserName,\r\n            Name,\r\n            Password,\r\n            ConfirmPassword,\r\n            Cupon,\r\n            NamaToko,\r\n            Alamat,\r\n            Kontak,\r\n        } = this.state\r\n        const getStepContent = (stepIndex) => {\r\n            switch (stepIndex) {\r\n                case 0:\r\n                    return (\r\n                        <Fragment>\r\n                            <Typography variant=\"h3\" align='center' gutterBottom>\r\n                                Registrasi Akun Super\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" align='center' gutterBottom>\r\n                                Hanya bisa digunakan pertama kali\r\n                            </Typography>\r\n                            <Typography align='right' style={{ padding: '10px', margin: '10px' }} ><Link href='/blog/preview/kasirqu/help/first_time_use' color='textPrimary' >Help</Link></Typography>\r\n                            <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='User Name' name='UserName' value={UserName} required />\r\n                            <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Name' name='Name' value={Name} required />\r\n                            <TextField style={st_textfield} variant='outlined' type='password' onChange={this.onChange} label='Password' name='Password' value={Password} required />\r\n                            <TextField style={st_textfield} variant='outlined' type='password' onChange={this.onChange} label='Confirm Password' name='ConfirmPassword' value={ConfirmPassword}\r\n                                error={((Password !== ConfirmPassword) && (ConfirmPassword !== '')) ? true : false}\r\n                                helperText={((Password !== ConfirmPassword) && (ConfirmPassword !== '')) ? 'password dan password confirm harus sama' : null}\r\n                            />\r\n                            <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Kupon' name='Cupon' value={Cupon} required />\r\n                            <label>Photo Profile:</label><br />\r\n                            <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n                        </Fragment>\r\n                    )\r\n                case 1:\r\n                    return (\r\n                        <Fragment>\r\n                            <Typography variant=\"h3\" align='center' gutterBottom>\r\n                                Registrasi Data Toko\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" align='center' gutterBottom>\r\n                                Hanya bisa digunakan pertama kali\r\n                            </Typography>\r\n                            <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Nama Toko' name='NamaToko' value={NamaToko} required />\r\n                            <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Alamat' name='Alamat' value={Alamat} required />\r\n                            <TextField style={st_textfield} variant='outlined' type='text' onChange={this.onChange} label='Kontak' name='Kontak' value={Kontak} />\r\n                            <label>Logo:</label><br />\r\n                            <input type='file' accept='image/*' onChange={this.File_OnChange} name='Logo' /><br />\r\n                        </Fragment>\r\n                    )\r\n                default:\r\n                    return 'Unknown stepIndex'\r\n            }\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Container maxWidth='sm' style={st_container} >\r\n                    <Stepper activeStep={this.state.activeStep} alternativeLabel>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <div>\r\n                        {this.state.activeStep === steps.length ? (\r\n                            <Fragment>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <Typography align='center' >Kirim Form Registrasi</Typography>\r\n                                    <Typography align='center' >\r\n                                        <Button variant='outlined' color=\"secondary\" style={MUI_HorizontalsmButtonMargin} onClick={this.handleReset}>Reset</Button>\r\n                                        <Button variant=\"outlined\" color='secondary' style={MUI_HorizontalsmButtonMargin} onClick={this.handleBack}>\r\n                                            Back\r\n                                            </Button>\r\n                                        <Button type='submit' variant=\"contained\" color=\"primary\" style={MUI_HorizontalsmButtonMargin}>\r\n                                            Registrasi\r\n                                    </Button>\r\n                                    </Typography>\r\n                                </form>\r\n                            </Fragment>\r\n                        ) : (\r\n                                <Fragment>\r\n                                    {getStepContent(this.state.activeStep)}<br />\r\n                                    {this.state.activeStep === 0 ? (\r\n                                        <Button variant=\"outlined\" color='secondary' style={MUI_HorizontalsmButtonMargin} onClick={this.onClickCancel} >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    ) : (\r\n                                            <Button variant=\"outlined\" color='secondary' style={MUI_HorizontalsmButtonMargin} onClick={this.handleBack}>\r\n                                                Back\r\n                                            </Button>\r\n                                        )}\r\n                                    {this.state.activeStep === steps.length - 1 ? (\r\n                                        <Button variant=\"contained\" color=\"primary\" style={MUI_HorizontalsmButtonMargin} onClick={this.handleNext}\r\n                                            disabled={((!UserName) || (!Name) || (!Password) || (Password !== ConfirmPassword) || (!Cupon) || (!NamaToko) || (!Alamat)) ? true : false}\r\n                                        >\r\n                                            Finish\r\n                                        </Button>\r\n                                    ) : (\r\n                                            <Button variant=\"contained\" color=\"primary\" style={MUI_HorizontalsmButtonMargin} onClick={this.handleNext}>\r\n                                                Next\r\n                                            </Button>\r\n                                        )}\r\n                                </Fragment>\r\n                            )}\r\n                    </div>\r\n                </Container>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.KasirQu_Auth.isAuth,\r\n    token: state.KasirQu_Auth.token,\r\n})\r\n\r\nexport default connect(mapStateToProps, { First_Time_Use })(withTheme(FirsTimeUse))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { LogOut } from '../../../Store/Actions/Auth.Actions'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Container, Typography, Link } from '@material-ui/core'\r\nimport logo from '../../../IMG/logo.png'\r\n\r\nclass Logout extends React.Component {\r\n    state = {\r\n        redirectstatus: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.LogOut()\r\n        setTimeout(() => this.setState({ redirectstatus: true }), 3000)\r\n    }\r\n    render() {\r\n        // const logo = process.env.PUBLIC_URL + '/IMG/logo.png'\r\n        return (\r\n            <Fragment >\r\n                <Container maxWidth='sm'>\r\n                    <Typography variant=\"h3\" align='center' color='primary' gutterBottom>\r\n                        Logout page\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" align='center' color='primary' gutterBottom>\r\n                        page akan otomatis dialihkan ke halaman login setelah beberapa detik.....\r\n                    </Typography>\r\n\r\n                    <Link href='/blog/preview/kasirqu/login' underline='none'>\r\n                        <Typography align='center'>\r\n                            <img src={logo} alt='logo kasirqu' />\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography variant=\"subtitle2\" align='center' color='primary' gutterBottom>\r\n                        atau klik gambar diatas untuk ke halaman login\r\n                    </Typography>\r\n                </Container>\r\n                {this.state.redirectstatus ? <Redirect to=\"/blog/preview/kasirqu/login\" /> : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//     auth: state.KasirQu_Auth\r\n// })\r\n\r\n// export default connect(mapStateToProps, { LogOut })(Logout)\r\nexport default connect(null, { LogOut })(Logout)\r\n\r\n","import React, { Fragment } from 'react'\r\n\r\nimport { Breadcrumbs, Link, Typography } from '@material-ui/core'\r\n\r\nimport HomeIcon from '@material-ui/icons/Home'\r\n\r\nexport const BreadCrumbs = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Breadcrumbs maxItems={2} aria-label=\"breadcrumb\">\r\n                <Link href='/blog/preview/kasirqu/' underline='hover' >\r\n                    <Typography color=\"textPrimary\" >\r\n                        <HomeIcon />\r\n                    </Typography>\r\n                </Link>\r\n                {props.breadcrumbs.map((breadcrumb, index) => (\r\n                    <Link href={`/blog/preview/kasirqu/${breadcrumb.link}`} underline='hover' key={index} >\r\n                        <Typography color=\"textPrimary\" >\r\n                            {breadcrumb.name}\r\n                        </Typography>\r\n                    </Link>\r\n                ))}\r\n            </Breadcrumbs>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default BreadCrumbs","import React, { Fragment } from 'react'\r\n\r\nimport { List, ListItem, ListItemIcon, ListItemText, Collapse, Grid, Link, Paper } from '@material-ui/core'\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\"\r\nimport { MUI_st_Menu_Paper } from '../../MUI_theme'\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\nexport const Menu = (props) => {\r\n    const User = props.User\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(true)\r\n    const handleClick = () => {\r\n        setOpen(!open)\r\n    }\r\n    const st_paper = { ...MUI_st_Menu_Paper, ...theme.customTheme.menupaper }\r\n    // console.log(MUI_st_Menu_Paper)\r\n    return (\r\n        <Fragment>\r\n            <List>\r\n                <ListItem button onClick={handleClick}>\r\n                    <ListItemIcon>\r\n                        {props.menu.menuheader.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={props.menu.menuheader.name} />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <ListItem>\r\n\r\n                            <Fragment>\r\n                                <Grid container spacing={2} >\r\n                                    <Grid item xs={12}  >\r\n                                        <Grid container spacing={5} justify=\"flex-start\" alignItems=\"center\">\r\n                                            {props.menu.menuitems.map((menuitem, index) => (\r\n                                                <Grid key={index} item  >\r\n                                                    {User ? (((menuitem.type === 'SuperPrivacry') && (User.isSuperUser === true)) ? (\r\n                                                        <Link href={`/blog/preview/kasirqu/${menuitem.link}`} underline='none' >\r\n                                                            <Paper style={st_paper} className='MenuPaperHover' >\r\n                                                                {menuitem.icon}<br />\r\n                                                                {menuitem.name}\r\n                                                            </Paper>\r\n                                                        </Link>\r\n                                                    ) : (((menuitem.type === 'Privacry') && ((User.isSuperUser) || (User.isAdmin))) ? (\r\n                                                        <Link href={`/blog/preview/kasirqu/${menuitem.link}`} underline='none' >\r\n                                                            <Paper style={st_paper} className='MenuPaperHover' >\r\n                                                                {menuitem.icon}<br />\r\n                                                                {menuitem.name}\r\n                                                            </Paper>\r\n                                                        </Link>\r\n                                                    ) : ((menuitem.type === 'nonPrivacry') ? (\r\n                                                        <Link href={`/blog/preview/kasirqu/${menuitem.link}`} underline='none' >\r\n                                                            <Paper style={st_paper} className='MenuPaperHover' >\r\n                                                                {menuitem.icon}<br />\r\n                                                                {menuitem.name}\r\n                                                            </Paper>\r\n                                                        </Link>\r\n                                                    ) : null))\r\n                                                    ) : null}\r\n\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Fragment>\r\n\r\n                        </ListItem>\r\n                    </List>\r\n                </Collapse>\r\n            </List>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Menu","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport BreadCrumbs from '../Containers/BreadCrumbs'\r\nimport Menu from '../Containers/Menu'\r\n\r\nimport SettingsApplicationsTwoToneIcon from '@material-ui/icons/SettingsApplicationsTwoTone'\r\n\r\nimport ShoppingCartTwoToneIcon from '@material-ui/icons/ShoppingCartTwoTone'\r\nimport LocalMallTwoToneIcon from '@material-ui/icons/LocalMallTwoTone'\r\nimport ReceiptRoundedIcon from '@material-ui/icons/ReceiptRounded'\r\n\r\nimport StorageTwoToneIcon from '@material-ui/icons/StorageTwoTone'\r\nimport CategoryTwoToneIcon from '@material-ui/icons/CategoryTwoTone'\r\nimport PlaylistAddTwoToneIcon from '@material-ui/icons/PlaylistAddTwoTone'\r\n\r\nimport LiveHelpTwoToneIcon from '@material-ui/icons/LiveHelpTwoTone'\r\nimport AttachMoneyTwoToneIcon from '@material-ui/icons/AttachMoneyTwoTone'\r\nimport EuroSymbolTwoToneIcon from '@material-ui/icons/EuroSymbolTwoTone'\r\nimport TrendingUpTwoToneIcon from '@material-ui/icons/TrendingUpTwoTone'\r\n\r\nimport AccountBoxTwoToneIcon from '@material-ui/icons/AccountBoxTwoTone'\r\nimport RecentActorsTwoToneIcon from '@material-ui/icons/RecentActorsTwoTone'\r\nimport StoreTwoToneIcon from '@material-ui/icons/StoreTwoTone'\r\nimport HistoryTwoToneIcon from '@material-ui/icons/HistoryTwoTone'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        const breadcrumbs = []\r\n        const menuitems = [\r\n            {\r\n                menuheader: {\r\n                    name: 'Transaksi',\r\n                    icon: <ShoppingCartTwoToneIcon />\r\n                },\r\n                menuitems: [\r\n                    {\r\n                        name: 'Transaksi',\r\n                        link: 'transaksi',\r\n                        icon: <ShoppingCartTwoToneIcon />,\r\n                        type: 'nonPrivacry',\r\n                    },\r\n                    {\r\n                        name: 'Belanja',\r\n                        link: 'transaksi/belanja',\r\n                        icon: <LocalMallTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'List Transaksi',\r\n                        link: 'transaksi/transaksilist',\r\n                        icon: <ReceiptRoundedIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'Import/Export Transaksi',\r\n                        link: 'transaksi/importexport',\r\n                        icon: <SettingsApplicationsTwoToneIcon />,\r\n                        type: 'SuperPrivacry',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                menuheader: {\r\n                    name: 'Barang',\r\n                    icon: <StorageTwoToneIcon />\r\n                },\r\n                menuitems: [\r\n                    {\r\n                        name: 'List Barang',\r\n                        link: 'barang',\r\n                        icon: <StorageTwoToneIcon />,\r\n                        type: 'nonPrivacry',\r\n                    },\r\n                    {\r\n                        name: 'Kategori Barang',\r\n                        link: 'barang/katagoribarang',\r\n                        icon: <CategoryTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'Konfigurasi Barang',\r\n                        link: 'barang/konfigurasibarang',\r\n                        icon: <PlaylistAddTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'Import/Export Kategori Barang',\r\n                        link: 'barang/katagoribarang/importexport',\r\n                        icon: <SettingsApplicationsTwoToneIcon />,\r\n                        type: 'SuperPrivacry',\r\n                    },\r\n                    {\r\n                        name: 'Import/Export Barang',\r\n                        link: 'barang/konfigurasibarang/importexport',\r\n                        icon: <SettingsApplicationsTwoToneIcon />,\r\n                        type: 'SuperPrivacry',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                menuheader: {\r\n                    name: 'Help',\r\n                    icon: <LiveHelpTwoToneIcon />\r\n                },\r\n                menuitems: [\r\n                    {\r\n                        name: 'Help',\r\n                        link: 'help',\r\n                        icon: <LiveHelpTwoToneIcon />,\r\n                        type: 'nonPrivacry',\r\n                    },\r\n                    {\r\n                        name: 'Laporan Penjualan',\r\n                        link: 'help/incomereport',\r\n                        icon: <AttachMoneyTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'Laporan Belanja',\r\n                        link: 'help/outcomereport',\r\n                        icon: <EuroSymbolTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'Laporan Grafik',\r\n                        link: 'help/graph',\r\n                        icon: <TrendingUpTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                menuheader: {\r\n                    name: 'Account',\r\n                    icon: <AccountBoxTwoToneIcon />\r\n                },\r\n                menuitems: [\r\n                    {\r\n                        name: 'Account',\r\n                        link: 'account',\r\n                        icon: <AccountBoxTwoToneIcon />,\r\n                        type: 'nonPrivacry',\r\n                    },\r\n                    {\r\n                        name: 'List User',\r\n                        link: 'account/userlist',\r\n                        icon: <RecentActorsTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'Detail Toko',\r\n                        link: 'account/tokodetail',\r\n                        icon: <StoreTwoToneIcon />,\r\n                        type: 'Privacry',\r\n                    },\r\n                    {\r\n                        name: 'History',\r\n                        link: 'account/tokodetail/history',\r\n                        icon: <HistoryTwoToneIcon />,\r\n                        type: 'SuperPrivacry',\r\n                    },\r\n                ]\r\n            },\r\n\r\n        ]\r\n\r\n        const User = this.props.User\r\n        return (\r\n            <Fragment>\r\n                <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n                {\r\n                    menuitems.map((menuitem, index) => (\r\n                        <Menu key={index} menu={menuitem} User={User} />\r\n                    ))\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    User: state.KasirQu_Auth.User,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Home)","import { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    ACCOUNT_LOADING,\r\n    ACCOUNT_LOADED,\r\n    RELOADE_PAGE,\r\n    GET_ACCOUNT_ID_FOR_DETAIL,\r\n    ACCOUNT_DETAIL,\r\n    GET_ACCOUNT_ID_FOR_UPDATE,\r\n    ACCOUNT_DELETED,\r\n    LIST_ACCOUNT,\r\n    TOKO_DETAIL,\r\n    LIST_HISTORY,\r\n    GET_HISTORY_ID_FOR_DETAIL,\r\n    HISTORY_DETAIL,\r\n    // LIST_QUERY_HISTORY_EXPORT,\r\n} from '../Actions/Type.Actions'\r\n\r\nimport {\r\n    Create_Error_Messages,\r\n    // Create_Success_Messages,\r\n    Create_Info_Messages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_Account_Detail,\r\n    Database_Load_Account_List,\r\n    Database_Load_Toko_Detail,\r\n    Database_Load_History_List,\r\n    Database_Load_History_Detail,\r\n} from './Database.Actions'\r\n\r\nexport const get_AccountId_Detail = (UserID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_ACCOUNT_ID_FOR_DETAIL,\r\n        payload: UserID\r\n    })\r\n}\r\n\r\nexport const get_AccountDetail = (UserID) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n\r\n        const Responses = await Database_Load_Account_Detail(tokenConfig(getState), UserID)////// FIXME bug when clik twice on edit button data didnt appear\r\n        if (Responses) {\r\n            dispatch({\r\n                type: ACCOUNT_DETAIL,\r\n                payload: Responses,\r\n            })\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: get_AccountDetail -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Add_Account = (AddAccountData, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            // dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Add_Account -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const get_AccountId_Update = (UserID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_ACCOUNT_ID_FOR_UPDATE,\r\n        payload: UserID\r\n    })\r\n}\r\n\r\nexport const Update_Account = (AccountID, UpdateData, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const Responses = await axios.patch(`${IpAddres}/api/users/user/${AccountID}/update`, bodydata, tokenConfigmultipleform(getState))\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            // dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Update_Account -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Delete_an_Account = (AccountID, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch({\r\n                type: ACCOUNT_DELETED,\r\n                payload: AccountID\r\n            })\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Delete_an_Account -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Account_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Account_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_ACCOUNT,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Account_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const get_TokoDetail = () => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Toko_Detail(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: TOKO_DETAIL,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: get_TokoDetail -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Update_Toko = (UpdateData, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Update_Toko -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_History_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_History_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_HISTORY,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_History_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const get_HistoryId_Detail = (HistoryID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_HISTORY_ID_FOR_DETAIL,\r\n        payload: HistoryID\r\n    })\r\n}\r\n\r\nexport const get_HistoryDetail = (HistoryID) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_History_Detail(tokenConfig(getState), HistoryID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: HISTORY_DETAIL,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: get_HistoryDetail -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Export_Query_History = (Query) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_HISTORY_EXPORT,\r\n        //         payload: Responses.data.QueryHistory\r\n        //     })\r\n        //     if (Responses.data.QueryHistory) {\r\n        //         const QueryHistory = Responses.data.QueryHistory\r\n        //         if (QueryHistory.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: ACCOUNT_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Export_Query_History -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}\r\n\r\nexport const Export_History = (Data, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: ACCOUNT_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n        // const Responses = await axios.post(`${IpAddres}/api/history/export`, body, {\r\n        //     responseType: 'blob',\r\n        //     ...tokenConfig(getState)\r\n        // })\r\n        // // console.log('Log: Export_History -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     const url = window.URL.createObjectURL(new Blob([Responses.data]))\r\n        //     const link = document.createElement('a')\r\n        //     link.href = url\r\n        //     link.setAttribute('download', 'Export.History.xlsx')\r\n        //     document.body.appendChild(link)\r\n        //     link.click()\r\n\r\n        //     dispatch(Create_Success_Messages(null, 'Proses Export History Berhasil'))\r\n        //     dispatch({ type: ACCOUNT_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: ACCOUNT_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Export_History -> err', err)\r\n        dispatch(Create_Error_Messages(null, 'Ada Kesalahan Pada Proses Export History'))\r\n        // dispatch(\r\n        //     Create_Error_Messages(\r\n        //         err.response ? (\r\n        //             err.response.status ? err.response.status\r\n        //                 : null) : null,\r\n        //         err.response ? (\r\n        //             err.response.data.msg ? err.response.data.msg\r\n        //                 : null) : 'anda tidak terhubung dengan server'\r\n        //     ))\r\n        dispatch({ type: ACCOUNT_LOADED })\r\n    }\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_TokoDetail } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { Typography, Grid, Paper } from '@material-ui/core'\r\n\r\nclass DetailToko extends React.Component {\r\n    componentDidMount() {\r\n        this.props.get_TokoDetail()\r\n    }\r\n    render() {\r\n        const today = new Date();\r\n        const Gridstyle = { width: '50%' }\r\n        const Paperstyle = { padding: '10px', margin: '10px' }\r\n        const User = this.props.User\r\n        const TokoDetail = this.props.TokoDetail\r\n        return (\r\n            <Fragment>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n                            <Grid item style={{ ...Gridstyle }} >\r\n                                <Paper style={{ ...Paperstyle }} >\r\n                                    <Typography>\r\n                                        Nama Toko &emsp; : {TokoDetail?.NamaToko ? TokoDetail.NamaToko : ''}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Alamat Toko &emsp;: {TokoDetail?.Alamat ? TokoDetail.Alamat : ''}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Kontak Toko &emsp;: {TokoDetail?.Kontak ? TokoDetail.Kontak : ''}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item style={{ ...Gridstyle }} >\r\n                                <Paper style={{ ...Paperstyle }} >\r\n                                    <Typography>\r\n                                        UserName&emsp;&emsp; : {User?.UserName ? User.UserName : ''}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Tanggal &emsp;&emsp;&emsp; : {`${today.getDate()}/${(today.getMonth() + 1)}/${today.getFullYear()}`}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    User: state.KasirQu_Auth.User,\r\n    TokoDetail: state.KasirQu_Account.TokoDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_TokoDetail })(DetailToko)","import {\r\n    BARANG_LOADING,\r\n    BARANG_LOADED,\r\n    RELOADE_PAGE,\r\n    GET_BARANG_ID_FOR_DETAIL,\r\n    BARANG_DETAIL,\r\n    GET_BARANG_ID_FOR_UPDATE,\r\n    BARANG_DELETED,\r\n    LIST_BARANG,\r\n    // LIST_QUERY_BARANG_EXPORT,\r\n    CEK_IMPORT_BARANG,\r\n} from './Type.Actions'\r\n\r\nimport { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    Create_Error_Messages,\r\n    // Create_Success_Messages,\r\n    Create_Info_Messages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_Barang_List,\r\n    Database_Load_Barang_Detail,\r\n    Database_Load_Barang_Base_on_JenisBarang,\r\n} from './Database.Actions'\r\n\r\nexport const get_BarangId_Detail = (BarangID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_BARANG_ID_FOR_DETAIL,\r\n        payload: BarangID\r\n    })\r\n}\r\n\r\nexport const get_BarangDetail = (BarangID) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Barang_Detail(tokenConfig(getState), BarangID)////// FIXME bug when clik twice on edit button data didnt appear\r\n        if (Responses) {\r\n            dispatch({\r\n                type: BARANG_DETAIL,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: BARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: get_BarangDetail -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Add_Barang = (Barang, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        const isAdmin = Auth.isAdmin\r\n        if (!isSuperUser || !isAdmin) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            console.log('Log: Add_Barang -> Responses', Responses)\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: BARANG_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Add_Barang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const get_BarangId_Update = (BarangID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_BARANG_ID_FOR_UPDATE,\r\n        payload: BarangID\r\n    })\r\n}\r\n\r\nexport const Update_Barang = (BarangID, UpdateData, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        const isAdmin = Auth.isAdmin\r\n        if (!isSuperUser || !isAdmin) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: BARANG_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Update_Barang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Delete_a_Barang = (BarangID, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        const isAdmin = Auth.isAdmin\r\n        if (!isSuperUser || !isAdmin) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch({\r\n                type: BARANG_DELETED,\r\n                payload: null\r\n            })\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: BARANG_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Delete_a_Barang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Barang_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Barang_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_BARANG,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: BARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Barang_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Barang_List_Base_On_Jenis = (JenisID) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Barang_Base_on_JenisBarang(tokenConfig(getState), JenisID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_BARANG,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: BARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Barang_List_Base_On_Jenis -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Export_Query_Barang = (Query) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: BARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Export_Query_Barang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Export_Barang = (Data, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/barang/export`, body, {\r\n        //     responseType: 'blob',\r\n        //     ...tokenConfig(getState)\r\n        // })\r\n        // // console.log('Log: Export_Barang -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     const url = window.URL.createObjectURL(new Blob([Responses.data]))\r\n        //     const link = document.createElement('a')\r\n        //     link.href = url\r\n        //     link.setAttribute('download', 'Export.Barang.xlsx')\r\n        //     document.body.appendChild(link)\r\n        //     link.click()\r\n        //     dispatch(Create_Success_Messages(null, 'Proses Export Barang Berhasil'))\r\n        //     dispatch({ type: BARANG_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: BARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Export_Barang -> err', err)\r\n        dispatch(Create_Error_Messages(null, 'Ada Kesalahan Pada Proses Export History'))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Cek_Import_Barang = (Data) => async (dispatch, getState) => {\r\n    // console.log('Log: Cek_Import_Barang -> Data', Data)\r\n    dispatch({ type: BARANG_LOADING })\r\n    dispatch({\r\n        type: CEK_IMPORT_BARANG,\r\n        payload: Data\r\n    })\r\n    dispatch({ type: BARANG_LOADED })\r\n}\r\n\r\nexport const Import_Barang = (Data, Auth) => async (dispatch, getState) => {\r\n    // console.log('Log: Import_Barang -> Data', Data)\r\n    // console.log('Log: Import_Barang -> Auth', Auth)\r\n    dispatch({ type: BARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/barang/import`, body, tokenConfig(getState))\r\n        // // console.log('Log: Import_Barang -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //     dispatch({ type: BARANG_LOADED })\r\n        //     dispatch({ type: RELOADE_PAGE })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: BARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Import_Barang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: BARANG_LOADED })\r\n    }\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Barang_List } from '../../../Store/Actions/Barang.Actions'\r\nimport { Add_Barang_To_Transaksi } from '../../../Store/Actions/Transaksi.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\n\r\nclass AddBarangToTransaksi extends React.Component {\r\n    state = {\r\n        NamaBarang: null,\r\n        Barcode: '',\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_Barang_List()\r\n    }\r\n    BarangonChange = (e, newNamaBarang) => {\r\n        this.setState({ NamaBarang: newNamaBarang })\r\n        // this.setState({ Barcode: null })\r\n    }\r\n    BarcodeonChange = (e, newBarcode) => {\r\n        this.setState({ Barcode: newBarcode })\r\n        this.setState({ NamaBarang: null })\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        const { NamaBarang, Barcode, } = this.state\r\n        const Data_Barang = this.props.Data_Barang\r\n        const minimumstok = 10\r\n        // const minimumharga = 100\r\n        // console.log('NamaBarang', NamaBarang)\r\n        // console.log('Barcode', Barcode)\r\n        if (NamaBarang !== null) {\r\n            if (NamaBarang.Barcode) {\r\n                if (NamaBarang.Stok <= minimumstok) {\r\n                    this.props.Create_Warning_Messages(null, `stok barang kurang dari ${minimumstok} akan gagal jika jumlah transaksi lebih banyak dari stok`)\r\n                }\r\n                this.props.Add_Barang_To_Transaksi(NamaBarang)\r\n                this.setState({\r\n                    NamaBarang: null,\r\n                    Barcode: '',\r\n                })\r\n            } else {\r\n                const barang = Data_Barang.find(data_barang => data_barang.Barcode === NamaBarang)\r\n                if (barang) {\r\n                    if (barang.Stok <= minimumstok) {\r\n                        this.props.Create_Warning_Messages(null, `stok barang kurang dari ${minimumstok} akan gagal jika jumlah transaksi lebih banyak dari stok`)\r\n                    }\r\n                    this.props.Add_Barang_To_Transaksi(barang)\r\n                    this.setState({\r\n                        NamaBarang: null,\r\n                        Barcode: '',\r\n                    })\r\n                } else {\r\n                    this.props.Create_Info_Messages(null, 'barcode yang anda masukkan tidak sesuai')\r\n                }\r\n            }\r\n        } else {\r\n            const barang = Data_Barang.find(data_barang => data_barang.Barcode === Barcode)\r\n            if (barang) {\r\n                if (barang.Stok <= minimumstok) {\r\n                    this.props.Create_Warning_Messages(null, `stok barang kurang dari ${minimumstok} akan gagal jika jumlah transaksi lebih banyak dari stok`)\r\n                }\r\n                this.props.Add_Barang_To_Transaksi(barang)\r\n                this.setState({\r\n                    NamaBarang: null,\r\n                    Barcode: '',\r\n                })\r\n            } else {\r\n                this.props.Create_Info_Messages(null, 'barcode yang anda masukkan tidak sesuai')\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(this.state)\r\n        // console.log(this.props)\r\n        const User = this.props.User\r\n        const Data_Barang = this.props.Data_Barang\r\n        const isTransaksiLoading = this.props.isTransaksiLoading\r\n        const {\r\n            NamaBarang,\r\n            Barcode,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                {/* <Fragment>\r\n                    <div>\r\n                        {`NamaBarang: ${this.state.NamaBarang !== null ? `'${this.state.NamaBarang}'` : 'null'}`}\r\n                    </div>\r\n                    <div>\r\n                        {`Barcode: '${this.state.Barcode}'`}\r\n                    </div>\r\n                </Fragment> */}\r\n                <Fragment>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            disableClearable\r\n\r\n                            options={Data_Barang.sort((a, b) => (a.Jenis > b.Jenis) ? 1 : ((b.Jenis > a.Jenis) ? -1 : 0))}\r\n                            // getOptionLabel={(option) => option.Name}\r\n                            getOptionLabel={option => typeof option === 'string' ? option : option.Name}\r\n                            groupBy={(option) => option.Jenis}\r\n\r\n                            value={NamaBarang}\r\n                            onChange={this.BarangonChange}\r\n\r\n                            inputValue={Barcode}\r\n                            onInputChange={this.BarcodeonChange}\r\n\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Masukan Code Barcode atau Pilih Nama Barang\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    style={{ width: '100%' }}\r\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Button\r\n                            type='submit'\r\n                            variant=\"outlined\"\r\n                            color='primary'\r\n                            size=\"large\"\r\n                            style={{ width: '100%' }}\r\n                            disabled={((User) && (isTransaksiLoading === false)) ? false : true}\r\n                        >\r\n                            Tambah\r\n                            </Button>\r\n                    </form>\r\n                </Fragment>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    Data_Barang: state.KasirQu_Barang.BarangList,\r\n    isTransaksiLoading: state.KasirQu_Transaksi.isTransaksiLoading\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Barang_List, Add_Barang_To_Transaksi, Create_Info_Messages, Create_Warning_Messages })(AddBarangToTransaksi)","import { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    TRANSAKSI_LOADING,\r\n    TRANSAKSI_LOADED,\r\n    RELOADE_PAGE,\r\n    CEK_IMPORT_TRANSAKSI,\r\n    ////// TRANSAKSI\r\n    ADD_BARANG_TO_TRANSAKSI,\r\n    CHANGE_TRANSAKSI_DETAIL,\r\n    CLEAR_A_BARANG_FROM_TRANSAKSI,\r\n    CLEAR_BARANG_IN_TRANSAKSI,\r\n    ////// BELANJA\r\n    ADD_BARANG_TO_BELANJA,\r\n    CHANGE_BELANJA_DETAIL,\r\n    CLEAR_A_BARANG_FROM_BELANJA,\r\n    CLEAR_BARANG_IN_BELANJA,\r\n    //////\r\n    LIST_TRANSAKSI,\r\n    // QUERY_LIST_TRANSAKSI,\r\n    GET_TRANSAKSI_ID_FOR_DETAIL,\r\n    TRANSAKSI_DETAIL,\r\n} from './Type.Actions'\r\n\r\nimport {\r\n    Create_Error_Messages,\r\n    // Create_Success_Messages,\r\n    Create_Info_Messages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_Transaksi_List,\r\n    Database_Load_Transaksi_Detail,\r\n} from './Database.Actions'\r\n\r\n////// TRANSAKSI\r\nexport const Add_Barang_To_Transaksi = (Barang) => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({\r\n        type: ADD_BARANG_TO_TRANSAKSI,\r\n        payload: Barang,\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\nexport const Change_Transaksi_Detail = (Index, Jumlah, NamaSatuan, MinBarang, HargaSatuan) => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    const TotalBarang = Jumlah * MinBarang\r\n    const HargaTotal = TotalBarang * HargaSatuan\r\n    dispatch({\r\n        type: CHANGE_TRANSAKSI_DETAIL,\r\n        payload: { Index, NamaSatuan, Jumlah, HargaSatuan, TotalBarang, HargaTotal }\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\nexport const Clear_A_Barang_From_Transaksi = (Index) => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({\r\n        type: CLEAR_A_BARANG_FROM_TRANSAKSI,\r\n        payload: Index,\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\nexport const Clear_Barang_In_Transaksi = () => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({ type: CLEAR_BARANG_IN_TRANSAKSI })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\n\r\nexport const Transaksi_Transaksi = (Data, Diskon, PotonganHarga, Ket, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const NamaKasir = Auth.UserName\r\n        const DetailTransaksi = Data.map(({ SatuanOptions, isDecimal, isEditAble, ...item }) => item)\r\n        const Total = DetailTransaksi.reduce((prev, cur) => {\r\n            return prev + cur.HargaTotal\r\n        }, 0)\r\n        let TotalPembayaran = Total ? Total : 0\r\n        if ((Diskon >= 1) && (Diskon <= 100)) {\r\n            TotalPembayaran = TotalPembayaran - ((TotalPembayaran * Diskon) / 100)\r\n            if ((PotonganHarga >= 0) && (PotonganHarga <= TotalPembayaran)) {\r\n                TotalPembayaran = TotalPembayaran - PotonganHarga\r\n            }\r\n        } else {\r\n            if ((PotonganHarga >= 0) && (PotonganHarga <= TotalPembayaran)) {\r\n                TotalPembayaran = TotalPembayaran - PotonganHarga\r\n            }\r\n        }\r\n\r\n        // const body = JSON.stringify({ NamaKasir, DetailTransaksi, Diskon, PotonganHarga, TotalPembayaran, Ket })\r\n        const Responses = Action_Denied()\r\n        // console.log('Log: Transaksi_Transaksi -> Responses', Responses)\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Transaksi_Transaksi -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}\r\n\r\n////// BELANJA\r\n\r\nexport const Add_Barang_To_Belanja = (Barang) => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({\r\n        type: ADD_BARANG_TO_BELANJA,\r\n        payload: Barang,\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\nexport const Change_Belanja_Detail = (Index, Jumlah, HargaModal, HargaJual) => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    const TotalModal = Jumlah * HargaModal\r\n    dispatch({\r\n        type: CHANGE_BELANJA_DETAIL,\r\n        payload: { Index, Jumlah, HargaModal, HargaJual, TotalModal }\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\nexport const Clear_A_Barang_From_Belanja = (Index) => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({\r\n        type: CLEAR_A_BARANG_FROM_BELANJA,\r\n        payload: Index,\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\nexport const Clear_Barang_In_Belanja = () => (dispatch) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({ type: CLEAR_BARANG_IN_BELANJA })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\n\r\nexport const Transaksi_Belanja = (Data, Ket, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n        // const NamaKasir = Auth.UserName\r\n        // const DetailTransaksi = Data.map(({ isEditAble, ...item }) => item)\r\n        // const TotalPembayaran = DetailTransaksi.reduce((prev, cur) => {\r\n        //     return prev + cur.TotalModal\r\n        // }, 0)\r\n\r\n        // const body = JSON.stringify({ NamaKasir, DetailTransaksi, TotalPembayaran, Ket })\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Transaksi_Belanja -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Transaksi_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Transaksi_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_TRANSAKSI,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Transaksi_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}\r\nexport const Load_Query_Transaksi_List = (data) => async (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        // const TransaksiID = data.TransaksiID\r\n        // const UserName = data.UserName\r\n        // const Jenis = data.Jenis\r\n        // const DateMin = data.DateMin\r\n        // const DateMax = data.DateMax\r\n        // const DiskonMin = data.DiskonMin\r\n        // const DiskonMax = data.DiskonMax\r\n        // const PotonganHargaMin = data.PotonganHargaMin\r\n        // const PotonganHargaMax = data.PotonganHargaMax\r\n        // const TotalTransaksiMin = data.TotalTransaksiMin\r\n        // const TotalTransaksiMax = data.TotalTransaksiMax\r\n        // const Ket = data.Ket\r\n\r\n        // const body = JSON.stringify({ TransaksiID, UserName, Jenis, DateMin, DateMax, DiskonMin, DiskonMax, PotonganHargaMin, PotonganHargaMax, TotalTransaksiMin, TotalTransaksiMax, Ket })\r\n        // const Responses = await axios.post(`${IpAddres}/api/transaksi/querylist`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Transaksi_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: QUERY_LIST_TRANSAKSI,\r\n        //         payload: Responses.data.ListTransaksi\r\n        //     })\r\n        //     if (Responses.data.ListTransaksi) {\r\n        //         const ListTransaksi = Responses.data.ListTransaksi\r\n        //         if (ListTransaksi.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: TRANSAKSI_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Transaksi_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}\r\nexport const get_TransaksiId_Detail = (TransaksiID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_TRANSAKSI_ID_FOR_DETAIL,\r\n        payload: TransaksiID\r\n    })\r\n}\r\nexport const get_TransaksiDetail = (TransaksiID) => async (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_Transaksi_Detail(tokenConfig(getState), TransaksiID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: TRANSAKSI_DETAIL,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: get_TransaksiDetail -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}\r\n\r\nexport const Export_Transaksi = (Data, Auth) => async (dispatch, getState) => {\r\n    // console.log('Log: Export_Transaksi -> Data', Data)\r\n    // console.log('Log: Export_Transaksi -> Auth', Auth)\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Export_Transaksi -> IpAddres', IpAddres)\r\n\r\n        // const ExportData = Data\r\n\r\n        // const body = JSON.stringify({ ExportData })\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/transaksi/export`, body, {\r\n        //     responseType: 'blob',\r\n        //     ...tokenConfig(getState)\r\n        // })\r\n        // // console.log('Log: Export_Transaksi -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     const url = window.URL.createObjectURL(new Blob([Responses.data]))\r\n        //     const link = document.createElement('a')\r\n        //     link.href = url\r\n        //     link.setAttribute('download', 'Export.Transaksi.xlsx')\r\n        //     document.body.appendChild(link)\r\n        //     link.click()\r\n\r\n        //     dispatch(Create_Success_Messages(null, 'Proses Export Transaksi Berhasil'))\r\n        //     dispatch({ type: TRANSAKSI_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Export_Transaksi -> err', err)\r\n        dispatch(Create_Error_Messages(null, 'Ada Kesalahan Pada Proses Export Transaksi'))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}\r\n\r\nexport const Cek_Import_Transaksi = (Data) => (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    dispatch({\r\n        type: CEK_IMPORT_TRANSAKSI,\r\n        payload: Data\r\n    })\r\n    dispatch({ type: TRANSAKSI_LOADED })\r\n}\r\n\r\nexport const Import_Transaksi = (Data, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: TRANSAKSI_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Import_Transaksi -> IpAddres', IpAddres)\r\n\r\n        // const ImportData = Data\r\n\r\n        // const body = JSON.stringify({ ImportData })\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/transaksi/import`, body, tokenConfig(getState))\r\n        // // console.log('Log: Import_Transaksi -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //     dispatch({ type: TRANSAKSI_LOADED })\r\n        //     dispatch({ type: RELOADE_PAGE })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: TRANSAKSI_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Import_Transaksi -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: TRANSAKSI_LOADED })\r\n    }\r\n}","import React, { Fragment } from 'react'\r\n\r\nexport const ConvertInttoMoney = (props) => {\r\n    try {\r\n        const data = parseInt(props)\r\n        return (\r\n            <Fragment>\r\n                {data.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n            </Fragment>\r\n        )\r\n    } catch (err) {\r\n        console.log('Log: ConvertInttoMoney -> err', err)\r\n    }\r\n}\r\n\r\nexport const ConvertMoneytoInt = (StringData) => {\r\n    try {\r\n        const MoneyinInt = StringData ? StringData.replace(/,/g, '') : '0'\r\n        return Number(MoneyinInt)\r\n    } catch (err) {\r\n        console.log('Log: ConvertMoneytoInt -> err', err)\r\n    }\r\n}","import { ConvertMoneytoInt } from './Formater'\r\n\r\nexport const Short_Column_INT = (TableName, ColumnNumb) => {\r\n    try {\r\n        let rows, switching, i, x, y, shouldSwitch, dir, switchcount\r\n        const table = document.getElementById(TableName)\r\n        switching = true\r\n        switchcount = 0\r\n        dir = \"asc\"\r\n\r\n        while (switching) {\r\n            switching = false\r\n            rows = table.rows\r\n\r\n            for (i = 1; i < (rows.length - 1); i++) {\r\n                shouldSwitch = false\r\n\r\n                x = rows[i].getElementsByTagName(\"td\")[ColumnNumb]\r\n                y = rows[i + 1].getElementsByTagName(\"td\")[ColumnNumb]\r\n\r\n                if (dir === \"asc\") {\r\n                    if (Number(x.innerHTML) > Number(y.innerHTML)) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                } else if (dir === \"desc\") {\r\n                    if (Number(x.innerHTML) < Number(y.innerHTML)) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (shouldSwitch) {\r\n\r\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i])\r\n                switching = true\r\n                switchcount = switchcount + 1\r\n            } else {\r\n\r\n                if (switchcount === 0 && dir === \"asc\") {\r\n                    dir = \"desc\"\r\n                    switching = true\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Short_Column_INT -> err', err)\r\n    }\r\n}\r\nexport const Short_Column_STR = (TableName, ColumnNumb) => {\r\n    try {\r\n        let rows, switching, i, x, y, shouldSwitch, dir, switchcount\r\n        const table = document.getElementById(TableName)\r\n        switching = true\r\n        switchcount = 0\r\n        dir = \"asc\"\r\n\r\n        while (switching) {\r\n            switching = false\r\n            rows = table.rows\r\n\r\n            for (i = 1; i < (rows.length - 1); i++) {\r\n                shouldSwitch = false\r\n\r\n                x = rows[i].getElementsByTagName(\"td\")[ColumnNumb]\r\n                y = rows[i + 1].getElementsByTagName(\"td\")[ColumnNumb]\r\n\r\n                if (dir === \"asc\") {\r\n                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                } else if (dir === \"desc\") {\r\n                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (shouldSwitch) {\r\n\r\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i])\r\n                switching = true\r\n                switchcount = switchcount + 1\r\n            } else {\r\n\r\n                if (switchcount === 0 && dir === \"asc\") {\r\n                    dir = \"desc\"\r\n                    switching = true\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Short_Column_STR -> err', err)\r\n    }\r\n}\r\n\r\nexport const Short_Column_Money = (TableName, ColumnNumb) => {\r\n    try {\r\n        let rows, switching, i, x, y, shouldSwitch, dir, switchcount\r\n        const table = document.getElementById(TableName)\r\n        switching = true\r\n        switchcount = 0\r\n        dir = \"asc\"\r\n\r\n        while (switching) {\r\n            switching = false\r\n            rows = table.rows\r\n\r\n            for (i = 1; i < (rows.length - 1); i++) {\r\n                shouldSwitch = false\r\n\r\n                x = rows[i].getElementsByTagName(\"td\")[ColumnNumb]\r\n                y = rows[i + 1].getElementsByTagName(\"td\")[ColumnNumb]\r\n\r\n                if (dir === \"asc\") {\r\n                    if (ConvertMoneytoInt(x.innerHTML) > ConvertMoneytoInt(y.innerHTML)) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                } else if (dir === \"desc\") {\r\n                    if (ConvertMoneytoInt(x.innerHTML) < ConvertMoneytoInt(y.innerHTML)) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (shouldSwitch) {\r\n\r\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i])\r\n                switching = true\r\n                switchcount = switchcount + 1\r\n            } else {\r\n\r\n                if (switchcount === 0 && dir === \"asc\") {\r\n                    dir = \"desc\"\r\n                    switching = true\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Short_Column_Money -> err', err)\r\n    }\r\n}\r\n\r\nexport const Short_Column_Date = (TableName, ColumnNumb) => {\r\n    try {\r\n        let rows, switching, i, x, y, shouldSwitch, dir, switchcount\r\n        const table = document.getElementById(TableName)\r\n        switching = true\r\n        switchcount = 0\r\n        dir = \"asc\"\r\n\r\n        while (switching) {\r\n            switching = false\r\n            rows = table.rows\r\n\r\n            for (i = 1; i < (rows.length - 1); i++) {\r\n                shouldSwitch = false\r\n\r\n                x = rows[i].getElementsByTagName(\"td\")[ColumnNumb]\r\n                y = rows[i + 1].getElementsByTagName(\"td\")[ColumnNumb]\r\n\r\n                if (dir === \"asc\") {\r\n                    if (new Date(x.innerHTML) > new Date(y.innerHTML)) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                } else if (dir === \"desc\") {\r\n                    if (new Date(x.innerHTML) < new Date(y.innerHTML)) {\r\n                        shouldSwitch = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (shouldSwitch) {\r\n\r\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i])\r\n                switching = true\r\n                switchcount = switchcount + 1\r\n            } else {\r\n\r\n                if (switchcount === 0 && dir === \"asc\") {\r\n                    dir = \"desc\"\r\n                    switching = true\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Short_Column_Money -> err', err)\r\n    }\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Button } from '@material-ui/core'\r\n\r\nimport logo from '../../IMG/logo.png'\r\n\r\nexport const HalamanTidakDitemukan = (props) => {\r\n    // const logo = process.env.PUBLIC_URL + '/IMG/logo.png'\r\n    const BackButton = () => {\r\n        window.history.back()\r\n    }\r\n    const HomeButton = () => {\r\n        window.location = \"/\"\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' style={{ marginTop: '10%', padding: '10px' }}>\r\n                <img src={logo} alt='logo kasirqu' onClick={() => HomeButton()} />\r\n            </Typography>\r\n            <Typography variant='h2' align='center'>\r\n                Halaman Tidak Ditemukan\r\n            </Typography>\r\n            <Typography variant='subtitle1' align='center'>\r\n                Klik tombol dibawah untuk kembali atau logo untuk ke halaman utama\r\n            </Typography>\r\n            <Typography align='center'>\r\n                <Button variant='contained' color='primary' onClick={() => BackButton()} style={{ padding: '10px', marginTop: '10px' }} >\r\n                    Kembali !\r\n                </Button>\r\n            </Typography>\r\n            {props.ket ?\r\n                <Typography variant='h6' align='center'>\r\n                    {props.ket}\r\n                </Typography>\r\n                : null\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport const DataTidakDitemukan = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h2' align='center'>\r\n                Data Tidak Ditemukan\r\n            </Typography>\r\n            {props.ket ?\r\n                <Typography variant='h6' align='center'>\r\n                    {props.ket}\r\n                </Typography>\r\n                : null\r\n            }\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Typography, Modal, Button } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { HalamanTidakDitemukan } from './Page404'\r\n\r\nconst GenericModals = (props) => {\r\n    const modalsize = (props.size === 'xl') ? 90 :\r\n        (props.size === 'l') ? 80 :\r\n            (props.size === 'm') ? 60 : 40\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n            position: 'absolute',\r\n            // width: `${modalsize}%`,\r\n            width: props.uncontrollsize === true ? null : `${modalsize}%`,\r\n            minWidth: props.uncontrollsize === true ? `${modalsize}%` : null,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            marginLeft: `${(100 - modalsize) / 2}%`,\r\n            marginRight: `${(100 - modalsize) / 2}%`,\r\n            marginTop: 15,\r\n            marginBottom: 10,\r\n        },\r\n    }))\r\n    const classes = useStyles()\r\n    const [isModalOpen, setOpen] = React.useState(false)\r\n\r\n    const handleOpen = () => {\r\n        if (props.ButtononClickevent !== null) {\r\n            props.ButtononClickeven()\r\n        }\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const header = (\r\n        <Fragment>\r\n            <Typography variant='h6' align='right' onClick={handleClose}  >\r\n                X\r\n            </Typography>\r\n            {props.header ?\r\n                <Typography variant='h4' align='left'>\r\n                    {props.header}\r\n                </Typography> :\r\n                <HalamanTidakDitemukan />\r\n            }\r\n        </Fragment>\r\n    )\r\n\r\n    const massages = (\r\n        <Fragment>\r\n            {props.massagestype ? (\r\n                <Alert\r\n                    variant=\"filled\"\r\n                    severity={props.massagestype ?\r\n                        props.massagestype\r\n                        : 'info'\r\n                    }\r\n                >\r\n                    {props.massages ?\r\n                        props.massages :\r\n                        'info'\r\n                    }\r\n                </Alert>\r\n            ) : null\r\n            }\r\n        </Fragment>\r\n    )\r\n\r\n    const body = (\r\n        <Fragment>\r\n            {props.body ?\r\n                props.body :\r\n                <HalamanTidakDitemukan />\r\n            }\r\n        </Fragment>\r\n    )\r\n\r\n    const footer = (\r\n        <Fragment>\r\n            {props.footer ?\r\n                <Fragment>\r\n                    <hr />\r\n                    {props.footer}\r\n                </Fragment> :\r\n                null\r\n            }\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <Button\r\n                type={props.Buttontype ? props.Buttontype : null}\r\n                disabled={props.Buttondisabled ? props.Buttondisabled : false}\r\n                variant={props.Buttonvariant ? props.Buttonvariant : \"outlined\"}\r\n                style={props.Buttonstyle ? props.Buttonstyle : null}\r\n                color={props.Buttoncolor ? props.Buttoncolor : ''}\r\n                size={props.Buttonsize ? props.Buttonsize : 'medium'}\r\n                onClick={handleOpen}\r\n            >\r\n                {props.Buttonlabel ? props.Buttonlabel : 'Open Modal'}\r\n            </Button>\r\n            <Modal\r\n                open={isModalOpen}\r\n                onClose={handleClose}\r\n                style={{\r\n                    overflow: 'auto',\r\n                    display: 'block',\r\n                }}\r\n            >\r\n                <Paper className={classes.paper}>\r\n                    {header}\r\n                    <hr />\r\n                    {massages}\r\n                    {body}\r\n                    {footer}\r\n                </Paper>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GenericModals","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Transaksi_Transaksi } from '../../../Store/Actions/Transaksi.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, TextField, Button, Typography, FormHelperText } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass ReviewPembayaran extends React.Component {\r\n    state = {\r\n        Transaksi: this.props.Transaksi.Transaksi,\r\n        Diskon: 0,\r\n        PotonganHarga: 0,\r\n        Ket: '',\r\n        UangBayar: '',\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User } = this.props\r\n        const Data = this.state.Transaksi\r\n        const Ket = this.state.Ket\r\n        const Diskon = this.state.Diskon\r\n        const PotonganHarga = this.state.PotonganHarga\r\n        const authdata = {\r\n            UserName: User.UserName,\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Transaksi_Transaksi(Data, Diskon, PotonganHarga, Ket, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_review_pembayaran', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_review_pembayaran', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_review_pembayaran', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const st_tablehead = { ...theme.customTheme.tablehead }\r\n        const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const Data = this.state.Transaksi\r\n        const {\r\n            Diskon,\r\n            PotonganHarga,\r\n            Ket,\r\n            UangBayar,\r\n        } = this.state\r\n        const TotalPembayaran = Data.reduce((prev, cur) => {\r\n            return prev + cur.HargaTotal\r\n        }, 0)\r\n        let TotalTagihan = TotalPembayaran ? TotalPembayaran : 0\r\n        if ((Diskon >= 1) && (Diskon <= 100)) {\r\n            TotalTagihan = TotalTagihan - ((TotalTagihan * Diskon) / 100)\r\n            if ((PotonganHarga >= 0) && (PotonganHarga <= TotalTagihan)) {\r\n                TotalTagihan = TotalTagihan - PotonganHarga\r\n            }\r\n        } else {\r\n            if ((PotonganHarga >= 0) && (PotonganHarga <= TotalTagihan)) {\r\n                TotalTagihan = TotalTagihan - PotonganHarga\r\n            }\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {Data ? (\r\n                    <Fragment>\r\n                        <Table stickyHeader id='tabel_review_pembayaran'>\r\n                            <TableHead style={st_tablehead}>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                    <TableCell style={{ width: '45%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Satuan</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Jumlah</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Satuan&nbsp;(Rp)</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(6)}>Total Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(7)}>Harga Total&nbsp;(Rp)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {Data.map((item, index) => (\r\n                                    <TableRow hover key={index + 1}\r\n                                    // style={(item.HargaModal === 0 || item.HargaJual === 0) ? { backgroundColor: 'red' } :\r\n                                    //     (item.HargaModal >= item.HargaJual) ? { backgroundColor: 'yellow' }\r\n                                    //         : null}\r\n                                    >\r\n                                        <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                        <TableCell align=\"left\" >{item.Barcode}</TableCell>\r\n                                        <TableCell align=\"left\" >{item.NamaBarang}</TableCell>\r\n                                        <TableCell align=\"center\" >{item.Satuan}</TableCell>\r\n                                        <TableCell align=\"right\" >{item.Jumlah}</TableCell>\r\n                                        <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaSatuan)}</TableCell>\r\n                                        <TableCell align=\"right\" >{item.TotalBarang}</TableCell>\r\n                                        <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaTotal)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">total:</TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(TotalPembayaran)}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <TextField style={st_button} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keterangan' name='Ket' value={Ket} />\r\n                            <TextField style={st_button} variant='outlined' onChange={this.Form_OnChange} type='number' label='Diskon' name='Diskon' value={Diskon} />\r\n                            <FormHelperText>1%-100%</FormHelperText>\r\n                            <TextField style={st_button} variant='outlined' onChange={this.Form_OnChange} type='number' label='Potongan Harga' name='PotonganHarga' value={PotonganHarga} />\r\n                            <FormHelperText>dalam bentuk Rp</FormHelperText>\r\n                            <FormHelperText>Tidak bisa lebih besar dari Jumlah Tagihan</FormHelperText>\r\n                            <FormHelperText>PotonganHarga dilakukan setelah diskon</FormHelperText>\r\n                            <hr />\r\n                            <label>Jumlah Tagihan:</label>\r\n                            <Typography align='center' variant='h2'>Total: Rp {this.ConverNumberToMoneyFormat(TotalTagihan)}</Typography>\r\n                            <TextField style={st_button} variant='outlined' color='primary' onChange={this.Form_OnChange} type='number' label='Uang Bayar' name='UangBayar' value={UangBayar} />\r\n                            <label>kembalian:</label>\r\n                            <Typography align='center' variant='h3'>Rp {this.ConverNumberToMoneyFormat(UangBayar ? UangBayar - TotalTagihan : 0)}</Typography>\r\n                            <Button type='submit' style={st_button} size=\"large\" variant='contained' color='primary'\r\n                                disabled={(\r\n                                    (UangBayar >= TotalTagihan) &&\r\n                                    ((Diskon >= 0) && (Diskon <= 100)) &&\r\n                                    ((PotonganHarga >= 0) && (PotonganHarga <= (((Diskon >= 0) && (Diskon <= 100)) ? (TotalPembayaran - ((TotalPembayaran * Diskon) / 100)) : TotalPembayaran)))\r\n                                ) ? false : true}\r\n                            >\r\n                                Bayar\r\n                                </Button>\r\n                        </form>\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    Transaksi: state.KasirQu_Transaksi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Transaksi_Transaksi })(withTheme(ReviewPembayaran))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Change_Transaksi_Detail, Clear_A_Barang_From_Transaksi, Clear_Barang_In_Transaksi } from '../../../Store/Actions/Transaksi.Actions'\r\nimport { Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, IconButton, TextField, FormControl, InputLabel, Select } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport GenericModals from '../GenericModals'\r\nimport ReviewPembayaran from './Transaksi.ReviewPembayaran'\r\n\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\"\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\"\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\"\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\nclass TransaksiTransaksi extends React.Component {\r\n    state = {\r\n        Transaksi: this.props.Transaksi.Transaksi,\r\n        TotalHarga: [],\r\n        isEditingOn: false,\r\n        JumlahBaru: '',\r\n        SatuanBaru: '',\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.Transaksi !== prevProps.Transaksi) {\r\n            this.setState({ TotalHarga: [] })\r\n        }\r\n    }\r\n\r\n    EditRow(Index) {\r\n        if (this.state.isEditingOn === false) {\r\n            let transaksis = [...this.state.Transaksi]\r\n            let transaksi = { ...transaksis[Index] }\r\n            transaksi.isEditAble = true\r\n            transaksis[Index] = transaksi\r\n            this.setState({ Transaksi: transaksis })\r\n            this.setState({ JumlahBaru: transaksi.Jumlah })\r\n            this.setState({ SatuanBaru: transaksi.Satuan })\r\n            this.setState({ isEditingOn: true })\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    onEditChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n        // this.setState({ JumlahBaru: e.target.value })\r\n    }\r\n    onKeyPress = (e, index, SatuanOptions, isDecimal) => {\r\n        if (e.keyCode === 13) {\r\n            this.EditingDone(index, SatuanOptions, isDecimal)\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.Editingcancel()\r\n        }\r\n    }\r\n    EditingDone(index, SatuanOptions, isDecimal) {\r\n        // console.log('EditingDone', this.state)\r\n        const { JumlahBaru, SatuanBaru } = this.state\r\n        // console.log('SatuanOptions', SatuanOptions)\r\n\r\n        if (JumlahBaru < 0) {\r\n            this.props.Create_Warning_Messages(null, 'satuan tidak bisa kurang dari 0')\r\n        } else {\r\n            const newSatuanBaru = SatuanOptions.find(satuanoptions => satuanoptions.NamaSatuan === SatuanBaru)\r\n            const NamaSatuan_SatuanBaru = newSatuanBaru.NamaSatuan\r\n            const MinBarang_SatuanBaru = newSatuanBaru.MinBarang\r\n            const HargaJual_SatuanBaru = newSatuanBaru.HargaJual\r\n\r\n            if ((JumlahBaru % 1 !== 0) && (isDecimal === false)) {\r\n                this.props.Create_Warning_Messages(null, 'jumlah barang harus bulat tidak bisa desimal')\r\n            } else {\r\n                this.props.Change_Transaksi_Detail(index, JumlahBaru, NamaSatuan_SatuanBaru, MinBarang_SatuanBaru, HargaJual_SatuanBaru)\r\n                this.setState({ Transaksi: this.props.Transaksi.Transaksi })\r\n                this.setState({ JumlahBaru: '' })\r\n                this.setState({ SatuanBaru: '' })\r\n                this.setState({ isEditingOn: false })\r\n            }\r\n        }\r\n    }\r\n    Editingcancel() {\r\n        this.setState({ Transaksi: this.props.Transaksi.Transaksi })\r\n        this.setState({ JumlahBaru: '' })\r\n        this.setState({ SatuanBaru: '' })\r\n        this.setState({ isEditingOn: false })\r\n    }\r\n    CancelBarang(Barcode) {\r\n        if (this.state.isEditingOn === false) {\r\n            this.props.Clear_A_Barang_From_Transaksi(Barcode)\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    CancelAllBarang() {\r\n        if (this.state.isEditingOn === false) {\r\n            this.props.Clear_Barang_In_Transaksi()\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_transaksi', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    SUMHargaTotal(HargaTotal) {\r\n        this.state.TotalHarga.push(HargaTotal)\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        // console.log(this.state)\r\n        const theme = this.props.theme\r\n        const st_tablehead = { ...theme.customTheme.tablehead }\r\n        const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const TransaksiData = this.state.Transaksi\r\n        return (\r\n            <Fragment>\r\n                <Table stickyHeader id='tabel_transaksi'>\r\n                    <TableHead style={st_tablehead}>\r\n                        <TableRow>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\"  >Edit</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.CancelAllBarang()} >Cancel</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(2)}>No</TableCell>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Barcode</TableCell>\r\n                            <TableCell style={{ width: '25%' }} align=\"center\" onClick={() => this.ButtonShortSTR(4)}>Nama Barang</TableCell>\r\n                            <TableCell style={{ width: '15%' }} align=\"center\" onClick={() => this.ButtonShortSTR(5)}>Satuan</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(6)}>Jumlah</TableCell>\r\n                            {/* <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(6)}>Diskon</TableCell> */}\r\n                            {/* <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(6)}>Potongan Harga</TableCell> */}\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(7)}>Harga Satuan&nbsp;(Rp)</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(8)}>Total Barang</TableCell>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(9)}>Harga Total&nbsp;(Rp)</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {TransaksiData.map((item, index) => (\r\n                            <TableRow key={index + 1}\r\n                                hover={true}\r\n                            // style={index % 2 === 1 ? st_tablehead : null}\r\n                            >\r\n                                <TableCell align=\"center\" >\r\n                                    {item.isEditAble ?\r\n                                        <Fragment>\r\n                                            <IconButton onClick={() => this.EditingDone(index, item.SatuanOptions, item.isDecimal)}>\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.Editingcancel()}>\r\n                                                <RevertIcon />\r\n                                            </IconButton>\r\n                                        </Fragment>\r\n                                        :\r\n                                        <Fragment>\r\n                                            <IconButton onClick={() => this.EditRow(index)}>\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                        </Fragment>\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <IconButton onClick={() => this.CancelBarang(index)}>\r\n                                        <DeleteForeverIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                <TableCell align=\"left\">{item.NamaBarang}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {item.isEditAble ?\r\n                                        // <FormControl style={st_textfield} variant=\"filled\" required >\r\n                                        <FormControl variant=\"filled\"  >\r\n                                            <InputLabel shrink >Satuan</InputLabel>\r\n                                            <Select native onChange={this.onEditChange} label=\"Satuan\" name='SatuanBaru' value={this.state.SatuanBaru} labelWidth={100} >\r\n                                                <option value=\"\" disabled> -- select an option -- </option>\r\n                                                {item.SatuanOptions.map((option, index) =>\r\n                                                    //fix\r\n                                                    <option key={index} value={option.NamaSatuan}>{option.MinBarang}, {option.NamaSatuan}</option>\r\n                                                )}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        : item.Satuan\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {item.isEditAble ?\r\n                                        <TextField\r\n                                            onChange={this.onEditChange}\r\n                                            onKeyDown={(event) => this.onKeyPress(event, index, item.SatuanOptions, item.isDecimal)}\r\n                                            name='JumlahBaru'\r\n                                            value={this.state.JumlahBaru}\r\n                                            type='number'\r\n                                        >\r\n                                        </TextField>\r\n                                        : item.Jumlah\r\n                                    }\r\n                                </TableCell>\r\n                                {/* TODO ADD <TableCell align=\"right\">\r\n                                    10%  \r\n                                </TableCell> */}\r\n                                {/* TODO add <TableCell align=\"right\">\r\n                                    10000\r\n                                   </TableCell> */}\r\n                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaSatuan)}</TableCell>\r\n                                <TableCell align=\"right\">{item.TotalBarang} </TableCell>\r\n                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaTotal)}</TableCell>\r\n                                {this.SUMHargaTotal(item.HargaTotal)}\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n                {TransaksiData.length ?\r\n                    <Fragment>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">total:</TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"center\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(this.state.TotalHarga.reduce((a, b) => a + b, 0))}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        <GenericModals\r\n                            size='l'\r\n                            header='Review Pembayaran'\r\n                            body={<ReviewPembayaran />}\r\n                            // footer={<DeleteButton />}\r\n                            Buttondisabled={(this.state.isEditingOn === false) ? false : true}\r\n                            Buttonstyle={st_button}\r\n                            Buttonvariant='contained'\r\n                            Buttoncolor='primary'\r\n                            Buttonsize='large'\r\n                            // ButtononClickeven={() => this.onClick_get_AccountId_Detail(item._id)}\r\n                            ButtononClickeven={() => null}\r\n                            Buttonlabel={'Review Pembayaran'}\r\n                        />\r\n                    </Fragment>\r\n                    : null\r\n                }\r\n                {/* <button onClick={() => console.log(this.props)} style={{ width: '100%' }}>props</button> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    Transaksi: state.KasirQu_Transaksi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Change_Transaksi_Detail, Clear_A_Barang_From_Transaksi, Clear_Barang_In_Transaksi, Create_Warning_Messages })(withTheme(TransaksiTransaksi))","import React, { Fragment } from 'react'\r\n\r\n// import {Typography} from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport DetailToko from '../../Containers/Account/Account.DetailToko'\r\nimport AddBarangToTransaksi from '../../Containers/Transaksi/Transaksi.AddBarangToTransaksi'\r\nimport TransaksiTransaksi from '../../Containers/Transaksi/Transaksi.Transaksi'\r\n\r\nconst Transaksi = () => {\r\n    const breadcrumbs = [{ name: 'Transaksi', link: 'transaksi' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <DetailToko />\r\n            <hr />\r\n            <AddBarangToTransaksi />\r\n            <hr />\r\n            <TransaksiTransaksi />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Transaksi","import React, { Fragment } from 'react'\r\n\r\nimport { TextField, InputAdornment, Accordion, AccordionSummary, AccordionDetails, Typography, Paper } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin } from '../../MUI_theme'\r\n\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nexport const TableSearching = (props) => {\r\n    const onChange_Search = (E) => {\r\n        try {\r\n            const textinput = E.target.value\r\n            const filter = textinput.toUpperCase()\r\n            const usertable = document.getElementById(props.tablename)\r\n            const tr = usertable.getElementsByTagName('tr')\r\n            let i, td, txtValue\r\n\r\n            for (i = 0; i < tr.length; i++) {\r\n                td = tr[i].getElementsByTagName(\"td\")[props.tdnumber]\r\n                if (td) {\r\n                    txtValue = td.textContent || td.innerText\r\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                        tr[i].style.display = \"\"\r\n                    } else {\r\n                        tr[i].style.display = \"none\"\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    const width_of_bar = !props.width ? null : (\r\n        props.width === 'xl' ? { width: '100%' } : (\r\n            props.width === 'l' ? { width: '75%' } : { width: '50%' }\r\n        )\r\n    )\r\n    const st_searchbar = { ...width_of_bar, ...MUI_VerticalMargin }\r\n    return (\r\n        <Fragment>\r\n            {(props.hidesearch === true) ? null : (\r\n                <TextField\r\n                    variant='outlined'\r\n                    type='text'\r\n                    label={props.label ? props.label : 'Cari Berdasarkan Nama'}\r\n                    style={st_searchbar}\r\n                    name='Search'\r\n                    onChange={onChange_Search}\r\n                    InputProps={{\r\n                        startAdornment:\r\n                            <InputAdornment position=\"start\">\r\n                                <SearchTwoToneIcon />\r\n                            </InputAdornment>,\r\n                    }}\r\n                />\r\n            )}\r\n            {props.advancesearch ? (\r\n                <Fragment>\r\n                    <Accordion>\r\n                        <AccordionSummary >\r\n                            {props.accordionsummary ?\r\n                                props.accordionsummary : (\r\n                                    <Typography align='center' style={{ marginLeft: '45%' }}>\r\n                                        <ExpandMoreIcon />\r\n                                    </Typography>)}\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            {props.accordiondetails ? (\r\n                                <Paper style={{ width: '100%' }}>\r\n                                    {props.accordiondetails}\r\n                                </Paper>\r\n                            ) : null}\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </Fragment>\r\n            ) : null}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport const ListSearching = (props) => {\r\n    const onChange_Search = (E) => {\r\n        try {\r\n            const input = E.target.value\r\n            const filter = input.toUpperCase()\r\n            const ul = document.getElementById(props.ulname)\r\n            const li = ul.getElementsByTagName(\"li\")\r\n            let i = 0\r\n            while (i < li.length) {\r\n                const a = li[i].getElementsByTagName(\"a\")[0]\r\n                const txtValue = a.textContent || a.innerText\r\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                    li[i].style.display = \"\"\r\n                } else {\r\n                    li[i].style.display = \"none\"\r\n                }\r\n                i = i + 1\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    const width_of_bar = !props.width ? null : (\r\n        props.width === 'xl' ? { width: '100%' } : (\r\n            props.width === 'l' ? { width: '75%' } : { width: '50%' }\r\n        )\r\n    )\r\n    const st_searchbar = { ...width_of_bar, ...MUI_VerticalMargin }\r\n    return (\r\n        <Fragment>\r\n            {(props.hidesearch === true) ? null : (\r\n                <TextField\r\n                    variant='outlined'\r\n                    type='text'\r\n                    label={props.label ? props.label : 'Cari Berdasarkan Nama'}\r\n                    style={st_searchbar}\r\n                    name='Search'\r\n                    onChange={onChange_Search}\r\n                    InputProps={{\r\n                        startAdornment:\r\n                            <InputAdornment position=\"start\">\r\n                                <SearchTwoToneIcon />\r\n                            </InputAdornment>,\r\n                    }}\r\n                />\r\n            )}\r\n            {props.advancesearch ? (\r\n                <Fragment>\r\n                    <Accordion>\r\n                        <AccordionSummary >\r\n                            {props.accordionsummary ?\r\n                                props.accordionsummary : (\r\n                                    <Typography align='center' style={{ marginLeft: '45%' }}>\r\n                                        <ExpandMoreIcon />\r\n                                    </Typography>)}\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            {props.accordiondetails ? (\r\n                                <Paper style={{ width: '100%' }}>\r\n                                    {props.accordiondetails}\r\n                                </Paper>\r\n                            ) : null}\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </Fragment>\r\n            ) : null}\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_TransaksiDetail } from '../../../Store/Actions/Transaksi.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, Typography } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_st_AccountDetail_TextField, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass ListTransaksi extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idDetailTransaksi !== prevProps.idDetailTransaksi) {\r\n            const { idDetailTransaksi } = this.props\r\n            this.props.get_TransaksiDetail(idDetailTransaksi)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { idDetailTransaksi } = this.props\r\n        if (idDetailTransaksi !== null) {\r\n            this.props.get_TransaksiDetail(idDetailTransaksi)\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_detail_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_detail_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_detail_transaksi', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const Data = this.props.TransaksiDetail\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_st_AccountDetail_TextField, ...theme.customTheme.readonlytextfield }\r\n        return (\r\n            <Fragment>\r\n                {Data ?\r\n                    <Fragment>\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='ID' name='_id' value={Data._id ? Data._id : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Nama Kasir' name='NamaKasir' value={Data.NamaKasir ? Data.NamaKasir : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Tanggal Transaksi' name='TanggalTransaksi' value={Data.TanggalTransaksi ? new Date(Data.TanggalTransaksi).toLocaleString() : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Tipe Transaksi' name='Tipe' value={Data.Tipe ? Data.Tipe : ''} />\r\n                        <hr />\r\n                        {Data.DetailTransaksi ? (\r\n                            <Table id='tabel_detail_transaksi'>\r\n                                {Data.Tipe === 'Belanja' ? (\r\n                                    <TableHead >\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                            <TableCell style={{ width: '50%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(3)}>Jumlah</TableCell>\r\n                                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(4)}>Harga Modal&nbsp;(Rp)</TableCell>\r\n                                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Jual&nbsp;(Rp)</TableCell>\r\n                                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Total Modal&nbsp;(Rp)</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                ) : (\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                                <TableCell style={{ width: '45%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Satuan</TableCell>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Jumlah</TableCell>\r\n                                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Satuan&nbsp;(Rp)</TableCell>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(6)}>Total Barang</TableCell>\r\n                                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(7)}>HargaTotal&nbsp;(Rp)</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                    )}\r\n                                {Data.Tipe === 'Belanja' ? (\r\n                                    <TableBody>\r\n                                        {Data.DetailTransaksi.map((item, index) => (\r\n                                            <TableRow\r\n                                                hover\r\n                                                key={index + 1}\r\n                                                style={(item.HargaModal === 0 || item.HargaJual === 0) ? { backgroundColor: 'red' } :\r\n                                                    (item.HargaModal >= item.HargaJual) ? { backgroundColor: 'yellow' }\r\n                                                        : null}\r\n                                            >\r\n                                                <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                                <TableCell align=\"left\" >{item.Barcode}</TableCell>\r\n                                                <TableCell align=\"left\" >{item.NamaBarang}</TableCell>\r\n                                                <TableCell align=\"right\" >{item.Jumlah}</TableCell>\r\n                                                <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaModal)}</TableCell>\r\n                                                <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaJual)}</TableCell>\r\n                                                <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.TotalModal)}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                )\r\n                                    : (\r\n                                        <TableBody>\r\n                                            {Data.DetailTransaksi.map((item, index) => (\r\n                                                <TableRow hover key={index + 1} >\r\n                                                    <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                                    <TableCell align=\"left\" >{item.Barcode}</TableCell>\r\n                                                    <TableCell align=\"left\" >{item.NamaBarang}</TableCell>\r\n                                                    <TableCell align=\"right\" >{item.Satuan}</TableCell>\r\n                                                    <TableCell align=\"right\" >{item.Jumlah}</TableCell>\r\n                                                    <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaSatuan)}</TableCell>\r\n                                                    <TableCell align=\"right\" >{item.TotalBarang}</TableCell>\r\n                                                    <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaTotal)}</TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    )}\r\n                            </Table>\r\n                        )\r\n                            : null\r\n                        }\r\n                        <hr />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Diskon' name='Diskon' value={Data.Diskon ? Data.Diskon : 0} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='PotonganHarga' name='PotonganHarga' value={Data.PotonganHarga ? Data.PotonganHarga : 0} />\r\n                        {Data.Tipe === 'Transaksi' ? (\r\n                            <Fragment>\r\n                                <label>Jumlah Pendapatan:</label>\r\n                                <Typography align='center' variant='h2'>Total: +Rp{this.ConverNumberToMoneyFormat(Data.TotalPembayaran ? Data.TotalPembayaran : 0)}</Typography>\r\n                            </Fragment>\r\n                        ) : (\r\n                                <Fragment>\r\n                                    <label>Jumlah Pengeluaran:</label>\r\n                                    <Typography align='center' variant='h2'>Total: -Rp{this.ConverNumberToMoneyFormat(Data.TotalPembayaran ? Data.TotalPembayaran : 0)}</Typography>\r\n                                </Fragment>\r\n                            )}\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Ket' name='Ket' value={Data.Ket ? Data.Ket : ''} />\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    idDetailTransaksi: state.KasirQu_Transaksi.idDetailTransaksi,\r\n    TransaksiDetail: state.KasirQu_Transaksi.TransaksiDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_TransaksiDetail })(withTheme(ListTransaksi))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Transaksi_List, get_TransaksiId_Detail } from '../../../Store/Actions/Transaksi.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport GenericModals from '../GenericModals'\r\nimport TransaksiDetail from './Transaksi.TransaksiDetail'\r\n\r\nclass ListTransaksi extends React.Component {\r\n    componentDidMount() {\r\n        if (this.props.DisableLoad !== true) {\r\n            console.log('this.props.DisableLoad')\r\n            this.props.Load_Transaksi_List()\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_list_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_list_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_list_transaksi', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('tabel_list_transaksi', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_TransaksiId_Detail(BarangID) {\r\n        this.props.get_TransaksiId_Detail(BarangID)\r\n    }\r\n    render() {\r\n        const data = this.props.TransaksiList\r\n        return (\r\n            <Fragment>\r\n                {data && data.length > 0 ?\r\n                    // {data ?\r\n                    <Table stickyHeader id='tabel_list_transaksi'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                <TableCell style={{ width: '35%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Id</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>User Name</TableCell>\r\n                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortSTR(4)}>Jenis</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Total Transaksi&nbsp;(Rp)</TableCell>\r\n                                <TableCell style={{ width: '5%' }} align='center'>Detail</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map((item, index) => (\r\n                                <TableRow hover key={index + 1}>\r\n                                    <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                    <TableCell align=\"left\">{new Date(item.TanggalTransaksi).toLocaleString()}</TableCell>\r\n                                    <TableCell align=\"left\">{item._id}</TableCell>\r\n                                    <TableCell align=\"left\">{item.NamaKasir}</TableCell>\r\n                                    <TableCell align=\"left\">{item.Tipe}</TableCell>\r\n                                    <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalPembayaran)}</TableCell>\r\n                                    <TableCell align='center'>\r\n                                        <GenericModals\r\n                                            size='l'\r\n                                            header='Jenis Barang Detail'\r\n                                            body={<TransaksiDetail />}\r\n                                            Buttoncolor='primary'\r\n                                            ButtononClickeven={() => this.onClick_get_TransaksiId_Detail(item._id)}\r\n                                            Buttonlabel={'Detail'}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    TransaksiList: state.KasirQu_Transaksi.TransaksiList,\r\n    idDetailTransaksi: state.KasirQu_Transaksi.idDetailTransaksi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Transaksi_List, get_TransaksiId_Detail })(ListTransaksi)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Export_Transaksi } from '../../../Store/Actions/Transaksi.Actions'\r\n\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport ListTransaksi from './Transaksi.ListTransaksi'\r\n\r\nclass TransaksiExport extends React.Component {\r\n    state = {\r\n        ExportTransaksiList: []\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.TransaksiList !== prevProps.TransaksiList) {\r\n            const { TransaksiList } = this.props\r\n            this.setState({ ExportTransaksiList: TransaksiList })\r\n        }\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const ExportTransaksiList = this.state.ExportTransaksiList\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n\r\n        this.props.Export_Transaksi(ExportTransaksiList, authdata)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const {\r\n            ExportTransaksiList\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <ListTransaksi DisableLoad={true} />\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    {((ExportTransaksiList) && (ExportTransaksiList.length > 0)) ?\r\n                        < Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >\r\n                            Export\r\n                        </Button>\r\n                        : null}\r\n                </form>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    TransaksiList: state.KasirQu_Transaksi.TransaksiList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Export_Transaksi })(TransaksiExport)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Transaksi_List } from '../../../Store/Actions/Transaksi.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, InputAdornment, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nconst date = new Date()\r\nconst dd = date.getDate() >= 10 ? date.getDate() : '0' + date.getDate()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass ListTransaksiQuery extends React.Component {\r\n    state = {\r\n        isAllData: false,\r\n        TransaksiID: '',\r\n        UserName: '',\r\n        Jenis: '',\r\n        isAllDate: false,\r\n        // DateMin: '',\r\n        DateMin: `${yyyy}-${mm}-${dd}T00:01`,\r\n        DateMax: '',\r\n        DiskonMin: '',\r\n        DiskonMax: '',\r\n        PotonganHargaMin: '',\r\n        PotonganHargaMax: '',\r\n        TotalTransaksiMin: '',\r\n        TotalTransaksiMax: '',\r\n        Ket: '',\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { isAllData, isAllDate } = this.state\r\n        const data = {\r\n            TransaksiID: this.state.isAllData ? null : this.state.TransaksiID,\r\n            UserName: this.state.isAllData ? null : this.state.UserName,\r\n            Jenis: this.state.isAllData ? null : this.state.Jenis,\r\n            DateMin: this.state.isAllData ? null : (this.state.isAllDate ? null : this.state.DateMin),\r\n            DateMax: this.state.isAllData ? null : (this.state.isAllDate ? null : this.state.DateMax),\r\n            DiskonMin: this.state.isAllData ? null : this.state.DiskonMin,\r\n            DiskonMax: this.state.isAllData ? null : this.state.DiskonMax,\r\n            PotonganHargaMin: this.state.isAllData ? null : this.state.PotonganHargaMin,\r\n            PotonganHargaMax: this.state.isAllData ? null : this.state.PotonganHargaMax,\r\n            TotalTransaksiMin: this.state.isAllData ? null : this.state.TotalTransaksiMin,\r\n            TotalTransaksiMax: this.state.isAllData ? null : this.state.TotalTransaksiMax,\r\n            Ket: this.state.isAllData ? null : this.state.Ket,\r\n        }\r\n        if ((!data.DateMin && !data.DateMax) || (isAllData) || (isAllDate)) {\r\n            this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n        }\r\n        if (((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin)) ||\r\n            ((data.DiskonMax < data.DiskonMin) && (data.DiskonMax && data.DiskonMin)) ||\r\n            ((data.PotonganHargaMax < data.PotonganHargaMin) && (data.PotonganHargaMax && data.PotonganHargaMin)) ||\r\n            ((data.TotalTransaksiMax < data.TotalTransaksiMin) && (data.TotalTransaksiMax && data.TotalTransaksiMin))\r\n        ) {\r\n            this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n        }\r\n        this.props.Load_Query_Transaksi_List(data)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n        const choices = ['Belanja', 'Transaksi']\r\n        const {\r\n            isAllData,\r\n            TransaksiID,\r\n            UserName,\r\n            Jenis,\r\n            isAllDate,\r\n            DateMin,\r\n            DateMax,\r\n            DiskonMin,\r\n            DiskonMax,\r\n            PotonganHargaMin,\r\n            PotonganHargaMax,\r\n            TotalTransaksiMin,\r\n            TotalTransaksiMax,\r\n            Ket,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>Cari dari Keseluruhan Data:</label><br />\r\n                    <div className='switch' style={MUI_VerticalMargin}>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n                    </div><br />\r\n\r\n                    {isAllData ? null : (\r\n                        <Fragment>\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Transaksi ID' name='TransaksiID' value={TransaksiID} />\r\n\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='UserName' name='UserName' value={UserName} />\r\n\r\n                            <FormControl style={st_textfield} variant=\"filled\">\r\n                                <InputLabel shrink >Jenis Transaksi</InputLabel>\r\n                                <Select native onChange={this.Form_OnChange} label=\"Jenis Transaksi\" name='Jenis' value={Jenis} labelWidth={100} >\r\n                                    <option value=\"\"> -- select an option -- </option>\r\n                                    {choices.map((item, index) =>\r\n                                        <option key={index} value={item}>{item}</option>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n                            <div className='switch' style={MUI_VerticalMargin}>\r\n                                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n                            </div><br />\r\n                            {!isAllDate ? (\r\n                                <Fragment>\r\n                                    <label>Cari Berdasarkan Tanggal:</label><br />\r\n                                    <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                                    <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                                </Fragment>\r\n                            ) : null}\r\n\r\n                            <label>Cari Berdasarkan Diskon di Transaksi:</label><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Diskon Minimum'\r\n                                name='DiskonMin'\r\n                                value={DiskonMin}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            %\r\n                            </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Diskon Maksimum'\r\n                                name='DiskonMax'\r\n                                value={DiskonMax}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            %\r\n                            </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n\r\n                            <label>Cari Berdasarkan Total Potongan Harga di Transaksi:</label><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Potongan Harga Minimum'\r\n                                name='PotonganHargaMin'\r\n                                value={PotonganHargaMin}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                            </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Potongan Harga Maksimum'\r\n                                name='PotonganHargaMax'\r\n                                value={PotonganHargaMax}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                            </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n\r\n                            <label>Cari Berdasarkan Total Transaksi:</label><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Total Transaksi Minimum'\r\n                                name='TotalTransaksiMin'\r\n                                value={TotalTransaksiMin}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                            </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Total Transaksi Maksimum'\r\n                                name='TotalTransaksiMax'\r\n                                value={TotalTransaksiMax}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                            </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keteragan' name='Ket' value={Ket} />\r\n\r\n                        </Fragment>\r\n                    )}\r\n\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { Load_Query_Transaksi_List, Create_Info_Messages, Create_Warning_Messages })(ListTransaksiQuery)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport TransaksiExport from '../../../Containers/Transaksi/Transaksi.TransaksiExport'\r\nimport QueryTransaksi from '../../../Containers/Transaksi/Transaksi.Query.ListTransaksi'\r\n\r\nconst ExportTransaksi = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Export Transaksi\r\n            </Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n\r\n                advancesearch={true}\r\n                accordiondetails={<QueryTransaksi />}\r\n            />\r\n            <TransaksiExport />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExportTransaksi","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Import_Transaksi } from '../../../Store/Actions/Transaksi.Actions'\r\nimport { Create_Error_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, FormGroup, FormControlLabel, Checkbox, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass ReviewTransaksiImport extends React.Component {\r\n    state = {\r\n        FileData: [],\r\n        Confirm: false,\r\n        isProblemInData: false,\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.TransaksiImportFile !== prevProps.TransaksiImportFile) {\r\n            const { TransaksiImportFile } = this.props\r\n            const FirstSheet = Object.values(TransaksiImportFile)[0]\r\n            this.setState({ FileData: FirstSheet ? JSON.parse(FirstSheet) : [] })\r\n        }\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { isProblemInData, FileData } = this.state\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        if (isProblemInData === true) {\r\n            this.props.Create_Error_Messages(null, 'ada kesalahan pada data yang dimasukkan')\r\n        } else {\r\n            this.props.Import_Transaksi(FileData, authdata)\r\n        }\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n\r\n        const {\r\n            FileData,\r\n            Confirm,\r\n            isProblemInData,\r\n        } = this.state\r\n        ////// for CheckisDataCorrect\r\n        const FirstFileData = FileData[0]\r\n        const FileDataKeys = FirstFileData ? Object.keys(FirstFileData) : null\r\n        ////// function\r\n        const CheckisDataCorrect = (Data, DataKeys) => {\r\n            try {\r\n                if (Data.length > 0 && DataKeys.length > 0) {\r\n                    const DataKeys_NamaKasir = DataKeys.find(item => item === 'NamaKasir')\r\n                    const DataKeys_Tipe = DataKeys.find(item => item === 'Tipe')\r\n                    const DataKeys_DetailTransaksi = DataKeys.find(item => item === 'DetailTransaksi')\r\n                    const DataKeys_TotalPembayaran = DataKeys.find(item => item === 'TotalPembayaran')\r\n                    if (!DataKeys_NamaKasir || !DataKeys_Tipe || !DataKeys_DetailTransaksi || !DataKeys_TotalPembayaran) {\r\n                        return false\r\n                    }\r\n                    else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n\r\n        const isDataCorrect = CheckisDataCorrect(FileData, FileDataKeys)\r\n        return (\r\n            <Fragment>\r\n                {isDataCorrect ? (\r\n                    <Fragment>\r\n                        <Table id='tabel_review_Import_Transaksi'>\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">No</TableCell>\r\n                                    {FileDataKeys.map((item) => (\r\n                                        <TableCell align=\"center\" key={item}>{item}</TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {FileData.map((item, index) => (\r\n                                    <TableRow hover key={index}>\r\n                                        <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                        {Object.keys(item).map((itemitem, indexindex) => (\r\n                                            <TableCell align=\"left\" key={`${index}${indexindex}`}>\r\n                                                {\r\n                                                    (typeof item[itemitem] === 'object' && item[itemitem] !== null) ? JSON.stringify(item[itemitem]) : item[itemitem]\r\n                                                }\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox color='primary' onChange={this.CheckBox_OnChange} name=\"Confirm\" value={Confirm} />}\r\n                                    label=\"Saya Sudah Yakin Tidak Ada yang Salah Pada Data diatas\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary'\r\n                                disabled={\r\n                                    ((isDataCorrect === true)\r\n                                        && (Confirm === true)\r\n                                        && (isProblemInData === false)\r\n                                    ) ? false : true}\r\n                            >\r\n                                Cek\r\n                            </Button>\r\n                        </form>\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    TransaksiImportFile: state.KasirQu_Transaksi.TransaksiImportFile,\r\n})\r\nexport default connect(mapStateToProps, { Import_Transaksi, Create_Error_Messages })(ReviewTransaksiImport)","import React, { Fragment } from 'react'\r\n\r\nimport XLSX from 'xlsx'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport ReviewTransaksiImport from './Transaksi.Review.TransaksiImport'\r\n\r\nimport { Cek_Import_Transaksi } from '../../../Store/Actions/Transaksi.Actions'\r\n\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport GenericModals from '../GenericModals'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nclass TransaksiImport extends React.Component {\r\n    state = {\r\n        MaxFileSize: 1000000 * 50,\r\n        ExcelData: null,\r\n    }\r\n    excelToJson(reader) {\r\n        const fileData = reader.result\r\n        const wb = XLSX.read(fileData, { type: 'binary' })\r\n        const data = {}\r\n        wb.SheetNames.forEach((sheetName) => {\r\n            const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\r\n            const rowString = JSON.stringify(rowObj)\r\n            data[sheetName] = rowString\r\n        })\r\n        this.setState({ ExcelData: data })\r\n    }\r\n\r\n    loadFileXLSX(files) {\r\n        if (files.length > 0) {\r\n            try {\r\n                const reader = new FileReader()\r\n                reader.onload = this.excelToJson.bind(this, reader)\r\n                reader.readAsBinaryString(files[0])\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { ExcelData } = this.state\r\n        this.props.Cek_Import_Transaksi(ExcelData)\r\n    }\r\n\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n\r\n        const {\r\n            MaxFileSize,\r\n            ExcelData,\r\n        } = this.state\r\n\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <DropzoneArea\r\n                        filesLimit={1}\r\n                        showPreviewsInDropzone={true}\r\n                        showFileNames={true}\r\n                        maxFileSize={MaxFileSize}\r\n                        acceptedFiles={['.csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel']}\r\n                        dropzoneText={\"Masukkan atau Pilih File excel/sejenisnya untuk Import Transaksi\"}\r\n                        onChange={(files) => this.loadFileXLSX(files)}\r\n                    />\r\n                    <GenericModals\r\n                        size='xl'\r\n                        uncontrollsize={true}\r\n                        header='Review Import Transaksi'\r\n                        body={<ReviewTransaksiImport />}\r\n                        Buttontype='submit'\r\n                        Buttonstyle={st_textfield}\r\n                        Buttonsize='large'\r\n                        Buttonvariant='contained'\r\n                        Buttoncolor='primary'\r\n                        Buttondisabled={ExcelData ? false : true}\r\n                        ButtononClickeven={() => null}\r\n                        Buttonlabel={'Cek'}\r\n                    />\r\n                </form>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { Cek_Import_Transaksi })(TransaksiImport)","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Accordion, AccordionSummary, AccordionDetails, Typography } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin } from '../../MUI_theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst FAQ = (props) => {\r\n    const data = props.faqlist ? props.faqlist : []\r\n    return (\r\n        <Fragment>\r\n            <Paper style={{\r\n                width: '90%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                display: 'block',\r\n                marginTop: '10px',\r\n                marginBottom: '10px',\r\n                padding: '10px',\r\n            }}>\r\n                {props.title ? (\r\n                    <Typography\r\n                        variant={props.titlevariant ? props.titlevariant : 'h4'}\r\n                        align={props.titlealign ? props.titlealign : 'left'}\r\n                        style={{ ...MUI_VerticalMargin }}\r\n                    >\r\n                        {props.title}\r\n                    </Typography>\r\n                ) : null}\r\n                {data && data.length > 0 ? (\r\n                    data.map((item, index) => (\r\n                        <Accordion disabled={item.disabled ? item.disabled : false} key={index}>\r\n                            <AccordionSummary\r\n                                expandIcon={item.expandIcon ? item.expandIcon : <ExpandMoreIcon />}\r\n                            >\r\n                                {item.AccordionSummary ? item.AccordionSummary : (\r\n                                    <Typography align=\"left\" >\r\n                                        {item.AccordionSummaryTypography ? item.AccordionSummaryTypography : ''}\r\n                                    </Typography>\r\n                                )}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                {item.AccordionDetails ? item.AccordionDetails : (\r\n                                    <Typography>\r\n                                        {item.AccordionDetailsTypography ? item.AccordionDetailsTypography : ''}\r\n                                    </Typography >\r\n                                )}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    ))\r\n                ) : null}\r\n            </Paper>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FAQ","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Link, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport TransaksiImport from '../../../Containers/Transaksi/Transaksi.TransaksiImport'\r\nimport FAQ from '../../../Containers/FAQ'\r\n\r\nconst ImportTransaksi = () => {\r\n    const ListFAQ = [\r\n        {\r\n            AccordionSummaryTypography: 'File Apa Saja yang Bisa Digunakan?',\r\n            AccordionDetailsTypography: 'Semua file excel/spreadsheet',\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa \"Data Tidak Ditemukan\" pada Review?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna data yang anda masukkan tidak memiliki header dengan ketentuan yang benar minimal header berisi: <br />\r\n                     - NamaKasir (Penulisan Harus Sama) <br />\r\n                      - Tipe (Penulisan Harus Sama) <br />\r\n                       - DetailTransaksi (Penulisan Harus Sama)<br />\r\n                       - TotalPembayaran (Penulisan Harus Sama)\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagai Mana Cara Membuat Excel yang Benar Untuk Import Data?',\r\n            AccordionDetails: (\r\n                <Fragment>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    NamaKasir\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    TanggalTransaksi\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Tipe\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    DetailTransaksi\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Diskon\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    PotonganHarga\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    TotalPembayaran\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Ket\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    User1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    2020-06-21T14:23:11.545Z\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Belanja\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {`[{\"Id\":\"5eef6aad0931b80500170833\",\"Barcode\":\"111\",\"NamaBarang\":\"akan dihapus\",\"Jumlah\":1,\"HargaModal\":\"10\",\"HargaJual\":\"10\",\"TotalModal\":10}]`}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    10\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    User2\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    2020,8,23:1:1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Belanja\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {`[{\"Id\":\"5f15a7d6eb2d52262c8aed53\",\"Barcode\":\"11\",\"NamaBarang\":\"11\",\"Jumlah\":\"100\",\"HargaModal\":\"5000\",\"HargaJual\":\"7000\",\"TotalModal\":500000},{\"Id\":\"5f15a7d6eb2d52262c8aed54\",\"Barcode\":\"21\",\"NamaBarang\":\"21\",\"Jumlah\":\"65\",\"HargaModal\":\"18000\",\"HargaJual\":\"20000\",\"TotalModal\":1170000},{\"Id\":\"5f15a7d6eb2d52262c8aed55\",\"Barcode\":\"31\",\"NamaBarang\":\"31\",\"Jumlah\":\"125\",\"HargaModal\":\"3000\",\"HargaJual\":\"6000\",\"TotalModal\":375000}]`}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    2045000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    User1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    \"2020-07-25T01:28:11.600Z\"\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Transaksi\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {`[{\"Id\":\"5f15a7d6eb2d52262c8aed54\",\"Barcode\":\"21\",\"NamaBarang\":\"21\",\"Satuan\":\"rencengan\",\"Jumlah\":\"2\",\"HargaSatuan\":7000,\"TotalBarang\":16,\"HargaTotal\":112000},{\"Id\":\"5efc462b6db17a3cd84ae35b\",\"Barcode\":\"4970129727521\",\"NamaBarang\":\"spidol snowman\",\"Satuan\":\"dus\",\"Jumlah\":\"5\",\"HargaSatuan\":\"11000\",\"TotalBarang\":60,\"HargaTotal\":660000}]`}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    772000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    User1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    2020,7,23:6:28\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Transaksi\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {`[{\"Id\":\"5efc462b6db17a3cd84ae35b\",\"Barcode\":\"4970129727521\",\"NamaBarang\":\"spidol snowman\",\"Satuan\":\"dus\",\"Jumlah\":1,\"HargaSatuan\":\"11000\",\"TotalBarang\":12,\"HargaTotal\":132000}]`}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    0\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    132000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Harap Dibaca Sebelum Mengisi',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    - Jika data tidak lengkap maka tidak disimpan keseluruhan <br />\r\n                    - Jika format penulisan DetailTransaksi salah maka proses akan dihentikan  <br />\r\n                    - Jika format penulisan TanggalTransaksi salah makan TanggalTransaksi akan diseting pada saat ini  <br />\r\n                    - format penulisan TanggalTransaksi adalah format penulisan waktu ISO untuk lebih detail bisa cek artikel berikut <Link href='https://en.wikipedia.org/wiki/ISO_8601' target=\"_blank\" rel=\"noreferrer\">ini</Link> atau secara manual ditulis dengaan sebagai berikut <b>\"YYYY,MM,DD:HH:mm\"</b> dimana \"YYYY\" sebagai tahun, \"MM\" sebagai Bulan, \"DD\" sebagai tanggal, \"HH\" sebagai jam dan \"mm\" sebagai menit<br />\r\n                    - Jika Tipe Transaksi bukan diantara \"Transaksi\" atau \"Belanja\" maka data baris tersebut tidak akan disimpan, yang lain tetap dijalankan <br />\r\n                </Fragment>\r\n            ),\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagaimana Jika Saya Ingin Mengupdate Melalui Menu ini Bukan Menambah?',\r\n            AccordionDetailsTypography: 'Tidak bisa, menu import tidak bisa digunakan untuk mengupdate, silakan lakukan manual',\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagaimana Jika Saya Ingin Menggunakan Id yang sama dengan sebelumnya? karena id menjadi kode transaksi sebelumnya',\r\n            AccordionDetailsTypography: 'Sayangnya tidak bisa, saran kami menjadikan kolom id menjadi kolom Ket sehingga sewaktu waktu dibutuhkan id lama masih bisa di cari dari pencarian dengan memasukkan keterangan berupa id lama',\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Peringatan !!!',\r\n            AccordionDetailsTypography: 'Karna Data kompleks pengekan dilakukan diserver jadi tidak ada pemberitahuan (merah/kuning) pada halaman review',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Import Transaksi\r\n            </Typography>\r\n            <TransaksiImport />\r\n            <FAQ\r\n                title='Keterangan:'\r\n                faqlist={ListFAQ}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ImportTransaksi","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\n\r\nimport ExportTransaksi from './SubPage/Transaksi.ExportTransaksi'\r\nimport ImportTransaksi from './SubPage/Transaksi.ImportTransaksi'\r\n\r\nconst TransaksiImportExport = () => {\r\n    const breadcrumbs = [{ name: 'Transaksi', link: 'transaksi' }, { name: 'Import/Export Transaksi ', link: 'transaksi/importexport' }]\r\n    const [value, setValue] = React.useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n    const TapData = [\r\n        { taplabel: 'Export Transaksi', TapPanel: <ExportTransaksi /> },\r\n        { taplabel: 'Import Transaksi', TapPanel: <ImportTransaksi /> },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Paper style={{ marginBottom: '10px' }} >\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                    scrollButtons=\"auto\"\r\n                    centered={TapData.length > 6 ? false : true}\r\n                >\r\n                    {TapData.map((tapdata, index) => (\r\n                        <Tab key={index} label={tapdata.taplabel} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            {value === 0 ? TapData[value].TapPanel : null}\r\n            {value === 1 ? TapData[value].TapPanel : null}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TransaksiImportExport","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Barang_List } from '../../../Store/Actions/Barang.Actions'\r\nimport { Add_Barang_To_Belanja } from '../../../Store/Actions/Transaksi.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\n\r\nclass AddBarangToBelanja extends React.Component {\r\n    state = {\r\n        NamaBarang: null,\r\n        Barcode: '',\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_Barang_List()\r\n    }\r\n    BarangonChange = (e, newNamaBarang) => {\r\n        this.setState({ NamaBarang: newNamaBarang })\r\n    }\r\n    BarcodeonChange = (e, newBarcode) => {\r\n        this.setState({ Barcode: newBarcode })\r\n        this.setState({ NamaBarang: null })\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        const { NamaBarang, Barcode, } = this.state\r\n        const { Data_Barang, Belanja } = this.props\r\n        // console.log('NamaBarang', NamaBarang)\r\n        // console.log('Barcode', Barcode)\r\n        if (NamaBarang !== null) {\r\n            if (NamaBarang.Barcode) {\r\n                const isBaranginBelanja = Belanja.find(belanja => belanja.Barcode === NamaBarang.Barcode)\r\n                if (isBaranginBelanja) {\r\n                    this.props.Create_Warning_Messages(null, `barcode ${NamaBarang.Barcode} sudah ada di list belanja`)\r\n                } else {\r\n                    this.props.Add_Barang_To_Belanja(NamaBarang)\r\n                    this.setState({\r\n                        NamaBarang: null,\r\n                        Barcode: '',\r\n                    })\r\n                }\r\n            } else {\r\n                const barang = Data_Barang.find(data_barang => data_barang.Barcode === NamaBarang)\r\n                if (barang) {\r\n                    const isBaranginBelanja = Belanja.find(belanja => belanja.Barcode === barang.Barcode)\r\n                    if (isBaranginBelanja) {\r\n                        this.props.Create_Warning_Messages(null, `barcode ${barang.Barcode} sudah ada di list belanja`)\r\n                    } else {\r\n                        this.props.Add_Barang_To_Belanja(barang)\r\n                        this.setState({\r\n                            NamaBarang: null,\r\n                            Barcode: '',\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.props.Create_Info_Messages(null, 'barcode yang anda masukkan tidak sesuai')\r\n                }\r\n            }\r\n        } else {\r\n            const barang = Data_Barang.find(data_barang => data_barang.Barcode === Barcode)\r\n            if (barang) {\r\n                const isBaranginBelanja = Belanja.find(belanja => belanja.Barcode === barang.Barcode)\r\n                if (isBaranginBelanja) {\r\n                    this.props.Create_Warning_Messages(null, `barcode ${barang.Barcode} sudah ada di list belanja`)\r\n                } else {\r\n                    this.props.Add_Barang_To_Belanja(barang)\r\n                    this.setState({\r\n                        NamaBarang: null,\r\n                        Barcode: '',\r\n                    })\r\n                }\r\n            } else {\r\n                this.props.Create_Info_Messages(null, 'barcode yang anda masukkan tidak sesuai')\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(this.state)\r\n        // console.log(this.props)\r\n        const User = this.props.User\r\n        const Data_Barang = this.props.Data_Barang\r\n        const isTransaksiLoading = this.props.isTransaksiLoading\r\n        const {\r\n            NamaBarang,\r\n            Barcode,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                {/* <Fragment>\r\n                    <div>\r\n                        {`NamaBarang: ${this.state.NamaBarang !== null ? `'${this.state.NamaBarang}'` : 'null'}`}\r\n                    </div>\r\n                    <div>\r\n                        {`Barcode: '${this.state.Barcode}'`}\r\n                    </div>\r\n                </Fragment> */}\r\n                <Fragment>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            disableClearable\r\n\r\n                            options={Data_Barang.sort((a, b) => (a.Jenis > b.Jenis) ? 1 : ((b.Jenis > a.Jenis) ? -1 : 0))}\r\n                            // getOptionLabel={(option) => option.Name}\r\n                            getOptionLabel={option => typeof option === 'string' ? option : option.Name}\r\n                            groupBy={(option) => option.Jenis}\r\n\r\n                            value={NamaBarang}\r\n                            onChange={this.BarangonChange}\r\n\r\n                            inputValue={Barcode}\r\n                            onInputChange={this.BarcodeonChange}\r\n\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Masukan Code Barcode atau Pilih Nama Barang\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    style={{ width: '100%' }}\r\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Button\r\n                            type='submit'\r\n                            variant=\"outlined\"\r\n                            color='primary'\r\n                            size=\"large\"\r\n                            style={{ width: '100%' }}\r\n                            disabled={((User) && (isTransaksiLoading === false)) ? false : true}\r\n                        >\r\n                            Tambah\r\n                            </Button>\r\n                    </form>\r\n                </Fragment>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    Data_Barang: state.KasirQu_Barang.BarangList,\r\n    Belanja: state.KasirQu_Transaksi.Belanja,\r\n    isTransaksiLoading: state.KasirQu_Transaksi.isTransaksiLoading\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Barang_List, Add_Barang_To_Belanja, Create_Info_Messages, Create_Warning_Messages })(AddBarangToBelanja)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Transaksi_Belanja } from '../../../Store/Actions/Transaksi.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, FormGroup, FormControlLabel, TextField, Checkbox, Button } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass ReviewBelanja extends React.Component {\r\n    state = {\r\n        Belanja: this.props.Belanja.Belanja,\r\n        Ket: '',\r\n        Confirm: false,\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User } = this.props\r\n        const Data = this.state.Belanja\r\n        const Ket = this.state.Ket\r\n        const authdata = {\r\n            UserName: User.UserName,\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Transaksi_Belanja(Data, Ket, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_review_belanja', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_review_belanja', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_review_belanja', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const st_tablehead = { ...theme.customTheme.tablehead }\r\n        const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const Data = this.state.Belanja\r\n        const {\r\n            Ket,\r\n            Confirm,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                {Data ? (\r\n                    <Fragment>\r\n                        <Table stickyHeader id='tabel_review_belanja'>\r\n                            <TableHead style={st_tablehead}>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"left\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                    <TableCell style={{ width: '50%' }} align=\"left\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(3)}>Jumlah</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(4)}>Harga Modal&nbsp;(Rp)</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Jual&nbsp;(Rp)</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Total Modal&nbsp;(Rp)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {Data.map((item, index) => (\r\n                                    <TableRow hover key={index + 1}\r\n                                        style={\r\n                                            (item.HargaModal < 1 || item.HargaJual < 1) ? { backgroundColor: 'red' } :\r\n                                                (item.HargaJual < item.HargaModal) ? { backgroundColor: 'yellow' }\r\n                                                    : null}\r\n                                    >\r\n                                        <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                        <TableCell align=\"left\" >{item.Barcode}</TableCell>\r\n                                        <TableCell align=\"left\" >{item.NamaBarang}</TableCell>\r\n                                        <TableCell align=\"center\" >{item.Jumlah}</TableCell>\r\n                                        <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaModal)}</TableCell>\r\n                                        <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.HargaJual)}</TableCell>\r\n                                        <TableCell align=\"right\" >{this.ConverNumberToMoneyFormat(item.TotalModal)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <TextField style={st_button} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keterangan' name='Ket' value={Ket} />\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox color='primary' onChange={this.CheckBox_OnChange} name=\"Confirm\" value={Confirm} />}\r\n                                    label=\"Saya Sudah Yakin Tidak Ada yang Salah Pada Data diatas\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button type='submit' style={st_button} size=\"large\" variant='contained' color='primary' disabled={(Confirm === false) ? true : false} >Masukkan Ke DataBase</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    Belanja: state.KasirQu_Transaksi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Transaksi_Belanja })(withTheme(ReviewBelanja))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Change_Belanja_Detail, Clear_A_Barang_From_Belanja, Clear_Barang_In_Belanja } from '../../../Store/Actions/Transaksi.Actions'\r\nimport { Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, IconButton, TextField, Typography } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport GenericModals from '../GenericModals'\r\nimport ReviewBelanja from './Transaksi.ReviewBelanja'\r\n\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\"\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\"\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\"\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\nclass TransaksiBelanja extends React.Component {\r\n    state = {\r\n        Belanja: this.props.Belanja.Belanja,\r\n        Total: [],\r\n        isEditingOn: false,\r\n        Jumlah: '',\r\n        HargaModal: '',\r\n        HargaJual: '',\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.Belanja !== prevProps.Belanja) {\r\n            this.setState({ Total: [] })\r\n        }\r\n    }\r\n\r\n    EditRow(Index) {\r\n        if (this.state.isEditingOn === false) {\r\n            let belanjas = [...this.state.Belanja]\r\n            let belanja = { ...belanjas[Index] }\r\n            belanja.isEditAble = true\r\n            belanjas[Index] = belanja\r\n            this.setState({ Belanja: belanjas })\r\n            this.setState({ Jumlah: belanja.Jumlah })\r\n            this.setState({ HargaModal: belanja.HargaModal })\r\n            this.setState({ HargaJual: belanja.HargaJual })\r\n            this.setState({ isEditingOn: true })\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    onEditChange = e => this.setState({ [[e.target.name]]: e.target.value })\r\n    onKeyPress = (e, index) => {\r\n        if (e.keyCode === 13) {\r\n            this.EditingDone(index)\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.Editingcancel()\r\n        }\r\n    }\r\n    EditingDone(index) {\r\n        const { Jumlah, HargaModal, HargaJual } = this.state\r\n        if (Jumlah < 0 || HargaModal < 0 || HargaJual < 0) {\r\n            this.props.Create_Warning_Messages(null, 'satuan tidak bisa kurang dari 0')\r\n        } else {\r\n            this.props.Change_Belanja_Detail(index, Jumlah, HargaModal, HargaJual)\r\n            this.setState({ Belanja: this.props.Belanja.Belanja })\r\n            this.setState({ Jumlah: '' })\r\n            this.setState({ HargaModal: '' })\r\n            this.setState({ HargaJual: '' })\r\n            this.setState({ isEditingOn: false })\r\n        }\r\n    }\r\n    Editingcancel() {\r\n        this.setState({ Belanja: this.props.Belanja.Belanja })\r\n        this.setState({ Jumlah: '' })\r\n        this.setState({ HargaModal: '' })\r\n        this.setState({ HargaJual: '' })\r\n        this.setState({ isEditingOn: false })\r\n    }\r\n    CancelBarang(Barcode) {\r\n        if (this.state.isEditingOn === false) {\r\n            this.props.Clear_A_Barang_From_Belanja(Barcode)\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    CancelAllBarang() {\r\n        if (this.state.isEditingOn === false) {\r\n            this.props.Clear_Barang_In_Belanja()\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_belanja', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_belanja', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        ////// FIXME didnt work on 6 & 7\r\n        Short_Column_Money('tabel_belanja', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    SUMHargaTotal(TotalModal) {\r\n        this.state.Total.push(TotalModal)\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const st_tablehead = { ...theme.customTheme.tablehead }\r\n        const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const Data = this.state.Belanja\r\n        return (\r\n            <Fragment>\r\n                <Table stickyHeader id='tabel_belanja'>\r\n                    <TableHead style={st_tablehead}>\r\n                        <TableRow>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\"  >Edit</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.CancelAllBarang()} >Cancel</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(2)}>No</TableCell>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Barcode</TableCell>\r\n                            <TableCell style={{ width: '35%' }} align=\"center\" onClick={() => this.ButtonShortSTR(4)}>Nama Barang</TableCell>\r\n                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(5)}>Jumlah</TableCell>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Harga Modal&nbsp;(Rp)</TableCell>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(7)}>Harga Jual&nbsp;(Rp)</TableCell>\r\n                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(8)}>Total Modal&nbsp;(Rp)</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {Data.map((item, index) => (\r\n                            <TableRow key={index + 1}\r\n                                hover={true}\r\n                            // style={index % 2 === 1 ? st_tablehead : null}\r\n                            >\r\n                                <TableCell align=\"center\" >\r\n                                    {item.isEditAble ?\r\n                                        <Fragment>\r\n                                            <IconButton onClick={() => this.EditingDone(index, item.HargaSatuan)}>\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.Editingcancel()}>\r\n                                                <RevertIcon />\r\n                                            </IconButton>\r\n                                        </Fragment>\r\n                                        :\r\n                                        <Fragment>\r\n                                            <IconButton onClick={() => this.EditRow(index)}>\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                        </Fragment>\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <IconButton onClick={() => this.CancelBarang(index)}>\r\n                                        <DeleteForeverIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                <TableCell align=\"left\">{item.NamaBarang}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {item.isEditAble ?\r\n                                        <TextField\r\n                                            onChange={this.onEditChange}\r\n                                            onKeyDown={(event) => this.onKeyPress(event, index)}\r\n                                            name='Jumlah'\r\n                                            value={this.state.Jumlah}\r\n                                            type='number'\r\n                                        >\r\n                                        </TextField>\r\n                                        : item.Jumlah\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {item.isEditAble ?\r\n                                        <TextField\r\n                                            onChange={this.onEditChange}\r\n                                            onKeyDown={(event) => this.onKeyPress(event, index)}\r\n                                            name='HargaModal'\r\n                                            value={this.state.HargaModal}\r\n                                            type='number'\r\n                                        >\r\n                                        </TextField>\r\n                                        : <Typography>\r\n                                            {this.ConverNumberToMoneyFormat(item.HargaModal)}\r\n                                        </Typography>\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {item.isEditAble ?\r\n                                        <TextField\r\n                                            onChange={this.onEditChange}\r\n                                            onKeyDown={(event) => this.onKeyPress(event, index)}\r\n                                            name='HargaJual'\r\n                                            value={this.state.HargaJual}\r\n                                            type='number'\r\n                                        >\r\n                                        </TextField>\r\n                                        : <Typography>\r\n                                            {this.ConverNumberToMoneyFormat(item.HargaJual)}\r\n                                        </Typography>\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalModal)}</TableCell>\r\n                                {this.SUMHargaTotal(item.TotalModal)}\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n                {Data.length ?\r\n                    <Fragment>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">total:</TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"left\"></TableCell>\r\n                                    <TableCell align=\"center\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(this.state.Total.reduce((a, b) => a + b, 0))}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        <GenericModals\r\n                            size='l'\r\n                            header='Review Barang Belanja'\r\n                            body={<ReviewBelanja />}\r\n                            // footer={<DeleteButton />}\r\n                            Buttondisabled={(this.state.isEditingOn === false) ? false : true}\r\n                            Buttonstyle={st_button}\r\n                            Buttonvariant='contained'\r\n                            Buttoncolor='primary'\r\n                            Buttonsize='large'\r\n                            // ButtononClickeven={() => this.onClick_get_AccountId_Detail(item._id)}\r\n                            ButtononClickeven={() => null}\r\n                            Buttonlabel={'Review Barang Belanja'}\r\n                        />\r\n                    </Fragment>\r\n                    : null\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    Belanja: state.KasirQu_Transaksi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Change_Belanja_Detail, Clear_A_Barang_From_Belanja, Clear_Barang_In_Belanja, Create_Warning_Messages })(withTheme(TransaksiBelanja))","import React, { Fragment } from 'react'\r\n\r\n// import {Typography} from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\n// import DetailToko from '../../Containers/Account/Account.DetailToko'\r\nimport AddBarangToBelanja from '../../Containers/Transaksi/Transaksi.AddBarangToBelanja'\r\nimport TransaksiBelanja from '../../Containers/Transaksi/Transaksi.Belanja'\r\n\r\nconst Belanja = () => {\r\n    const breadcrumbs = [{ name: 'Transaksi', link: 'transaksi' }, { name: 'Belanja', link: 'transaksi/belanja' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            {/* <DetailToko /> */}\r\n            <hr />\r\n            <AddBarangToBelanja />\r\n            <hr />\r\n            <TransaksiBelanja />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Belanja","import React, { Fragment } from 'react'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport { TableSearching } from '../../Containers/Searching'\r\nimport ListTransaksi from '../../Containers/Transaksi/Transaksi.ListTransaksi'\r\nimport ListTransaksiQuery from '../../Containers/Transaksi/Transaksi.Query.ListTransaksi'\r\n\r\nconst TransaksiList = () => {\r\n    const breadcrumbs = [{ name: 'Transaksi', link: 'transaksi' }, { name: 'Transaksi List', link: 'transaksi/transaksilist' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <hr />\r\n            <TableSearching\r\n                tablename={'tabel_list_transaksi'}\r\n                tdnumber={2}\r\n                width='xl'\r\n                label={'Cari Berdasarkan ID'}\r\n                advancesearch={true}\r\n                accordiondetails={<ListTransaksiQuery />}\r\n            />\r\n            <hr />\r\n            <ListTransaksi />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TransaksiList","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Barang_List } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass TabelBarang extends React.Component {\r\n  componentDidMount() {\r\n    this.props.Load_Barang_List()\r\n  }\r\n  ButtonShortSTR(ColumnNumb) {\r\n    Short_Column_STR('tabel_data_barang', ColumnNumb)\r\n  }\r\n  ButtonShortINT(ColumnNumb) {\r\n    Short_Column_INT('tabel_data_barang', ColumnNumb)\r\n  }\r\n  ButtonShortMoney(ColumnNumb) {\r\n    Short_Column_Money('tabel_data_barang', ColumnNumb)\r\n  }\r\n  ConverNumberToMoneyFormat(OriginValue) {\r\n    const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n    return MoneyFormate\r\n  }\r\n  render() {\r\n    const theme = this.props.theme\r\n    const data = this.props.BarangList\r\n    const st_tablehead = {\r\n      ...theme.customTheme.tablehead,\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {data ?\r\n          (<Table stickyHeader aria-label=\"customized table\" id='tabel_data_barang'>\r\n            <TableHead style={st_tablehead}>\r\n              <TableRow>\r\n                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                <TableCell style={{ width: '40%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Jenis Barang</TableCell>\r\n                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Stok Barang</TableCell>\r\n                <TableCell style={{ width: '15%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Jual&nbsp;(Rp)</TableCell>\r\n                {/* <TableCell style={{ width: '15%' }} align=\"right\" onClick={() => this.ButtonShortSTR(6)}>Modal&nbsp;(Rp)</TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((item, index) => (\r\n                <TableRow hover key={index + 1}\r\n                // style={index % 2 === 1 ? st_tablehead : null}\r\n                >\r\n                  <TableCell align=\"left\">{index + 1}</TableCell>\r\n                  <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                  <TableCell align=\"left\">{item.Name}</TableCell>\r\n                  <TableCell align=\"left\">{item.Jenis}</TableCell>\r\n                  <TableCell align=\"right\">{item.Stok}</TableCell>\r\n                  <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaJual)}</TableCell>\r\n                  {/* <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaModal)}</TableCell> */}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>)\r\n          : <DataTidakDitemukan />\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // User: state.KasirQu_Auth.User,\r\n  // isBarangLoading: state.KasirQu_Barang.isBarangLoading,\r\n  BarangList: state.KasirQu_Barang.BarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Barang_List })(withTheme(TabelBarang))","import React, { Fragment } from 'react'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport { TableSearching } from '../../Containers/Searching'\r\nimport TabelBarang from '../../Containers/Barang/Barang.TabelBarang'\r\n\r\nconst Barang = () => {\r\n    const breadcrumbs = [{ name: 'Barang', link: 'barang' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <TableSearching tablename={'tabel_data_barang'} tdnumber={2} width='xl' label={null} />\r\n            <TabelBarang />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Barang","import { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    JENISBARANG_LOADING,\r\n    JENISBARANG_LOADED,\r\n    RELOADE_PAGE,\r\n    GET_JENISBARANG_ID_FOR_DETAIL,\r\n    JENISBARANG_DETAIL,\r\n    GET_JENISBARANG_ID_FOR_UPDATE,\r\n    JENISBARANG_DELETED,\r\n    LIST_JENISBARANG,\r\n    CEK_IMPORT_KATAGORIBARANG,\r\n    // LIST_QUERY_JENISBARANG_EXPORT,\r\n} from './Type.Actions'\r\n\r\nimport {\r\n    Create_Error_Messages,\r\n    // Create_Success_Messages,\r\n    Create_Info_Messages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_JenisBarang_List,\r\n    Database_Load_JenisBarang_Detail,\r\n} from './Database.Actions'\r\n\r\nexport const get_JenisBarangId_Detail = (JenisBarangID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_JENISBARANG_ID_FOR_DETAIL,\r\n        payload: JenisBarangID\r\n    })\r\n}\r\n\r\nexport const get_JenisBarangDetail = (JenisBarangID) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_JenisBarang_Detail(tokenConfig(getState), JenisBarangID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: JENISBARANG_DETAIL,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: get_JenisBarangDetail -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Add_JenisBarang = (JenisBarang, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        const isAdmin = Auth.isAdmin\r\n        if (!isSuperUser || !isAdmin) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Add_JenisBarang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const get_JenisBarangId_Update = (JenisBarangID) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_JENISBARANG_ID_FOR_UPDATE,\r\n        payload: JenisBarangID\r\n    })\r\n}\r\n\r\nexport const Update_JenisBarang = (JenisBarangID, UpdateData, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        const isAdmin = Auth.isAdmin\r\n        if (!isSuperUser || !isAdmin) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Update_JenisBarang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Delete_a_JenisBarang = (JenisBarangID, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        const isAdmin = Auth.isAdmin\r\n        if (!isSuperUser || !isAdmin) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch({\r\n                type: JENISBARANG_DELETED,\r\n                payload: JenisBarangID\r\n            })\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n            dispatch({ type: RELOADE_PAGE })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Delete_a_JenisBarang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_JenisBarang_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_JenisBarang_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_JENISBARANG,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_JenisBarang_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Export_Query_KatagoriBarang = (Query) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        // const Responses = await axios.post(`${IpAddres}/api/jenisbarang/querylist`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Export_Query_KatagoriBarang -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_JENISBARANG_EXPORT,\r\n        //         payload: Responses.data.QueryListJenisBarang\r\n        //     })\r\n        //     if (Responses.data.QueryListJenisBarang) {\r\n        //         const QueryListJenisBarang = Responses.data.QueryListJenisBarang\r\n        //         if (QueryListJenisBarang.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: JENISBARANG_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Export_Query_KatagoriBarang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Cek_Import_KatagoriBarang = (Data) => (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    dispatch({\r\n        type: CEK_IMPORT_KATAGORIBARANG,\r\n        payload: Data\r\n    })\r\n    dispatch({ type: JENISBARANG_LOADED })\r\n}\r\n\r\nexport const Import_KatagoriBarang = (Data, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/jenisbarang/import`, body, tokenConfig(getState))\r\n        // // console.log('Log: Import_KatagoriBarang -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //     dispatch({ type: JENISBARANG_LOADED })\r\n        //     dispatch({ type: RELOADE_PAGE })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Import_KatagoriBarang -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}\r\n\r\nexport const Export_KatagoriBarang = (Data, Auth) => async (dispatch, getState) => {\r\n    dispatch({ type: JENISBARANG_LOADING })\r\n    try {\r\n        if (!Auth) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'anda harus login untuk melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        const isSuperUser = Auth.isSuperUser\r\n        if (!isSuperUser) {\r\n            const newerr = {\r\n                response: {\r\n                    data: {\r\n                        msg: 'maaf anda tidak diperkenankan melakukan ini'\r\n                    }\r\n                }\r\n            }\r\n            throw newerr\r\n        }\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/jenisbarang/export`, body, {\r\n        //     responseType: 'blob',\r\n        //     ...tokenConfig(getState)\r\n        // })\r\n        // // console.log('Log: Export_KatagoriBarang -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     const url = window.URL.createObjectURL(new Blob([Responses.data]))\r\n        //     const link = document.createElement('a')\r\n        //     link.href = url\r\n        //     link.setAttribute('download', 'Export.JenisBarang.xlsx')\r\n        //     document.body.appendChild(link)\r\n        //     link.click()\r\n        //     // // 1\r\n        //     // const data = res.data\r\n        //     // const url = window.URL.createObjectURL(\r\n        //     //     new Blob([data], {\r\n        //     //         type: res.headers[\"content-type\"]\r\n        //     //     })\r\n        //     // )\r\n        //     // const response = {\r\n        //     //     file: url\r\n        //     // }\r\n        //     // console.log(response.file)\r\n        //     // window.open(response.file)\r\n\r\n        //     dispatch(Create_Success_Messages(null, 'Proses Export JenisBarang Berhasil'))\r\n        //     dispatch({ type: JENISBARANG_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: JENISBARANG_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Export_KatagoriBarang -> err', err)\r\n        dispatch(Create_Error_Messages(null, 'Ada Kesalahan Pada Proses Export JenisBarang'))\r\n        dispatch({ type: JENISBARANG_LOADED })\r\n    }\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Add_JenisBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\n\r\n////// TODO ADD FORM NAMEING CEK \r\n\r\n\r\nclass AddJenisBarang extends React.Component {\r\n    state = {\r\n        NamaJenisBarang: '',\r\n        Kepemilikan: '',\r\n        Ket: '',\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User } = this.props\r\n        const data = {\r\n            NamaJenisBarang: this.state.NamaJenisBarang,\r\n            Kepemilikan: this.state.Kepemilikan,\r\n            Ket: this.state.Ket,\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Add_JenisBarang(data, authdata)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const {\r\n            NamaJenisBarang,\r\n            Kepemilikan,\r\n            Ket,\r\n        } = this.state\r\n        const choices = ['pribadi', 'nonpribadi']\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Nama Jenis Barang' name='NamaJenisBarang' value={NamaJenisBarang} required />\r\n                    {/* <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Kepemilikan' name='Kepemilikan' value={Kepemilikan} required /> */}\r\n                    <FormControl style={st_textfield} variant=\"filled\" required >\r\n                        <InputLabel shrink >Kepemilikan</InputLabel>\r\n                        <Select native onChange={this.Form_OnChange} label=\"Kepemilikan\" name='Kepemilikan' value={Kepemilikan} labelWidth={100} >\r\n                            <option value=\"\" disabled> -- select an option -- </option>\r\n                            {choices.map((item, index) =>\r\n                                <option key={index} value={item}>{item}</option>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keterangan' name='Ket' value={Ket} />\r\n                    <hr />\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Tambah Jenis Barang</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Add_JenisBarang })(AddJenisBarang)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_JenisBarangDetail } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { TextField } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_st_AccountDetail_TextField, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass JenisBarangDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idDetailJenisBarang !== prevProps.idDetailJenisBarang) {\r\n            const { idDetailJenisBarang } = this.props\r\n            this.props.get_JenisBarangDetail(idDetailJenisBarang)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { idDetailJenisBarang } = this.props\r\n        if (idDetailJenisBarang !== null) {\r\n            this.props.get_JenisBarangDetail(idDetailJenisBarang)\r\n        }\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const JenisBarangDetail = this.props.JenisBarangDetail\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_st_AccountDetail_TextField, ...theme.customTheme.readonlytextfield }\r\n        return (\r\n            <Fragment>\r\n                {JenisBarangDetail ?\r\n                    <Fragment>\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Nama Jenis Barang' name='NamaJenisBarang' value={JenisBarangDetail.NamaJenisBarang} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Kepemilikan' name='Kepemilikan' value={JenisBarangDetail.Kepemilikan} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Keterangan' name='Ket' value={JenisBarangDetail.Ket ? JenisBarangDetail.Ket : ''} />\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    idDetailJenisBarang: state.KasirQu_JenisBarang.idDetailJenisBarang,\r\n    JenisBarangDetail: state.KasirQu_JenisBarang.JenisBarangDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_JenisBarangDetail })(withTheme(JenisBarangDetail))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_BarangDetail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { TextField, Typography, Table, TableHead, TableBody, TableRow, TableCell, } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_FullWidth, MUI_VerticalMargin, MUI_st_AccountDetail_Avatar } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n// import MoneyFormater from '../MoneyFormater'\r\n\r\nclass BarangDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idDetailBarang !== prevProps.idDetailBarang) {\r\n            console.log('prevProps')\r\n            const { idDetailBarang } = this.props\r\n            this.props.get_BarangDetail(idDetailBarang)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { idDetailBarang } = this.props\r\n        if (idDetailBarang !== null) {\r\n            this.props.get_BarangDetail(idDetailBarang)\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_barang_detail', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_barang_detail', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_barang_detail', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const BarangDetail = this.props.BarangDetail\r\n        const DefaultUrl = this.props.WebSite ? `http://${this.props.WebSite}` : `http://${this.props.IpAddres ? this.props.IpAddres : '127.0.0.1'}:${this.props.Port ? this.props.Port : '5000'}`\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth, ...theme.customTheme.readonlytextfield }\r\n        return (\r\n            <Fragment>\r\n                {BarangDetail ?\r\n                    <Fragment>\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='id' name='_id' value={BarangDetail._id} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Barcode' name='Barcode' value={BarangDetail.Barcode} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Nama' name='Name' value={BarangDetail.Name} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Jenis' name='Jenis' value={BarangDetail.Jenis} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Stok' name='Stok' value={BarangDetail.Stok} />\r\n                        <label>Apakah Bisa Melakukan Transaksi Satuan Desimal?</label><br />\r\n                        <div className='switch'>\r\n                            <input type=\"checkbox\" disabled name='isDecimal' checked={BarangDetail.isDecimal} /><span></span><br />\r\n                        </div><br />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Modal' name='HargaModal' value={BarangDetail.HargaModal} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Harga Jual' name='HargaJual' value={BarangDetail.HargaJual} />\r\n                        {BarangDetail.SatuanJual.length >= 1 ?\r\n                            <Fragment>\r\n                                <hr />\r\n                                <Table id='tabel_barang_detail'>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                            <TableCell style={{ width: '70%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Nama Satuan</TableCell>\r\n                                            <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(2)}>Jumlah Beli Minimum</TableCell>\r\n                                            <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(3)}>Harga Jual Satuan&nbsp;(Rp)</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {BarangDetail.SatuanJual.map((item, index) => (\r\n                                            <TableRow hover={true} key={index}>\r\n                                                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                                <TableCell align=\"left\">{item.NamaSatuan} </TableCell>\r\n                                                <TableCell align=\"center\">{item.MinBarang} </TableCell>\r\n                                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaJual)} </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                                <hr />\r\n                            </Fragment>\r\n                            : null}\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Keterangan' name='Ket' value={BarangDetail.Ket ? BarangDetail.Ket : ''} />\r\n                        <label>Foto Barang:</label>\r\n                        <Typography align={\"center\"}>\r\n                            <img src={BarangDetail.BarangPic ? `${DefaultUrl}/${BarangDetail.BarangPic}` : null} style={{ ...MUI_st_AccountDetail_Avatar, border: '2px solid black' }} alt={`logo barang ${BarangDetail.Name}`} />\r\n                        </Typography>\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    User: state.KasirQu_Auth.User,\r\n    idDetailBarang: state.KasirQu_Barang.idDetailBarang,\r\n    BarangDetail: state.KasirQu_Barang.BarangDetail,\r\n    IpAddres: state.KasirQu_Auth.IpAddres,\r\n    Port: state.KasirQu_Auth.Port,\r\n    WebSite: state.KasirQu_Auth.WebSite,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_BarangDetail })(withTheme(BarangDetail))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_BarangDetail, Update_Barang } from '../../../Store/Actions/Barang.Actions'\r\nimport { Load_JenisBarang_List } from '../../../Store/Actions/JenisBarang.Actions'\r\nimport { Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\nimport { ConvertInttoMoney } from '../Formater'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, FormHelperText, Table, TableHead, TableRow, TableCell, TableBody, IconButton, Button } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox'\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\"\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\"\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\"\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\n\r\n////// TODO ADD FORM NAMEING CEK \r\n\r\n\r\nclass BarangUpdate extends React.Component {\r\n    state = {\r\n        Barcode: '',\r\n        Name: '',\r\n        Jenis: '',\r\n        Stok: '',\r\n        isDecimal: false,\r\n        HargaModal: '',\r\n        HargaJual: '',\r\n        SatuanJual: [],\r\n        Ket: '',\r\n        BarangPic: null,\r\n        OriginalSatuanJual: [],\r\n        isEditingOn: false,\r\n        NamaSatuanBaru: '',\r\n        MinBarangBaru: '',\r\n        HargaJualBaru: '',\r\n    }\r\n    componentDidMount() {\r\n        const { idUpdateBarang } = this.props\r\n        if (idUpdateBarang !== null) {\r\n            this.props.get_BarangDetail(idUpdateBarang)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idUpdateBarang !== prevProps.idUpdateBarang) {\r\n            const { idUpdateBarang } = this.props\r\n            this.props.get_BarangDetail(idUpdateBarang)\r\n            this.props.Load_JenisBarang_List()\r\n        }\r\n        if (this.props.BarangDetail !== prevProps.BarangDetail) {\r\n            const { BarangDetail } = this.props\r\n            this.props.Load_JenisBarang_List()\r\n            if (BarangDetail) {\r\n                const satuanjual = []\r\n                BarangDetail.SatuanJual.forEach(obj => {\r\n                    const datasatuanjual = { ...obj, ...{ isEditAble: false } }\r\n                    satuanjual.push(datasatuanjual)\r\n                })\r\n                // console.log('satuanjual', satuanjual)\r\n                this.setState({\r\n                    Barcode: BarangDetail.Barcode,\r\n                    Name: BarangDetail.Name,\r\n                    Jenis: BarangDetail.Jenis,\r\n                    Stok: BarangDetail.Stok,\r\n                    isDecimal: BarangDetail.isDecimal,\r\n                    HargaModal: BarangDetail.HargaModal,\r\n                    HargaJual: BarangDetail.HargaJual,\r\n                    SatuanJual: satuanjual,\r\n                    Ket: BarangDetail.Ket,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User, idUpdateBarang } = this.props\r\n        const SatuanJual = this.state.SatuanJual\r\n        const updatedata = {\r\n            Barcode: this.state.Barcode,\r\n            Name: this.state.Name,\r\n            Jenis: this.state.Jenis,\r\n            Stok: this.state.Stok,\r\n            isDecimal: this.state.isDecimal,\r\n            HargaModal: this.state.HargaModal,\r\n            HargaJual: this.state.HargaJual,\r\n            SatuanJual: this.state.SatuanJual,\r\n            Ket: this.state.Ket,\r\n            BarangPic: this.state.BarangPic,\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        // console.log('updatedata', updatedata)\r\n        try {\r\n            if (\r\n                (SatuanJual[SatuanJual.length - 1].NamaSatuan)\r\n                && (SatuanJual[SatuanJual.length - 1].MinBarang > 0)\r\n                && (SatuanJual[SatuanJual.length - 1].HargaJual > 0)\r\n            ) {\r\n                this.props.Update_Barang(idUpdateBarang, updatedata, authdata)\r\n            } else {\r\n                console.log(SatuanJual[SatuanJual.length - 1].NamaSatuan)\r\n                this.props.Create_Warning_Messages(null, 'mohon lengkapi proses penambahan SatuanJual terlebih dahulu')\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_barang_satuan', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_barang_satuan', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_barang_satuan', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    AddSatuanJual() {\r\n        const SatuanJual = this.state.SatuanJual\r\n        if (SatuanJual[SatuanJual.length - 1].NamaSatuan) {\r\n            const satuanbaru = { NamaSatuan: '', MinBarang: 1, HargaJual: 0, isEditAble: false }\r\n            SatuanJual.push(satuanbaru)\r\n            this.setState({ SatuanJual: SatuanJual })\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon lengkapi proses penambahan SatuanJual terlebih dahulu')\r\n        }\r\n    }\r\n    EditRow(index) {\r\n        if (this.state.isEditingOn === false) {\r\n            const { SatuanJual } = this.state\r\n            SatuanJual[index].isEditAble = true\r\n            this.setState({ NamaSatuanBaru: SatuanJual[index].NamaSatuan })\r\n            this.setState({ MinBarangBaru: SatuanJual[index].MinBarang })\r\n            this.setState({ HargaJualBaru: SatuanJual[index].HargaJual })\r\n            this.setState({ isEditingOn: true })\r\n            this.setState({ SatuanJual: SatuanJual })\r\n            // console.log('EditRow', this.state)\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    onEditChange = e => this.setState({ [[e.target.name]]: e.target.value })\r\n    EditingDone(index) {\r\n        const { SatuanJual, NamaSatuanBaru, MinBarangBaru, HargaJualBaru } = this.state\r\n        if (!NamaSatuanBaru || MinBarangBaru < 1 || HargaJualBaru < 1) {\r\n            this.props.Create_Warning_Messages(null, 'input salah, tidak bisa kosong atau kurang dari samadengan 0')\r\n        } else {\r\n            SatuanJual[index].isEditAble = false\r\n            SatuanJual[index].NamaSatuan = NamaSatuanBaru\r\n            SatuanJual[index].MinBarang = MinBarangBaru\r\n            SatuanJual[index].HargaJual = HargaJualBaru\r\n            this.setState({ SatuanJual: SatuanJual })\r\n            this.setState({ NamaSatuanBaru: '' })\r\n            this.setState({ MinBarangBaru: 0 })\r\n            this.setState({ HargaJualBaru: 0 })\r\n            this.setState({ isEditingOn: false })\r\n        }\r\n    }\r\n    Editingcancel(index) {\r\n        const { SatuanJual } = this.state\r\n        SatuanJual[index].isEditAble = false\r\n        this.setState({ SatuanJual: SatuanJual })\r\n        this.setState({ NamaSatuanBaru: '' })\r\n        this.setState({ MinBarangBaru: 0 })\r\n        this.setState({ HargaJualBaru: 0 })\r\n        this.setState({ isEditingOn: false })\r\n    }\r\n    CancelBarang(index) {\r\n        if (this.state.isEditingOn === false) {\r\n            const SatuanJual = this.state.SatuanJual\r\n            SatuanJual.splice(index, 1)\r\n            this.setState({ SatuanJual: SatuanJual })\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'mohon selesaikan proses editing terlebih dahulu')\r\n        }\r\n    }\r\n    render() {\r\n        // console.log('prop', this.props)\r\n        const theme = this.props.theme\r\n        const User = this.props.User\r\n        const BarangDetail = this.props.BarangDetail\r\n        const options = this.props.JenisBarangList\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const {\r\n            Barcode,\r\n            Name,\r\n            Jenis,\r\n            Stok,\r\n            isDecimal,\r\n            HargaModal,\r\n            HargaJual,\r\n            SatuanJual,\r\n            Ket,\r\n            NamaSatuanBaru,\r\n            MinBarangBaru,\r\n            HargaJualBaru,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                {BarangDetail ?\r\n                    <Fragment>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <TextField style={{ ...st_textfield, ...theme.customTheme.readonlytextfield }} variant='outlined' disabled type='text' label='Barcode' name='Barcode' value={Barcode} required />\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Name' name='Name' value={Name} required />\r\n                            <FormControl style={st_textfield} variant=\"filled\" required >\r\n                                <InputLabel shrink >Jenis</InputLabel>\r\n                                <Select native onChange={this.Form_OnChange} label=\"Jenis\" name='Jenis' value={Jenis} labelWidth={100} >\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    {options.map((option, index) =>\r\n                                        <option key={index} value={option.NamaJenisBarang}>{option.NamaJenisBarang}</option>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField style={{ ...st_textfield, ...theme.customTheme.readonlytextfield }} onChange={this.Form_OnChange} variant='outlined' disabled={User.isSuperUser ? false : true} type='number' label='Stok' name='Stok' value={Stok} />\r\n                            {User.isSuperUser ?\r\n                                <FormHelperText style={{ color: 'orange' }}> <WarningRoundedIcon fontSize=\"small\" />Sangat Tidak Disarankan, Silakan Update Melalu Menu <a href='/blog/preview/kasirqu/transaksi/belanja'>Belanja</a>. karena tidak akan terdata di report bulanan</FormHelperText>\r\n                                : null}\r\n                            <label>Apakah Bisa Melakukan Transaksi Satuan Desimal?</label><br />\r\n                            <div className='switch'>\r\n                                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isDecimal' checked={isDecimal} /><span></span><br />\r\n                            </div><br />\r\n                            <FormHelperText >Jika iya maka transaksi bisa dalam bentuk 0.xxx (koma)</FormHelperText>\r\n                            <TextField style={{ ...st_textfield, ...theme.customTheme.readonlytextfield }} onChange={this.Form_OnChange} variant='outlined' disabled={User.isSuperUser ? false : true} type='number' label='HargaModal' name='HargaModal' value={HargaModal} />\r\n                            {User.isSuperUser ?\r\n                                <FormHelperText style={{ color: 'orange' }}> <WarningRoundedIcon fontSize=\"small\" />Sangat Tidak Disarankan, Silakan Update Melalu Menu <a href='/blog/preview/kasirqu/transaksi/belanja'>Belanja</a>. karena tidak akan terdata di report bulanan</FormHelperText>\r\n                                : null}\r\n                            <TextField style={{ ...st_textfield, ...theme.customTheme.readonlytextfield }} onChange={this.Form_OnChange} variant='outlined' disabled={User.isSuperUser ? false : true} type='number' label='HargaJual' name='HargaJual' value={HargaJual} />\r\n                            {User.isSuperUser ?\r\n                                <FormHelperText style={{ color: 'orange' }}> <WarningRoundedIcon fontSize=\"small\" />Sangat Tidak Disarankan, Silakan Update Melalu Menu <a href='/blog/preview/kasirqu/transaksi/belanja'>Belanja</a>. karena tidak akan terdata di report bulanan</FormHelperText>\r\n                                : null}\r\n                            <hr />\r\n                            {SatuanJual.length >= 1 ?\r\n                                <Fragment>\r\n                                    <Table id='tabel_barang_satuan'>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" >Edit</TableCell>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" >Delete</TableCell>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(2)}>No</TableCell>\r\n                                                <TableCell style={{ width: '70%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Nama Satuan</TableCell>\r\n                                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Jumlah Beli Minimum</TableCell>\r\n                                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Jual Satuan&nbsp;(Rp)</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {SatuanJual.map((item, index) => (\r\n                                                <TableRow hover={true} key={index}>\r\n                                                    <TableCell align=\"center\">\r\n                                                        {index === 0 ?\r\n                                                            <IconButton onClick={() => this.AddSatuanJual()}>\r\n                                                                <AddBoxIcon color='primary' />\r\n                                                            </IconButton>\r\n                                                            :\r\n                                                            (item.isEditAble ?\r\n                                                                <Fragment>\r\n                                                                    <IconButton onClick={() => this.EditingDone(index)}>\r\n                                                                        <DoneIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton onClick={() => this.Editingcancel(index)}>\r\n                                                                        <RevertIcon />\r\n                                                                    </IconButton>\r\n                                                                </Fragment>\r\n                                                                :\r\n                                                                <Fragment>\r\n                                                                    <IconButton onClick={() => this.EditRow(index)}>\r\n                                                                        <EditIcon />\r\n                                                                    </IconButton>\r\n                                                                </Fragment>\r\n                                                            )}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        {index === 0 ?\r\n                                                            <IconButton onClick={() => this.AddSatuanJual()}>\r\n                                                                <AddBoxIcon color='primary' />\r\n                                                            </IconButton> :\r\n                                                            <IconButton onClick={() => this.CancelBarang(index)}>\r\n                                                                <DeleteForeverIcon />\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {item.isEditAble ?\r\n                                                            <TextField\r\n                                                                onChange={this.onEditChange}\r\n                                                                value={NamaSatuanBaru}\r\n                                                                name='NamaSatuanBaru'\r\n                                                                type='text'\r\n                                                            >\r\n                                                            </TextField>\r\n                                                            : item.NamaSatuan\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        {item.isEditAble ?\r\n                                                            <TextField\r\n                                                                onChange={this.onEditChange}\r\n                                                                value={MinBarangBaru}\r\n                                                                name='MinBarangBaru'\r\n                                                                type='number'\r\n                                                            >\r\n                                                            </TextField>\r\n                                                            : item.MinBarang\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {item.isEditAble ?\r\n                                                            <TextField\r\n                                                                onChange={this.onEditChange}\r\n                                                                value={HargaJualBaru}\r\n                                                                name='HargaJualBaru'\r\n                                                                type='number'\r\n                                                            >\r\n                                                            </TextField>\r\n                                                            :\r\n                                                            // item.HargaJual\r\n                                                            this.ConverNumberToMoneyFormat(item.HargaJual)\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                    <hr />\r\n                                </Fragment>\r\n                                : null}\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keterangan' name='Ket' value={Ket ? Ket : ''} />\r\n                            <label>Barang Profile:</label><br />\r\n                            <input type='file' accept='image/*' onChange={this.File_OnChange} name='BarangPic' /><br />\r\n                            <hr />\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' disabled={this.state.isEditingOn ? true : false} >Update</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    idUpdateBarang: state.KasirQu_Barang.idUpdateBarang,\r\n    BarangDetail: state.KasirQu_Barang.BarangDetail,\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_BarangDetail, Load_JenisBarang_List, Create_Warning_Messages, Update_Barang })(withTheme(BarangUpdate))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Barang_List, Load_Barang_List_Base_On_Jenis, get_BarangId_Detail, get_BarangId_Update, Delete_a_Barang } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport GenericModals from '../GenericModals'\r\nimport BarangDetail from './Barang.BarangDetail'\r\nimport BarangUpdate from './Barang.BarangUpdate'\r\n\r\nclass BarangList extends React.Component {\r\n    componentDidMount() {\r\n        if (this.props.LoadBarangListBaseOnJenis) {\r\n            this.props.Load_Barang_List_Base_On_Jenis(this.props.LoadBarangListBaseOnJenis)\r\n        } else {\r\n            this.props.Load_Barang_List()\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_barang', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_barang', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_barang', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    onClick_get_BarangId_Update(BarangID) {\r\n        this.props.get_BarangId_Update(BarangID)\r\n    }\r\n    onClick_get_Delete_a_Barang(BarangID) {\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Delete_a_Barang(BarangID, authdata)\r\n    }\r\n    render() {\r\n        const data = this.props.BarangList\r\n        const { User, idDetailBarang } = this.props\r\n        const DeleteButton = () => {\r\n            return (\r\n                <Fragment>\r\n                    <Button\r\n                        style={{ ...MUI_FullWidth, MUI_VerticalMargin }}\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        onClick={() => this.onClick_get_Delete_a_Barang(idDetailBarang)}\r\n                    >\r\n                        Delete\r\n                        </Button>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {data ?\r\n                    <Table stickyHeader id='tabel_barang'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                <TableCell style={{ width: '35%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Jenis Barang</TableCell>\r\n                                <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Stok Barang</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Jual&nbsp;(Rp)</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Modal&nbsp;(Rp)</TableCell>\r\n                                <TableCell style={{ width: '5%' }} align='center'>Detail</TableCell>\r\n                                {User ? ((User.isSuperUser || User.isAdmin) ?\r\n                                    <Fragment>\r\n                                        <TableCell style={{ width: '5%' }} align='center'>Edit</TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align='center'>Delete</TableCell>\r\n                                    </Fragment>\r\n                                    : null)\r\n                                    : null\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map((item, index) => (\r\n                                <TableRow hover key={index + 1}>\r\n                                    <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                    <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                    <TableCell align=\"left\">{item.Name}</TableCell>\r\n                                    <TableCell align=\"left\">{item.Jenis}</TableCell>\r\n                                    <TableCell align=\"right\">{item.Stok}</TableCell>\r\n                                    <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaJual)}</TableCell>\r\n                                    <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaModal)}</TableCell>\r\n                                    <TableCell align='center'>\r\n                                        <GenericModals\r\n                                            size='s'\r\n                                            header='Jenis Barang Detail'\r\n                                            body={<BarangDetail />}\r\n                                            Buttoncolor='primary'\r\n                                            ButtononClickeven={() => this.onClick_get_BarangId_Detail(item._id)}\r\n                                            Buttonlabel={'Detail'}\r\n                                        />\r\n                                    </TableCell>\r\n                                    {User ? ((User.isSuperUser || User.isAdmin) ?\r\n                                        <Fragment>\r\n                                            <TableCell align='center'>\r\n                                                <GenericModals\r\n                                                    size='m'\r\n                                                    header='Update Jenis Barang'\r\n                                                    body={<BarangUpdate />}\r\n                                                    Buttoncolor='inherit'\r\n                                                    ButtononClickeven={() => this.onClick_get_BarangId_Update(item._id)}\r\n                                                    Buttonlabel={'Edit'}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align='center'>\r\n                                                <GenericModals\r\n                                                    size='s'\r\n                                                    header='Delete Jenis Barang'\r\n                                                    body={<BarangDetail />}\r\n                                                    footer={<DeleteButton />}\r\n                                                    Buttoncolor='secondary'\r\n                                                    ButtononClickeven={() => this.onClick_get_BarangId_Detail(item._id)}\r\n                                                    Buttonlabel={'Delete'}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </Fragment>\r\n                                        : null)\r\n                                        : null\r\n                                    }\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    BarangList: state.KasirQu_Barang.BarangList,\r\n    idDetailBarang: state.KasirQu_Barang.idDetailBarang,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Barang_List, Load_Barang_List_Base_On_Jenis, get_BarangId_Detail, get_BarangId_Update, Delete_a_Barang })(BarangList)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_JenisBarangDetail, Update_JenisBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, Button } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\n\r\n////// TODO ADD FORM NAMEING CEK \r\n\r\n\r\nclass JenisBarangUpdate extends React.Component {\r\n    state = {\r\n        NamaJenisBarang: '',\r\n        Kepemilikan: '',\r\n        Ket: '',\r\n    }\r\n    componentDidMount() {\r\n        const { idUpdateJenisBarang } = this.props\r\n        if (idUpdateJenisBarang !== null) {\r\n            this.props.get_JenisBarangDetail(idUpdateJenisBarang)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idUpdateJenisBarang !== prevProps.idUpdateJenisBarang) {\r\n            const { idUpdateJenisBarang } = this.props\r\n            this.props.get_JenisBarangDetail(idUpdateJenisBarang)\r\n        }\r\n        if (this.props.JenisBarangDetail !== prevProps.JenisBarangDetail) {\r\n            const { JenisBarangDetail } = this.props\r\n            if (JenisBarangDetail) {\r\n                this.setState({\r\n                    NamaJenisBarang: JenisBarangDetail.NamaJenisBarang,\r\n                    Kepemilikan: JenisBarangDetail.Kepemilikan,\r\n                    Ket: JenisBarangDetail.Ket,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User, idUpdateJenisBarang } = this.props\r\n        const updatedata = {\r\n            // NamaJenisBarang: this.state.NamaJenisBarang,\r\n            Kepemilikan: this.state.Kepemilikan,\r\n            Ket: this.state.Ket,\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Update_JenisBarang(idUpdateJenisBarang, updatedata, authdata)\r\n    }\r\n    render() {\r\n        const JenisBarangDetail = this.props.JenisBarangDetail\r\n        const theme = this.props.theme\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const {\r\n            NamaJenisBarang,\r\n            Kepemilikan,\r\n            Ket,\r\n        } = this.state\r\n        const choices = ['pribadi', 'nonpribadi']\r\n        return (\r\n            <Fragment>\r\n                {JenisBarangDetail ?\r\n                    <Fragment>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <TextField style={{ ...st_textfield, ...theme.customTheme.readonlytextfield }} variant='outlined' disabled type='text' label='NamaJenisBarang' name='NamaJenisBarang' value={NamaJenisBarang} required />\r\n                            <FormControl style={st_textfield} variant=\"filled\" required >\r\n                                <InputLabel shrink >Kepemilikan</InputLabel>\r\n                                <Select native onChange={this.Form_OnChange} label=\"Kepemilikan\" name='Kepemilikan' value={Kepemilikan} labelWidth={100} >\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    {choices.map((item, index) =>\r\n                                        <option key={index} value={item}>{item}</option>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Ket' name='Ket' value={Ket} />\r\n                            <hr />\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Update</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    idUpdateJenisBarang: state.KasirQu_JenisBarang.idUpdateJenisBarang,\r\n    JenisBarangDetail: state.KasirQu_JenisBarang.JenisBarangDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_JenisBarangDetail, Update_JenisBarang })(withTheme(JenisBarangUpdate))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_JenisBarang_List, get_JenisBarangId_Detail, get_JenisBarangId_Update, Delete_a_JenisBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport GenericModals from '../GenericModals'\r\nimport JenisBarangDetail from './Barang.JenisBarangDetail'\r\nimport ListJenisBarang from './Barang.BarangList'\r\nimport JenisBarangUpdate from './Barang.JenisBarangUpdate'\r\n\r\nclass KatagoriBarangList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_JenisBarang_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_jenisbarang', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_jenisbarang', ColumnNumb)\r\n    }\r\n    onClick_get_JenisBarangId_Detail(JenisBarangID) {\r\n        this.props.get_JenisBarangId_Detail(JenisBarangID)\r\n    }\r\n    onClick_get_JenisBarangId_Update(JenisBarangID) {\r\n        this.props.get_JenisBarangId_Update(JenisBarangID)\r\n    }\r\n    onClick_get_Delete_a_JenisBarang(JenisBarangID) {\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Delete_a_JenisBarang(JenisBarangID, authdata)\r\n    }\r\n    render() {\r\n        const data = this.props.JenisBarangList\r\n        const { User, idDetailJenisBarang } = this.props\r\n        const DeleteButton = () => {\r\n            return (\r\n                <Fragment>\r\n                    <Button\r\n                        style={{ ...MUI_FullWidth, MUI_VerticalMargin }}\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        onClick={() => this.onClick_get_Delete_a_JenisBarang(idDetailJenisBarang)}\r\n                    >\r\n                        Delete\r\n                        </Button>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {data ?\r\n                    <Table stickyHeader id='tabel_jenisbarang'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{ width: '5%' }} align='center' onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                <TableCell style={{ width: '45%' }} align='center' onClick={() => this.ButtonShortSTR(1)}>Nama Jenis Barang</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align='center' onClick={() => this.ButtonShortSTR(2)}>Tipe Kepemilikan</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align='center'>Detail</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align='center'>List</TableCell>\r\n                                {User ? ((User.isSuperUser || User.isAdmin) ?\r\n                                    <Fragment>\r\n                                        <TableCell style={{ width: '10%' }} align='center'>Edit</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align='center'>Delete</TableCell>\r\n                                    </Fragment>\r\n                                    : null)\r\n                                    : null\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map((item, index) => (\r\n                                <TableRow hover key={index + 1}>\r\n                                    <TableCell align='center'>{index + 1}</TableCell>\r\n                                    <TableCell align='left'>{item.NamaJenisBarang}</TableCell>\r\n                                    <TableCell align='left'>{item.Kepemilikan}</TableCell>\r\n                                    <TableCell align='center'>\r\n                                        <GenericModals\r\n                                            size='s'\r\n                                            header='Jenis Barang Detail'\r\n                                            body={<JenisBarangDetail />}\r\n                                            Buttoncolor='primary'\r\n                                            ButtononClickeven={() => this.onClick_get_JenisBarangId_Detail(item._id)}\r\n                                            Buttonlabel={'Detail'}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align='center'>\r\n                                        <GenericModals\r\n                                            size='xl'\r\n                                            header='List dari Jenis Barang'\r\n                                            body={<ListJenisBarang LoadBarangListBaseOnJenis={item._id} />}\r\n                                            Buttoncolor='default'\r\n                                            ButtononClickeven={() => null}\r\n                                            Buttonlabel={'List'}\r\n                                        />\r\n                                    </TableCell>\r\n                                    {User ? ((User.isSuperUser || User.isAdmin) ?\r\n                                        <Fragment>\r\n                                            <TableCell align='center'>\r\n                                                <GenericModals\r\n                                                    size='m'\r\n                                                    header='Update Jenis Barang'\r\n                                                    body={<JenisBarangUpdate />}\r\n                                                    Buttoncolor='inherit'\r\n                                                    ButtononClickeven={() => this.onClick_get_JenisBarangId_Update(item._id)}\r\n                                                    Buttonlabel={'Edit'}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align='center'>\r\n                                                <GenericModals\r\n                                                    size='s'\r\n                                                    header='Delete Jenis Barang'\r\n                                                    massagestype='warning'\r\n                                                    massages='Jika Jenis Barang Dihapus Semua Barang Terkait Akan Ikut Terhapu'\r\n                                                    body={<JenisBarangDetail />}\r\n                                                    footer={<DeleteButton />}\r\n                                                    Buttoncolor='secondary'\r\n                                                    ButtononClickeven={() => this.onClick_get_JenisBarangId_Detail(item._id)}\r\n                                                    Buttonlabel={'Delete'}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </Fragment>\r\n                                        : null)\r\n                                        : null\r\n                                    }\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n    idDetailJenisBarang: state.KasirQu_JenisBarang.idDetailJenisBarang,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_JenisBarang_List, get_JenisBarangId_Detail, get_JenisBarangId_Update, Delete_a_JenisBarang })(KatagoriBarangList)","import React, { Fragment } from 'react'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport GenericModals from '../../Containers/GenericModals'\r\nimport AddJenisBarang from '../../Containers/Barang/Barang.AddJenisBarang'\r\nimport KatagoriBarangList from '../../Containers/Barang/Barang.KatagoriBarangList'\r\n\r\nconst KatagoriBarang = () => {\r\n    const breadcrumbs = [{ name: 'Barang', link: 'barang' }, { name: 'Katagori Barang', link: 'barang/katagoribarang' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <GenericModals\r\n                size='m'\r\n                header='Tambah Jenis Barang'\r\n                body={<AddJenisBarang />}\r\n                Buttonstyle={{ ...MUI_FullWidth, ...MUI_VerticalMargin }}\r\n                Buttonvariant='contained'\r\n                Buttonsize='large'\r\n                Buttoncolor='primary'\r\n                ButtononClickeven={() => null}\r\n                Buttonlabel={'Tambah Jenis Barang'}\r\n            />\r\n            <hr />\r\n            <KatagoriBarangList />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default KatagoriBarang","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_JenisBarang_List, Import_KatagoriBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\nimport { Create_Error_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, FormGroup, FormControlLabel, Checkbox, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass ReviewKatagoriBarangImport extends React.Component {\r\n    state = {\r\n        FileData: [],\r\n        Confirm: false,\r\n        isProblemInData: false,\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_JenisBarang_List()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.KatagoriBarangImportFile !== prevProps.KatagoriBarangImportFile) {\r\n            const { KatagoriBarangImportFile } = this.props\r\n            const FirstSheet = Object.values(KatagoriBarangImportFile)[0]\r\n            // console.log('FirstSheet', FirstSheet)\r\n            // this.setState({ FileData: KatagoriBarangImportFile })\r\n            this.setState({ FileData: FirstSheet ? JSON.parse(FirstSheet) : [] })\r\n        }\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { isProblemInData, FileData } = this.state\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        if (isProblemInData === true) {\r\n            this.props.Create_Error_Messages(null, 'ada kesalahan pada data yang dimasukkan')\r\n        } else {\r\n            this.props.Import_KatagoriBarang(FileData, authdata)\r\n        }\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n\r\n        const {\r\n            FileData,\r\n            Confirm,\r\n            isProblemInData,\r\n        } = this.state\r\n        ////// for CheckisDataCorrect\r\n        const FirstFileData = FileData[0]\r\n        const FileDataKeys = FirstFileData ? Object.keys(FirstFileData) : null\r\n        ////// for isProblemInDataExist\r\n        const JenisBarangList = this.props.JenisBarangList\r\n        const JenisBarangList_NamaJenisBarang = JenisBarangList.length > 0 ? JenisBarangList.map((item) => item.NamaJenisBarang) : []\r\n        const ListKepemilikan = ['pribadi', 'nonpribadi']\r\n        ////// function\r\n        const CheckisDataCorrect = (Data, DataKeys) => {\r\n            try {\r\n                if (Data.length > 0 && DataKeys.length > 0) {\r\n                    const NamaJenisBarangIndex = DataKeys.findIndex(datakeys => datakeys === 'NamaJenisBarang')\r\n                    const KepemilikanIndex = DataKeys.findIndex(datakeys => datakeys === 'Kepemilikan')\r\n                    if (NamaJenisBarangIndex < 0 || KepemilikanIndex < 0) {\r\n                        return false\r\n                    }\r\n                    else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n        const isDataAlreadyExist = (newData, ListofData) => {\r\n            try {\r\n                if (newData) {\r\n                    const newDataIndex = ListofData.findIndex(listofdata => listofdata === newData.toString().toLocaleLowerCase())\r\n                    if (newDataIndex >= 0) {\r\n                        // if (this.state.isProblemInData === false) {\r\n                        //     console.log('maslaah')\r\n                        //     this.setState({ isProblemInData: true })\r\n                        // }\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n        const isDataWrong = (newData, ListOfCorrectData) => {\r\n            try {\r\n                if (newData) {\r\n                    const newDataIndex = ListOfCorrectData.findIndex(listofcorrectdata => listofcorrectdata === newData)\r\n                    if (newDataIndex >= 0) {\r\n                        return false\r\n                    } else {\r\n                        // if (this.state.isProblemInData === false) {\r\n                        //     this.setState({ isProblemInData: true })\r\n                        // }\r\n                        return true\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n        const isDataCorrect = CheckisDataCorrect(FileData, FileDataKeys)\r\n        return (\r\n            <Fragment>\r\n                {isDataCorrect ? (\r\n                    <Fragment>\r\n                        <Table id='tabel_review_import_katagoribarang'>\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">No</TableCell>\r\n                                    {FileDataKeys.map((item) => (\r\n                                        <TableCell align=\"center\" key={item}>{item}</TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {FileData.map((item, index) => (\r\n                                    <TableRow hover key={index}\r\n                                        style={\r\n                                            (isDataAlreadyExist(item.NamaJenisBarang ? item.NamaJenisBarang.toString().toLocaleLowerCase() : null, JenisBarangList_NamaJenisBarang)\r\n                                                || isDataWrong(item.Kepemilikan ? item.Kepemilikan.toString().toLocaleLowerCase() : null, ListKepemilikan)\r\n                                            ) ? { backgroundColor: 'red' } : null\r\n                                        }\r\n                                    >\r\n                                        <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                        {Object.keys(item).map((itemitem, indexindex) => (\r\n                                            <TableCell align=\"center\" key={`${index}${indexindex}`} >{item[itemitem]}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox color='primary' onChange={this.CheckBox_OnChange} name=\"Confirm\" value={Confirm} />}\r\n                                    label=\"Saya Sudah Yakin Tidak Ada yang Salah Pada Data diatas\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary'\r\n                                disabled={\r\n                                    ((isDataCorrect === true)\r\n                                        && (Confirm === true)\r\n                                        && (isProblemInData === false)\r\n                                    ) ? false : true}\r\n                            >\r\n                                Cek\r\n                            </Button>\r\n                        </form>\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    KatagoriBarangImportFile: state.KasirQu_JenisBarang.KatagoriBarangImportFile,\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n})\r\nexport default connect(mapStateToProps, { Load_JenisBarang_List, Import_KatagoriBarang, Create_Error_Messages })(ReviewKatagoriBarangImport)","import React, { Fragment } from 'react'\r\n\r\nimport XLSX from 'xlsx'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport ReviewKatagoriBarangImport from './Barang.Review.KatagoriBarangImport'\r\n\r\nimport { Cek_Import_KatagoriBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\n// import { Button } from '@material-ui/core'\r\n\r\nimport GenericModals from '../GenericModals'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nclass ImportKatagoriBarang extends React.Component {\r\n    state = {\r\n        MaxFileSize: 1000000 * 50,\r\n        // UploadFile: null,\r\n        ExcelData: null,\r\n    }\r\n    excelToJson(reader) {\r\n        const fileData = reader.result\r\n        const wb = XLSX.read(fileData, { type: 'binary' })\r\n        const data = {}\r\n        wb.SheetNames.forEach(function (sheetName) {\r\n            const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\r\n            const rowString = JSON.stringify(rowObj)\r\n            data[sheetName] = rowString\r\n        })\r\n        this.setState({ ExcelData: data })\r\n        // console.log('ExcelData', this.state.ExcelData)\r\n    }\r\n\r\n    loadFileXLSX(files) {\r\n        // console.log('input',input.files[0])\r\n        // console.log('files', files)\r\n        if (files.length > 0) {\r\n            try {\r\n                // const input = event.target\r\n                const reader = new FileReader()\r\n                // console.log('reader',reader)\r\n                reader.onload = this.excelToJson.bind(this, reader)\r\n                // reader.readAsBinaryString(input.files[0])\r\n                reader.readAsBinaryString(files[0])\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        // const { UploadFile } = this.state\r\n        const { ExcelData } = this.state\r\n        this.props.Cek_Import_KatagoriBarang(ExcelData)\r\n    }\r\n\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n\r\n        const {\r\n            MaxFileSize,\r\n            // UploadFile,\r\n            ExcelData,\r\n        } = this.state\r\n        // const UploadFileSize = UploadFile ? UploadFile.size : 0\r\n        // const UploadFileName = UploadFile ? UploadFile.name : null\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <DropzoneArea\r\n                        filesLimit={1}\r\n                        showPreviewsInDropzone={true}\r\n                        showFileNames={true}\r\n                        // showPreviews={true}\r\n                        // showFileNamesInPreview={true}\r\n                        maxFileSize={MaxFileSize}\r\n                        acceptedFiles={['.csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel']}\r\n                        dropzoneText={\"Masukkan atau Pilih File excel/sejenisnya untuk Import Jenis Barang\"}\r\n                        // onChange={(files) => console.log('Files:', files)}\r\n                        // onChange={(files) => this.setState({ UploadFile: files[0] })}\r\n                        // onChange={this.loadFileXLSX.bind(this)}\r\n                        onChange={(files) => this.loadFileXLSX(files)}\r\n                    // onChange={this.loadFileXLSX}\r\n                    // onChange={this.Form_OnChange}\r\n                    />\r\n                    {/* <input type=\"file\" onChange={this.loadFileXLSX.bind(this)} value={this.state.UploadFile} /> */}\r\n                    <GenericModals\r\n                        size='xl'\r\n                        uncontrollsize={true}\r\n                        header='Review Import Katagori Barang'\r\n                        body={<ReviewKatagoriBarangImport />}\r\n                        Buttontype='submit'\r\n                        Buttonstyle={st_textfield}\r\n                        Buttonsize='large'\r\n                        Buttonvariant='contained'\r\n                        Buttoncolor='primary'\r\n                        // Buttondisabled={((UploadFileName) && (UploadFileSize < MaxFileSize)) ? false : true}\r\n                        Buttondisabled={ExcelData ? false : true}\r\n                        ButtononClickeven={() => null}\r\n                        Buttonlabel={'Cek'}\r\n                    />\r\n                    {/* <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' disabled={((UploadFileName) && (UploadFileSize < MaxFileSize)) ? false : true} >Cek</Button> */}\r\n                </form>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { Cek_Import_KatagoriBarang })(ImportKatagoriBarang)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport KatagoriBarangImport from '../../../Containers/Barang/Barang.KatagoriBarangImport'\r\nimport FAQ from '../../../Containers/FAQ'\r\n\r\nconst ImportKatagoriBarang = () => {\r\n    const ListFAQ = [\r\n        {\r\n            AccordionSummaryTypography: 'File Apa Saja yang Bisa Digunakan?',\r\n            AccordionDetailsTypography: 'Semua file excel/spreadsheet',\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa \"Data Tidak Ditemukan\" pada Review?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna data yang anda masukkan tidak memiliki header dengan ketentuan yang benar minimal header berisi: <br />\r\n                     - NamaJenisBarang (Penulisan Harus Sama) <br />\r\n                      - Kepemilikan (Penulisan Harus Sama)\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagai Mana Cara Membuat Excel yang Benar Untuk Import Data?',\r\n            AccordionDetails: (\r\n                <Fragment>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    NamaJenisBarang\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Kepemilikan\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Ket\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    Jenis Barang 1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    pribadi\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    Jenis Barang 2\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    nonpribadi\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Keternagan Jika ada\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa Ada Warna Merah Di Tabel Review?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna ada kesalahan pada data excel yang dimasukkan.<br />\r\n                     - NamaJenisBarang : tidak boleh sama dengan yang sudah ada <br />\r\n                      - Kepemilikan : hanya bisa diisi dengan \"pribadi\" atau \"nonpribadi\"\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa Saya Mendapat Peringatan Ada kesalahan pada Data?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna ada kesalahan pada data excel yang dimasukkan.<br />\r\n                     - NamaJenisBarang : tidak boleh sama dengan yang sudah ada <br />\r\n                      - Kepemilikan : hanya bisa diisi dengan \"pribadi\" atau \"nonpribadi\"\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagaimana Jika Saya Ingin Mengupdate JenisBarang Melalui Menu ini Bukan Menambah?',\r\n            AccordionDetailsTypography: 'Tidak bisa, menu import Jenis barang tidak bisa digunakan untuk mengupdate JenisBarang, silakan lakukan manual',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Import Kategori Barang\r\n            </Typography>\r\n            <KatagoriBarangImport />\r\n            <FAQ\r\n                title='Keterangan:'\r\n                faqlist={ListFAQ}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ImportKatagoriBarang","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Export_KatagoriBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass KatagoriBarangExport extends React.Component {\r\n    state = {\r\n        ExportJenisBarangList: []\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.ExportJenisBarangList !== prevProps.ExportJenisBarangList) {\r\n            const { ExportJenisBarangList } = this.props\r\n            this.setState({ ExportJenisBarangList: ExportJenisBarangList })\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_export_jenisbarang', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_export_jenisbarang', ColumnNumb)\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const ExportJenisBarangList = this.state.ExportJenisBarangList\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n\r\n        this.props.Export_KatagoriBarang(ExportJenisBarangList, authdata)\r\n    }\r\n    render() {\r\n        const {\r\n            ExportJenisBarangList,\r\n        } = this.state\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const data = ExportJenisBarangList\r\n        return (\r\n            <Fragment>\r\n                {(data && data.length > 0) ?\r\n                    <Fragment>\r\n                        <Table id='tabel_export_jenisbarang'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align='center' onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '45%' }} align='center' onClick={() => this.ButtonShortSTR(1)}>Nama Jenis Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align='center' onClick={() => this.ButtonShortSTR(2)}>Tipe Kepemilikan</TableCell>\r\n                                    {/* <TableCell style={{ width: '30%' }} align='center' onClick={() => this.ButtonShortSTR(3)}>Keterangan</TableCell> */}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data.map((item, index) => (\r\n                                    <TableRow hover key={index + 1}>\r\n                                        <TableCell align='center'>{index + 1}</TableCell>\r\n                                        <TableCell align='left'>{item.NamaJenisBarang}</TableCell>\r\n                                        <TableCell align='left'>{item.Kepemilikan}</TableCell>\r\n                                        {/* <TableCell align='left'>{item.Ket}</TableCell> */}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Export</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    ExportJenisBarangList: state.KasirQu_JenisBarang.ExportJenisBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Export_KatagoriBarang })(KatagoriBarangExport)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_JenisBarang_List, Load_Export_Query_KatagoriBarang } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, Button, Chip } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nclass QueryKatagoriBarang extends React.Component {\r\n    state = {\r\n        isAllData: false,\r\n        Kepemilikan: '',\r\n        JenisBarang: [],\r\n        Ket: ''\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_JenisBarang_List()\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            JenisBarang: this.state.isAllData ? null : this.state.JenisBarang,\r\n            Kepemilikan: this.state.isAllData ? null : this.state.Kepemilikan,\r\n            Ket: this.state.isAllData ? null : this.state.Ket,\r\n        }\r\n\r\n        this.props.Load_Export_Query_KatagoriBarang(data)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const KepemilikanOptions = ['pribadi', 'nonpribadi']\r\n        const JenisBarangOptions = this.props.JenisBarangList\r\n        const {\r\n            isAllData,\r\n            Kepemilikan,\r\n            JenisBarang,\r\n            Ket,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>Cari dari Keseluruhan Data:</label><br />\r\n                    <div className='switch' style={MUI_VerticalMargin}>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n                    </div><br />\r\n                    {isAllData === false ? (\r\n                        <Fragment>\r\n                            <FormControl style={st_textfield} variant=\"filled\">\r\n                                <InputLabel shrink >Kepemilikan</InputLabel>\r\n                                <Select native onChange={this.Form_OnChange} label=\"Kepemilikan\" name='Kepemilikan' value={Kepemilikan} labelWidth={100} >\r\n                                    <option value=\"\" > -- select an option -- </option>\r\n                                    {KepemilikanOptions.map((item, index) =>\r\n                                        <option key={index} value={item}>{item}</option>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <Autocomplete\r\n                                multiple\r\n                                value={JenisBarang}\r\n                                onChange={(event, newJenisBarang) => {\r\n                                    this.setState({ JenisBarang: newJenisBarang })\r\n                                }}\r\n\r\n                                options={JenisBarangOptions.sort((a, b) => (a.Kepemilikan > b.Kepemilikan) ? 1 : ((b.Kepemilikan > a.Kepemilikan) ? -1 : 0))}\r\n                                getOptionLabel={option => typeof option === 'string' ? option : option.NamaJenisBarang}\r\n                                groupBy={(option) => option.Kepemilikan}\r\n                                renderTags={(tagValue, getTagProps) =>\r\n                                    tagValue.map((option, index) => (\r\n                                        <Chip\r\n                                            label={option.NamaJenisBarang}\r\n                                            {...getTagProps({ index })}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                style={{ width: '100%' }}\r\n                                renderInput={(params) => (\r\n                                    <TextField {...params} style={st_textfield} name='JenisBarang' label=\"JenisBarang\" variant=\"outlined\" placeholder=\"JenisBarang\" />\r\n                                )}\r\n                            />\r\n\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keteragan' name='Ket' value={Ket} />\r\n                        </Fragment>\r\n                    ) : null}\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_JenisBarang_List, Load_Export_Query_KatagoriBarang })(QueryKatagoriBarang)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport KatagoriBarangExport from '../../../Containers/Barang/Barang.KatagoriBarangExport'\r\nimport QueryKatagoriBarang from '../../../Containers/Barang/Barang.KatagoriBarang.Query'\r\n\r\nconst ExportKatagoriBarang = () => {\r\n    // const numberone = [1, 3, 5, 7, 9]\r\n    // const numbertwo = [1, 2, 3, 4, 5]\r\n    // const samenumber = numberone.filter(num => numbertwo.includes(num)) //\r\n    // const diferentnumber = numberone.filter(num => !numbertwo.includes(num))\r\n    // console.log('samenumber', samenumber)\r\n    // console.log('diferentnumber', diferentnumber)\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Export Kategori Barang\r\n            </Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n\r\n                advancesearch={true}\r\n                accordiondetails={<QueryKatagoriBarang />}\r\n            />\r\n            <KatagoriBarangExport />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExportKatagoriBarang","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\n\r\nimport ImportKatagoriBarang from './SubPage/KategoriBarang.ImportKatagoriBarang'\r\nimport ExportKatagoriBarang from './SubPage/KategoriBarang.ExportKatagoriBarang'\r\n\r\nconst KatagoriBarangImportExport = () => {\r\n    const breadcrumbs = [{ name: 'Barang', link: 'barang' }, { name: 'Kategori Barang ', link: 'barang/katagoribarang' }, { name: 'Import/Export Kategori Barang ', link: 'barang/katagoribarang/importexport' }]\r\n\r\n    const [value, setValue] = React.useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n    const TapData = [\r\n        { taplabel: 'Export Kategori Barang', TapPanel: <ExportKatagoriBarang /> },\r\n        { taplabel: 'Import Kategori Barang', TapPanel: <ImportKatagoriBarang /> },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Paper style={{ marginBottom: '10px' }} >\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                    scrollButtons=\"auto\"\r\n                    centered={TapData.length > 6 ? false : true}\r\n                >\r\n                    {TapData.map((tapdata, index) => (\r\n                        <Tab key={index} label={tapdata.taplabel} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            {value === 0 ? TapData[value].TapPanel : null}\r\n            {value === 1 ? TapData[value].TapPanel : null}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default KatagoriBarangImportExport","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_JenisBarang_List } from '../../../Store/Actions/JenisBarang.Actions'\r\nimport { Add_Barang } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, FormHelperText, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\n\r\n////// TODO ADD FORM BARCODE CEK \r\n////// TODO ADD FORM NAMEING CEK \r\n\r\n\r\nclass AddBarang extends React.Component {\r\n    state = {\r\n        Barcode: '',\r\n        Name: '',\r\n        Jenis: '',\r\n        isDecimal: false,\r\n        Ket: '',\r\n        BarangPic: null,\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_JenisBarang_List()\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User } = this.props\r\n        const data = {\r\n            Barcode: this.state.Barcode,\r\n            Name: this.state.Name,\r\n            Jenis: this.state.Jenis,\r\n            isDecimal: this.state.isDecimal,\r\n            Ket: this.state.Ket,\r\n            BarangPic: this.state.BarangPic,\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Add_Barang(data, authdata)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const options = this.props.JenisBarangList\r\n        const {\r\n            Barcode,\r\n            Name,\r\n            Jenis,\r\n            isDecimal,\r\n            Ket,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Barcode' name='Barcode' value={Barcode} required />\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Nama' name='Name' value={Name} required /><br />\r\n                    <FormControl style={st_textfield} variant=\"filled\" required >\r\n                        <InputLabel shrink >Jenis</InputLabel>\r\n                        <Select native onChange={this.Form_OnChange} label=\"Jenis\" name='Jenis' value={Jenis} labelWidth={100} >\r\n                            <option value=\"\" disabled> -- select an option -- </option>\r\n                            {options.map((option, index) =>\r\n                                <option key={index} value={option.NamaJenisBarang}>{option.NamaJenisBarang}</option>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <label>Apakah Bisa Melakukan Transaksi Satuan Desimal?</label><br />\r\n                    <div className='switch'>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isDecimal' checked={isDecimal} /><span></span><br />\r\n                    </div><br />\r\n                    <FormHelperText >Jika iya maka transaksi bisa dalam bentuk 0.xxx (koma)</FormHelperText>\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keterangan' name='Ket' value={Ket} />\r\n                    <label>Photo Barang:</label><br />\r\n                    <input type='file' accept='image/*' onChange={this.File_OnChange} name='BarangPic' /><br />\r\n                    <hr />\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Tambah Barang</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_JenisBarang_List, Add_Barang })(AddBarang)","import React, { Fragment } from 'react'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport GenericModals from '../../Containers/GenericModals'\r\nimport AddBarang from '../../Containers/Barang/Barang.AddBarang'\r\nimport { TableSearching } from '../../Containers/Searching'\r\nimport BarangList from '../../Containers/Barang/Barang.BarangList'\r\n\r\nconst KonfigurasiBarang = () => {\r\n    const breadcrumbs = [{ name: 'Barang', link: 'barang' }, { name: 'Konfigurasi Barang', link: 'barang/konfigurasibarang' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <GenericModals\r\n                size='m'\r\n                header='Tambah Barang'\r\n                body={<AddBarang />}\r\n                Buttonstyle={{ ...MUI_FullWidth, ...MUI_VerticalMargin }}\r\n                Buttonvariant='contained'\r\n                Buttonsize='large'\r\n                Buttoncolor='primary'\r\n                ButtononClickeven={() => null}\r\n                Buttonlabel={'Tambah Barang'}\r\n            />\r\n            <hr />\r\n            <TableSearching tablename={'tabel_barang'} tdnumber={2} width='xl' label={null} />\r\n            <hr />\r\n            <BarangList />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default KonfigurasiBarang","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_BarangId_Detail, Export_Barang } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { Short_Column_INT, Short_Column_STR,Short_Column_Money } from '../Shorting'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport {ConvertInttoMoney} from '../Formater'\r\nimport GenericModals from '../GenericModals'\r\nimport BarangDetail from './Barang.BarangDetail'\r\n\r\nclass BarangExport extends React.Component {\r\n    state = {\r\n        ExportBarangList: []\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.ExportBarangList !== prevProps.ExportBarangList) {\r\n            const { ExportBarangList } = this.props\r\n            this.setState({ ExportBarangList: ExportBarangList })\r\n        }\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_export_barang', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_export_barang', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('tabel_export_barang', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const ExportBarangList = this.state.ExportBarangList\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n\r\n        this.props.Export_Barang(ExportBarangList, authdata)\r\n    }\r\n    render() {\r\n        const {\r\n            ExportBarangList,\r\n        } = this.state\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const data = ExportBarangList\r\n        return (\r\n            <Fragment>\r\n                {(data && data.length > 0) ?\r\n                    <Fragment>\r\n                        <Table id='tabel_export_barang'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                    <TableCell style={{ width: '45%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Jenis Barang</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Stok Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Harga Jual&nbsp;(Rp)</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Modal&nbsp;(Rp)</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align='center'>Detail</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data.map((item, index) => (\r\n                                    <TableRow hover key={index + 1}>\r\n                                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                        <TableCell align=\"left\">{item.Name}</TableCell>\r\n                                        <TableCell align=\"left\">{item.Jenis}</TableCell>\r\n                                        <TableCell align=\"right\">{item.Stok}</TableCell>\r\n                                        <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaJual)}</TableCell>\r\n                                        <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaModal)}</TableCell>\r\n                                        <TableCell align='center'>\r\n                                            <GenericModals\r\n                                                size='s'\r\n                                                header='Jenis Barang Detail'\r\n                                                body={<BarangDetail />}\r\n                                                Buttoncolor='primary'\r\n                                                ButtononClickeven={() => this.onClick_get_BarangId_Detail(item._id)}\r\n                                                Buttonlabel={'Detail'}\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Export</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    ExportBarangList: state.KasirQu_Barang.ExportBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_BarangId_Detail, Export_Barang })(BarangExport)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Barang_List, Load_Export_Query_Barang } from '../../../Store/Actions/Barang.Actions'\r\nimport { Load_JenisBarang_List } from '../../../Store/Actions/JenisBarang.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, Button, Chip, InputAdornment } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HorizontalHalfMargin, MUI_HalfWidth } from '../../../MUI_theme'\r\n\r\nclass QueryBarang extends React.Component {\r\n    state = {\r\n        isAllData: false,\r\n        NamaBarang: [],\r\n        JenisBarang: [],\r\n        Kepemilikan: '',\r\n        StokMin: '',\r\n        StokMax: '',\r\n        HargaModalMin: '',\r\n        HargaModalMax: '',\r\n        HargaJualMin: '',\r\n        HargaJualMax: '',\r\n        Ket: ''\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_Barang_List()\r\n        this.props.Load_JenisBarang_List()\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            NamaBarang: this.state.isAllData ? null : this.state.NamaBarang,\r\n            JenisBarang: this.state.isAllData ? null : this.state.JenisBarang,\r\n            Kepemilikan: this.state.isAllData ? null : this.state.Kepemilikan,\r\n            StokMin: this.state.isAllData ? null : this.state.StokMin,\r\n            StokMax: this.state.isAllData ? null : this.state.StokMax,\r\n            HargaModalMin: this.state.isAllData ? null : this.state.HargaModalMin,\r\n            HargaModalMax: this.state.isAllData ? null : this.state.HargaModalMax,\r\n            HargaJualMin: this.state.isAllData ? null : this.state.HargaJualMin,\r\n            HargaJualMax: this.state.isAllData ? null : this.state.HargaJualMax,\r\n            Ket: this.state.isAllData ? null : this.state.Ket,\r\n        }\r\n\r\n        this.props.Load_Export_Query_Barang(data)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n        const KepemilikanOptions = ['pribadi', 'nonpribadi']\r\n        const JenisBarangOptions = this.props.JenisBarangList\r\n        const BarangOptions = this.props.BarangList\r\n        const {\r\n            isAllData,\r\n            NamaBarang,\r\n            JenisBarang,\r\n            Kepemilikan,\r\n            StokMin,\r\n            StokMax,\r\n            HargaModalMin,\r\n            HargaModalMax,\r\n            HargaJualMin,\r\n            HargaJualMax,\r\n            Ket,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>Cari dari Keseluruhan Data:</label><br />\r\n                    <div className='switch' style={MUI_VerticalMargin}>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n                    </div><br />\r\n                    {isAllData === false ? (\r\n                        <Fragment>\r\n                            <Autocomplete\r\n                                multiple\r\n                                value={NamaBarang}\r\n                                onChange={(event, newNamaBarang) => {\r\n                                    this.setState({ NamaBarang: newNamaBarang })\r\n                                }}\r\n\r\n                                options={BarangOptions.sort((a, b) => (a.Jenis > b.Jenis) ? 1 : ((b.Jenis > a.Jenis) ? -1 : 0))}\r\n                                getOptionLabel={option => typeof option === 'string' ? option : option.Name}\r\n                                groupBy={(option) => option.Jenis}\r\n                                renderTags={(tagValue, getTagProps) =>\r\n                                    tagValue.map((option, index) => (\r\n                                        <Chip\r\n                                            label={option.Name}\r\n                                            {...getTagProps({ index })}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                style={{ width: '100%' }}\r\n                                renderInput={(params) => (\r\n                                    <TextField {...params} style={st_textfield} name='Barang' label=\"Barang\" variant=\"outlined\" placeholder=\"Barang\" />\r\n                                )}\r\n                            />\r\n\r\n                            <Autocomplete\r\n                                multiple\r\n                                value={JenisBarang}\r\n                                onChange={(event, newJenisBarang) => {\r\n                                    this.setState({ JenisBarang: newJenisBarang })\r\n                                }}\r\n\r\n                                options={JenisBarangOptions.sort((a, b) => (a.Kepemilikan > b.Kepemilikan) ? 1 : ((b.Kepemilikan > a.Kepemilikan) ? -1 : 0))}\r\n                                getOptionLabel={option => typeof option === 'string' ? option : option.NamaJenisBarang}\r\n                                groupBy={(option) => option.Kepemilikan}\r\n                                renderTags={(tagValue, getTagProps) =>\r\n                                    tagValue.map((option, index) => (\r\n                                        <Chip\r\n                                            label={option.NamaJenisBarang}\r\n                                            {...getTagProps({ index })}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                style={{ width: '100%' }}\r\n                                renderInput={(params) => (\r\n                                    <TextField {...params} style={st_textfield} name='JenisBarang' label=\"JenisBarang\" variant=\"outlined\" placeholder=\"JenisBarang\" />\r\n                                )}\r\n                            />\r\n\r\n                            <FormControl style={st_textfield} variant=\"filled\">\r\n                                <InputLabel shrink >Kepemilikan</InputLabel>\r\n                                <Select native onChange={this.Form_OnChange} label=\"Kepemilikan\" name='Kepemilikan' value={Kepemilikan} labelWidth={100} >\r\n                                    <option value=\"\" > -- select an option -- </option>\r\n                                    {KepemilikanOptions.map((item, index) =>\r\n                                        <option key={index} value={item}>{item}</option>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <label>Cari Berdasarkan Total Stok Barang:</label><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Stok Minimum'\r\n                                name='StokMin'\r\n                                value={StokMin}\r\n                            /><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Stok Maksimum'\r\n                                name='StokMax'\r\n                                value={StokMax}\r\n                            /><br />\r\n\r\n                            <label>Cari Berdasarkan Modal Barang:</label><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Harga Modal Minimum'\r\n                                name='HargaModalMin'\r\n                                value={HargaModalMin}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                                        </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Harga Modal Maksimum'\r\n                                name='HargaModalMax'\r\n                                value={HargaModalMax}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                                        </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n\r\n                            <label>Cari Harga Jual Barang:</label><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Harga Jual Minimum'\r\n                                name='HargaJualMin'\r\n                                value={HargaJualMin}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                                        </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n                            <TextField\r\n                                style={st_halftextfield}\r\n                                variant='outlined'\r\n                                onChange={this.Form_OnChange}\r\n                                type='number'\r\n                                label='Harga Jual Maksimum'\r\n                                name='HargaJualMax'\r\n                                value={HargaJualMax}\r\n                                InputProps={{\r\n                                    startAdornment:\r\n                                        <InputAdornment position=\"start\">\r\n                                            Rp\r\n                                        </InputAdornment>,\r\n                                }}\r\n                            /><br />\r\n\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keteragan' name='Ket' value={Ket} />\r\n                        </Fragment>\r\n                    ) : null}\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    BarangList: state.KasirQu_Barang.BarangList,\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Barang_List, Load_JenisBarang_List, Load_Export_Query_Barang })(QueryBarang)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport BarangExport from '../../../Containers/Barang/Barang.BarangExport'\r\nimport QueryBarang from '../../../Containers/Barang/Barang.Barang.Query'\r\n\r\nconst ExportBarang = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Export Barang\r\n            </Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n\r\n                advancesearch={true}\r\n                accordiondetails={<QueryBarang />}\r\n            />\r\n            <BarangExport />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExportBarang","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Barang_List, Import_Barang } from '../../../Store/Actions/Barang.Actions'\r\nimport { Load_JenisBarang_List, } from '../../../Store/Actions/JenisBarang.Actions'\r\nimport { Create_Error_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, FormGroup, FormControlLabel, Checkbox, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass ReviewBarangImport extends React.Component {\r\n    state = {\r\n        FileData: [],\r\n        Confirm: false,\r\n        isProblemInData: false,\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_Barang_List()\r\n        this.props.Load_JenisBarang_List()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.BarangImportFile !== prevProps.BarangImportFile) {\r\n            const { BarangImportFile } = this.props\r\n            const FirstSheet = Object.values(BarangImportFile)[0]\r\n            this.setState({ FileData: FirstSheet ? JSON.parse(FirstSheet) : [] })\r\n        }\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { isProblemInData, FileData } = this.state\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        if (isProblemInData === true) {\r\n            this.props.Create_Error_Messages(null, 'ada kesalahan pada data yang dimasukkan')\r\n        } else {\r\n            this.props.Import_Barang(FileData, authdata)\r\n        }\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n\r\n        const {\r\n            FileData,\r\n            Confirm,\r\n            isProblemInData,\r\n        } = this.state\r\n        ////// for CheckisDataCorrect\r\n        const FirstFileData = FileData[0]\r\n        const FileDataKeys = FirstFileData ? Object.keys(FirstFileData) : null\r\n        ////// for isProblemInDataExist\r\n        const JenisBarangList = this.props.JenisBarangList\r\n        const JenisBarangList_NamaJenisBarang = JenisBarangList.length > 0 ? JenisBarangList.map((item) => item.NamaJenisBarang) : []\r\n        const BarangList = this.props.BarangList\r\n        const BarangList_Barcode = BarangList.length > 0 ? BarangList.map((item) => item.Barcode) : []\r\n        const BarangList_Name = BarangList.length > 0 ? BarangList.map((item) => item.Name) : []\r\n        ////// function\r\n        const CheckisDataCorrect = (Data, DataKeys) => {\r\n            try {\r\n                if (Data.length > 0 && DataKeys.length > 0) {\r\n                    const DataKeys_Barcode = DataKeys.find(item => item === 'Barcode')\r\n                    const DataKeys_Name = DataKeys.find(item => item === 'Name')\r\n                    const DataKeys_Jenis = DataKeys.find(item => item === 'Jenis')\r\n                    if (!DataKeys_Barcode || !DataKeys_Name || !DataKeys_Jenis) {\r\n                        return false\r\n                    }\r\n                    else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n        const isDataAlreadyExist = (newData, ListofData) => {\r\n            try {\r\n                if (newData) {\r\n                    const newDataIndex = ListofData.findIndex(listofdata => listofdata === newData.toString().toLocaleLowerCase())\r\n                    if (newDataIndex >= 0) {\r\n                        // if (this.state.isProblemInData === false) {\r\n                        //     console.log('maslaah')\r\n                        //     this.setState({ isProblemInData: true })\r\n                        // }\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n        const isDataWrong = (newData, ListOfCorrectData) => {\r\n            try {\r\n                if (newData) {\r\n                    const newDataIndex = ListOfCorrectData.findIndex(listofcorrectdata => listofcorrectdata === newData)\r\n                    if (newDataIndex >= 0) {\r\n                        return false\r\n                    } else {\r\n                        // if (this.state.isProblemInData === false) {\r\n                        //     this.setState({ isProblemInData: true })\r\n                        // }\r\n                        return true\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n                return false\r\n            }\r\n        }\r\n        const isDataCorrect = CheckisDataCorrect(FileData, FileDataKeys)\r\n        return (\r\n            <Fragment>\r\n                {isDataCorrect ? (\r\n                    <Fragment>\r\n                        <Table id='tabel_review_import_barang' >\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">No</TableCell>\r\n                                    {FileDataKeys.map((item) => (\r\n                                        <TableCell align=\"center\" key={item}>{item}</TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {FileData.map((item, index) => (\r\n                                    <TableRow hover key={index}\r\n                                    style={\r\n                                        (\r\n                                            ////// chek for big error\r\n                                            isDataAlreadyExist(item.Barcode ? item.Barcode.toString().toLocaleLowerCase() : null, BarangList_Barcode)\r\n                                            || isDataAlreadyExist(item.Name ? item.Name.toString().toLocaleLowerCase() : null, BarangList_Name)\r\n                                            || isDataWrong(item.Jenis ? item.Jenis.toString().toLocaleLowerCase() : null, JenisBarangList_NamaJenisBarang)\r\n                                        ) ? { backgroundColor: 'red' } : ((\r\n                                            ////// chek for warning\r\n                                            (item.Stok ? (item.Stok > 0 ? true : false) : null)\r\n                                            || (item.HargaModal ? (item.HargaModal > 0 ? true : false) : null)\r\n                                            || (item.HargaJual ? (item.HargaJual > 0 ? true : false) : null)\r\n                                            || (item.SatuanJual ? true : false)\r\n                                        ) ? { backgroundColor: 'yellow' } : null)\r\n                                    }\r\n                                    >\r\n                                        <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                        {Object.keys(item).map((itemitem, indexindex) => (\r\n                                            <TableCell align=\"center\" key={`${index}${indexindex}`} >\r\n                                                {\r\n                                                    (typeof item[itemitem] === 'object' && item[itemitem] !== null) ? JSON.stringify(item[itemitem]) :\r\n                                                        ((typeof item[itemitem] === 'boolean') ? (\r\n                                                            (item[itemitem] === 'boolean') ? \"Desimal\" : \"NonDesimal\"\r\n                                                        ) : item[itemitem])\r\n                                                }\r\n                                                {/* {console.log(typeof item[itemitem])} */}\r\n                                                {/* {item[itemitem]} */}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox color='primary' onChange={this.CheckBox_OnChange} name=\"Confirm\" value={Confirm} />}\r\n                                    label=\"Saya Sudah Yakin Tidak Ada yang Salah Pada Data diatas\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary'\r\n                                disabled={\r\n                                    ((isDataCorrect === true)\r\n                                        && (Confirm === true)\r\n                                        && (isProblemInData === false)\r\n                                    ) ? false : true}\r\n                            >\r\n                                Cek\r\n                            </Button>\r\n                        </form>\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    BarangImportFile: state.KasirQu_Barang.BarangImportFile,\r\n    BarangList: state.KasirQu_Barang.BarangList,\r\n    JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n})\r\nexport default connect(mapStateToProps, { Load_Barang_List, Load_JenisBarang_List, Import_Barang, Create_Error_Messages })(ReviewBarangImport)","import React, { Fragment } from 'react'\r\n\r\nimport XLSX from 'xlsx'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport ReviewBarangImport from './Barang.Review.BarangImport'\r\n\r\nimport { Cek_Import_Barang } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport GenericModals from '../GenericModals'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nclass BarangImport extends React.Component {\r\n    state = {\r\n        MaxFileSize: 1000000 * 50,\r\n        ExcelData: null,\r\n    }\r\n    excelToJson(reader) {\r\n        const fileData = reader.result\r\n        const wb = XLSX.read(fileData, { type: 'binary' })\r\n        const data = {}\r\n        wb.SheetNames.forEach((sheetName) => {\r\n            const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\r\n            const rowString = JSON.stringify(rowObj)\r\n            data[sheetName] = rowString\r\n        })\r\n        this.setState({ ExcelData: data })\r\n    }\r\n\r\n    loadFileXLSX(files) {\r\n        if (files.length > 0) {\r\n            try {\r\n                const reader = new FileReader()\r\n                reader.onload = this.excelToJson.bind(this, reader)\r\n                reader.readAsBinaryString(files[0])\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { ExcelData } = this.state\r\n        this.props.Cek_Import_Barang(ExcelData)\r\n    }\r\n\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n\r\n        const {\r\n            MaxFileSize,\r\n            ExcelData,\r\n        } = this.state\r\n\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <DropzoneArea\r\n                        filesLimit={1}\r\n                        showPreviewsInDropzone={true}\r\n                        showFileNames={true}\r\n                        maxFileSize={MaxFileSize}\r\n                        acceptedFiles={['.csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel']}\r\n                        dropzoneText={\"Masukkan atau Pilih File excel/sejenisnya untuk Import Barang\"}\r\n                        onChange={(files) => this.loadFileXLSX(files)}\r\n                    />\r\n                    <GenericModals\r\n                        size='xl'\r\n                        uncontrollsize={true}\r\n                        header='Review Import Katagori Barang'\r\n                        body={<ReviewBarangImport />}\r\n                        Buttontype='submit'\r\n                        Buttonstyle={st_textfield}\r\n                        Buttonsize='large'\r\n                        Buttonvariant='contained'\r\n                        Buttoncolor='primary'\r\n                        Buttondisabled={ExcelData ? false : true}\r\n                        ButtononClickeven={() => null}\r\n                        Buttonlabel={'Cek'}\r\n                    />\r\n                </form>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { Cek_Import_Barang })(BarangImport)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\n\r\nimport BarangImport from '../../../Containers/Barang/Barang.BarangImport'\r\nimport FAQ from '../../../Containers/FAQ'\r\n\r\nconst ImportBarang = () => {\r\n    const ListFAQ = [\r\n        {\r\n            AccordionSummaryTypography: 'File Apa Saja yang Bisa Digunakan?',\r\n            AccordionDetailsTypography: 'Semua file excel/spreadsheet',\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa \"Data Tidak Ditemukan\" pada Review?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna data yang anda masukkan tidak memiliki header dengan ketentuan yang benar minimal header berisi: <br />\r\n                    - Barcode (Penulisan Harus Sama) <br />\r\n                    - Name (Penulisan Harus Sama) <br />\r\n                    - Jenis (Penulisan Harus Sama)\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagai Mana Cara Membuat Excel yang Benar Untuk Import Data?',\r\n            AccordionDetails: (\r\n                <Fragment>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    Barcode\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Name\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Jenis\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Stok\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    isDecimal\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    HargaModal\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    HargaJual\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    SatuanJual\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Ket\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    111\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    barang ke 1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    jenis ke 1\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    100\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    TRUE\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    3000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    5000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {`[{\"NamaSatuan\":\"rencen\",\"MinBarang\":\"10\",\"HargaJual\":\"4500\"}]`}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    222\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    barang ke 2\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    jenis ke 2\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    100\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    FALSE\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    5000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    10000\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {`[{\"NamaSatuan\":\"box\",\"MinBarang\":24,\"HargaJual\":\"8000\"},{\"NamaSatuan\":\"rencen\",\"MinBarang\":\"10\",\"HargaJual\":\"9000\"}]`}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    keterangan jika ada\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa Ada Warna Merah Di Tabel Review?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna ada kesalahan pada data excel yang dimasukkan.<br />\r\n                    - Barcode : tidak boleh sama dengan yang sudah ada .<br />\r\n                     - Name : tidak boleh sama dengan yang sudah ada <br />\r\n                      - Jenis : hanya bisa diisi dengan JenisBarang yang sudah terdaftar\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Mengapa Ada Warna Kuning Di Tabel Review?',\r\n            AccordionDetailsTypography: (\r\n                <Fragment>\r\n                    Karna anda mengisi salah satu data dengan header berikut: <br />\r\n                     - Stok <br />\r\n                      - HargaModal <br />\r\n                       - HargaJual <br />\r\n                        - SatuanJual <br />\r\n                         ket: disarankan melakukan secara maual karna tidak terdata di diagram pengeluaran <br />\r\n                          untuk penulisan \"SatuanJual\" mohon liat panduan \"Bagai Mana Cara Membuat Excel yang Benar Untuk Import Data\" diatas karna sensitif\r\n                </Fragment>)\r\n        },\r\n        {\r\n            AccordionSummaryTypography: 'Bagaimana Jika Saya Ingin Mengupdate Barang Melalui Menu ini Bukan Menambah?',\r\n            AccordionDetailsTypography: 'Tidak bisa, menu import barang tidak bisa digunakan untuk mengupdate Barang, silakan lakukan manual',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Import Barang\r\n            </Typography>\r\n            <BarangImport />\r\n            <FAQ\r\n                title='Keterangan:'\r\n                faqlist={ListFAQ}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ImportBarang","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\n\r\nimport ExportBarang from './SubPage/Barang.ExportBarang'\r\nimport ImportBarang from './SubPage/Barang.ImportBarang'\r\n\r\nconst BarangImportExport = () => {\r\n    const breadcrumbs = [{ name: 'Barang', link: 'barang' }, { name: 'Konfigurasi Barang ', link: 'barang/konfigurasibarang' }, { name: 'Import/Export Barang ', link: 'barang/konfigurasibarang/importexport' }]\r\n\r\n    const [value, setValue] = React.useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n    const TapData = [\r\n        { taplabel: 'Export Barang', TapPanel: <ExportBarang /> },\r\n        { taplabel: 'Import Barang', TapPanel: <ImportBarang /> },\r\n        // { taplabel: 'Import Barang Update', TapPanel: <ImportKatagoriBarang /> },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Paper style={{ marginBottom: '10px' }} >\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                    scrollButtons=\"auto\"\r\n                    centered={TapData.length > 6 ? false : true}\r\n                >\r\n                    {TapData.map((tapdata, index) => (\r\n                        <Tab key={index} label={tapdata.taplabel} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            {value === 0 ? TapData[value].TapPanel : null}\r\n            {value === 1 ? TapData[value].TapPanel : null}\r\n            {/* {value === 2 ? TapData[value].TapPanel : null} */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BarangImportExport","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Paper, List, ListItem, Link, Divider } from '@material-ui/core'\r\n\r\nimport { ListSearching } from '../../Containers/Searching'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport { DataTidakDitemukan } from '../../Containers/Page404'\r\n\r\nconst Help = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }]\r\n    const ListItems = [\r\n        ////// User\r\n        {\r\n            ListLink: 'help/tingkatan_akun',\r\n            TypographyText: 'Apa itu Tingkatan Akun?',\r\n        },\r\n        {\r\n            ListLink: 'help/perbedaan_tingkatan_akun',\r\n            TypographyText: 'Apa Saja Perbedaan Antara Tingkatan Akun?',\r\n        },\r\n        {\r\n            ListLink: 'help/tambah_user',\r\n            TypographyText: 'Bagaimana Cara Menambah User?',\r\n        },\r\n        {\r\n            ListLink: 'help/update_user',\r\n            TypographyText: 'Bagaimana Cara Mengedit User Detail?',\r\n        },\r\n        {\r\n            ListLink: 'help/delete_user',\r\n            TypographyText: 'Bagaimana Cara Menghapus User Detail?',\r\n        },\r\n        {\r\n            ListLink: 'help/update_toko',\r\n            TypographyText: 'Bagaimana Cara Mengecek atau Mengupdate Toko Detail?',\r\n        },\r\n        {\r\n            ListLink: 'help/history',\r\n            TypographyText: 'Bagaimana Cara Mengecek atau MengExport History?',\r\n        },\r\n        ////// Help\r\n        {\r\n            ListLink: 'help/incomereport_help',\r\n            TypographyText: 'Bagaimana Cara Mengecek Pendapatan Bulanan?',\r\n        },\r\n        {\r\n            ListLink: 'help/outcomereport_help',\r\n            TypographyText: 'Bagaimana Cara Mengecek Pengeluaran Bulanan?',\r\n        },\r\n        {\r\n            ListLink: 'help/graph_help',\r\n            TypographyText: 'Bagaimana Cara Mengecek Aset, Uang Masuk, Uang Keluar, Uang Lose, Intensitas Transaksi, Intensitas Barang Transaksi?',\r\n        },\r\n        ////// Barang\r\n        {\r\n            ListLink: 'help/barang_list',\r\n            TypographyText: 'Bagaimana Cara Mengecek List Barang?',\r\n        },\r\n        {\r\n            ListLink: 'help/barang',\r\n            TypographyText: 'Bagaimana Cara Menambah, Mengedit, Menghapus Barang?',\r\n        },\r\n        {\r\n            ListLink: 'help/satuan_jual_barang',\r\n            TypographyText: 'Bagaimana Cara Menambah, Mengedit, Menghapus Satuan Jual Pada Barang?',\r\n        },\r\n        {\r\n            ListLink: 'help/jenisbarang',\r\n            TypographyText: 'Bagaimana Cara Menambah, Mengedit, Menghapus Jenis Barang?',\r\n        },\r\n        ////// Transaksi\r\n        {\r\n            ListLink: 'help/transaksi',\r\n            TypographyText: 'Bagaimana Cara Bertransaksi?',\r\n        },\r\n        {\r\n            ListLink: 'help/belanja',\r\n            TypographyText: 'Bagaimana Cara Belanja?',\r\n        },\r\n        {\r\n            ListLink: 'help/stok',\r\n            TypographyText: 'Bagaimana Cara Menambah Stok Barang?',\r\n        },\r\n        {\r\n            ListLink: 'help/transaksi_detail',\r\n            TypographyText: 'Bagaimana Cara Melihat Detail Transaksi?',\r\n        },\r\n        ////// General\r\n        {\r\n            ListLink: 'help/import-export',\r\n            TypographyText: 'Panduan Singkat Mengenai Import Export Barang, Jenis Barang dan Transaksi ?',\r\n        },\r\n        {\r\n            ListLink: 'help/light-dark',\r\n            TypographyText: 'Apa itu Light/Dark?',\r\n        },\r\n        {\r\n            ListLink: 'help/penggunaan_help',\r\n            TypographyText: 'Panduan Singkat Penggunaan',\r\n        },\r\n        {\r\n            ListLink: 'help/tampilan_help',\r\n            TypographyText: 'Panduan Singkat Tampilan',\r\n        },\r\n        {\r\n            ListLink: 'help/tampilan_help',\r\n            TypographyText: 'Bagaimana Jika Layar Putih Saja dan Tidak Terjadi Apa-apa?',\r\n        },\r\n        {\r\n            ListLink: 'help/menu_help',\r\n            TypographyText: 'Bagaimana Cara Bermanuver, Menu Bekerja?',\r\n        },\r\n        {\r\n            ListLink: 'help/first_time_use',\r\n            TypographyText: 'Bagaimana Cara Mengkonfigurasi Untuk Pertama Kali?',\r\n        },\r\n        {\r\n            ListLink: 'help/login',\r\n            TypographyText: 'Bagaimana Cara Masuk?',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h2' >\r\n                Help\r\n            </Typography>\r\n            <Typography align='center' variant='h2' >\r\n                <ListSearching\r\n                    width='l'\r\n                    ulname='help_list'\r\n                    label='Masukkan Topik Terkait'\r\n                />\r\n            </Typography>\r\n            {ListItems && ListItems.length > 0 ? (\r\n                <Paper style={{ marginRight: '8%', marginLeft: '5%', marginTop: '1%', padding: '10px' }} >\r\n                    <List id='help_list'>\r\n                        {ListItems.map((item, index) => (\r\n                            <Fragment key={index}>\r\n                                <ListItem >\r\n                                    <Link href={item.ListLink ? `/blog/preview/kasirqu/${item.ListLink}` : '/blog/preview/kasirqu/page404'} >\r\n                                        <Typography style={item.TypographyStyle ? item.TypographyStyle : null} variant={item.TypographyVariant ? item.TypographyVariant : 'h6'} >\r\n                                            {item.TypographyText ? item.TypographyText : ''}\r\n                                        </Typography>\r\n                                    </Link>\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </Fragment>\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n            ) : <DataTidakDitemukan />}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Help","import React, { Fragment } from \"react\"\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Create_Warning_Messages } from '../../Store/Actions/Messages.Actions'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { DataTidakDitemukan } from './Page404'\r\n\r\nconst Chart = require(\"chart.js\")\r\n\r\n\r\nclass Charting extends React.Component {\r\n    componentDidMount() {\r\n        this.createChart()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if ((this.props.datasetsdata !== prevProps.datasetsdata) ||\r\n            (this.props.datasets !== prevProps.datasets) ||\r\n            (this.props.data !== prevProps.data)) {\r\n            this.createChart()\r\n        }\r\n    }\r\n    createChart = () => {\r\n        const isRedy = this.isRedy()\r\n        if (isRedy) {\r\n            try {\r\n                const randomcolor = []\r\n                if ((((this.props.datasetsdata)\r\n                    // || (this.props.datasets)\r\n                    // || (this.props.data)\r\n                ) && (!this.props.datasetsbackgroundColor))) {\r\n                    this.props.datasetsdata.forEach(element => {\r\n                        const newrandomcolor = this.RandomColor()\r\n                        randomcolor.push(newrandomcolor)\r\n                    })\r\n                }\r\n                new Chart(this.node, {\r\n                    type: this.props.type ? this.props.type : null,\r\n                    data: this.props.data ? this.props.data : {\r\n                        labels: this.props.labels ? this.props.labels : [],\r\n                        datasets: this.props.datasets ? this.props.datasets : [\r\n                            {\r\n                                label: this.props.datasetslabel ? this.props.datasetslabel : \"\",\r\n                                data: this.props.datasetsdata ? this.props.datasetsdata : [],\r\n                                backgroundColor: this.props.datasetsbackgroundColor ? this.props.datasetsbackgroundColor : randomcolor,\r\n                                borderColor: this.props.datasetsborderColor ? this.props.datasetsborderColor : [],\r\n                                borderWidth: this.props.datasetsborderWidth ? this.props.datasetsborderWidth : 1\r\n                            }\r\n                        ]\r\n                    },\r\n                    options: this.props.options ? this.props.options : null,\r\n                })\r\n            } catch (err) {\r\n                console.log(err)\r\n                this.props.Create_Warning_Messages(null, `ada kesalahan pada pembuatan grafik ${err}`)\r\n            }\r\n        } else {\r\n            this.props.Create_Warning_Messages(null, 'Data untuk membuat grafik kurang/salah')\r\n        }\r\n    }\r\n    isRedy = () => {\r\n        const data = this.props.data\r\n        const datasets = this.props.datasets\r\n        const datasetsdata = this.props.datasetsdata\r\n        try {\r\n            if (data || datasets || datasetsdata) {\r\n                if (((data) && (datasets || datasetsdata)) ||\r\n                    ((datasets) && (data || datasetsdata))) {\r\n                    return false\r\n                } else {\r\n                    return true\r\n                }\r\n            } else {\r\n                return false\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            return false\r\n        }\r\n    }\r\n    RandomColor = () => {\r\n        const letters = '0123456789ABCDEF'\r\n        let color = '#'\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)]\r\n        }\r\n        // console.log('color', color)\r\n        return color\r\n    }\r\n\r\n    render() {\r\n        const isRedy = this.isRedy()\r\n        const ChartOnCanvas = () => {\r\n            return (\r\n                <Fragment>\r\n                    <canvas\r\n                        style={this.props.canvasstyle ? this.props.canvasstyle : { width: 800, height: 300 }}\r\n                        ref={node => (this.node = node)}\r\n                    />\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Typography variant='h6'>Grafik:</Typography>\r\n                {isRedy ? (\r\n                    <ChartOnCanvas />\r\n                ) : <DataTidakDitemukan />}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { Create_Warning_Messages })(Charting)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_IncomeReport_Barang_List } from '../../../Store/Actions/Help.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass BulananBarangReport extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_IncomeReport_Barang_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_report_barang', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_report_barang', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_report_barang', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.IncomeReportBarangList\r\n        // const secdata = this.props.IncomeReportBarangData\r\n        ////// sumdata\r\n        const TotalBarang = data.reduce((prev, cur) => {\r\n            return prev + cur.TotalBarang\r\n        }, 0)\r\n        const TotalModal = data.reduce((prev, cur) => {\r\n            return prev + (cur.TotalBarang * cur.ModalBarang)\r\n        }, 0)\r\n        const TotalHarga = data.reduce((prev, cur) => {\r\n            return prev + cur.HargaTotal\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Barcode)\r\n        const graphdatasetsdata = data.map((item) => item.TotalBarang)\r\n\r\n        return (\r\n            <Fragment>\r\n                {(data && data.length > 0) ? (\r\n                    <Fragment>\r\n                        <Table stickyHeader id='table_report_barang'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                    <TableCell style={{ width: '55%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Jenis Barang</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Total Barang Terjual&nbsp;(satuan)</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Total Estimasi Modal Dikeluarkan&nbsp;(Rp)</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Total Estimasi Pendapatan Diperoleh&nbsp;(Rp)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data.map((item, index) => (\r\n                                    <TableRow hover key={index}>\r\n                                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                        <TableCell align=\"left\">{item.NamaBarang}</TableCell>\r\n                                        <TableCell align=\"center\" >{item.JenisBarang}</TableCell>\r\n                                        <TableCell align=\"right\">{item.TotalBarang}</TableCell>\r\n                                        <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalBarang * item.ModalBarang)}</TableCell>\r\n                                        <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaTotal)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow >\r\n                                    <TableCell style={{ width: '5%' }} align=\"left\" >Total:</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"left\" ></TableCell>\r\n                                    <TableCell style={{ width: '55%' }} align=\"left\" ></TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"left\" ></TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"right\" >{TotalBarang}</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalModal)}</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalHarga)}</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                        </Table>\r\n                        {/* <hr /> */}\r\n                        {/* {secdata ? (\r\n                            <Table>\r\n                                <TableHead>\r\n                                    {secdata.map((item, index) => (\r\n                                        <Fragment key={index}>\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">Total Diskon &nbsp;(%)</TableCell>\r\n                                                <TableCell align=\"right\">{item.TotalDiskon}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">Total PotonganHarga &nbsp;(Rp)</TableCell>\r\n                                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalPotonganHarga)}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">Total Pembayaran &nbsp;(Rp)</TableCell>\r\n                                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalTotalPembayaran)}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">Total Keuntungan &nbsp;(Rp)</TableCell>\r\n                                                <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalTotalPembayaran - TotalModal)}</TableCell>\r\n                                            </TableRow>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </TableHead>\r\n                            </Table>\r\n                        ) : null} */}\r\n                        <Charting\r\n                            canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                            type='pie'\r\n                            labels={graphlabels}\r\n                            datasetslabel='Grafik Jumlah Penjualan Barang Bulanan'\r\n                            datasetsdata={graphdatasetsdata}\r\n                        />\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // User: state.KasirQu_Auth.User,\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    IncomeReportBarangList: state.KasirQu_Help.IncomeReportBarangList,\r\n    // IncomeReportBarangData: state.KasirQu_Help.IncomeReportBarangData,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_IncomeReport_Barang_List })(BulananBarangReport)","import { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    ////// HELP\r\n    HELP_LOADING,\r\n    HELP_LOADED,\r\n    ////// HELP-REPORT\r\n    LIST_INCOMEREPORT_BARANG,\r\n    LIST_INCOMEREPORT_KEUANGAN,\r\n    LIST_OUTCOMEREPORT_BARANG,\r\n    LIST_OUTCOMEREPORT_MODAL,\r\n    ////// END-HELP-REPORT\r\n    ////// HELP-GRAPH\r\n    LIST_GRAPH_ASET,\r\n    // LIST_QUERY_GRAPH_ASET,\r\n    LIST_GRAPH_UANGMASUK,\r\n    // LIST_QUERY_GRAPH_UANGMASUK,\r\n    LIST_GRAPH_UANGKELUAR,\r\n    // LIST_QUERY_GRAPH_UANGKELUAR,\r\n    LIST_GRAPH_UANGLOSE,\r\n    // LIST_QUERY_GRAPH_UANGLOSE,\r\n    LIST_GRAPH_INTENSITASTRANSAKSI,\r\n    // LIST_QUERY_GRAPH_INTENSITASTRANSAKSI,\r\n    LIST_GRAPH_INTENSITASBARANGTRANSAKSI,\r\n    // LIST_QUERY_GRAPH_INTENSITASBARANGTRANSAKSI,\r\n    ////// END-HELP-GRAPH\r\n    ////// END-HELP\r\n} from './Type.Actions'\r\n\r\nimport {\r\n    Create_Error_Messages,\r\n    // Create_Success_Messages,\r\n    Create_Info_Messages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_IncomeReport_Barang_List,\r\n    Database_Load_IncomeReport_Keuangan_List,\r\n    Database_Load_OutcomeReport_Barang_List,\r\n    Database_Load_OutcomeReport_Modal_List,\r\n    Database_Load_Aset_List,\r\n    Database_Load_UangMasuk_List,\r\n    Database_Load_UangKeluar_List,\r\n    Database_Load_UangLose_List,\r\n    Database_Load_IntensitasTransaksi_List,\r\n    Database_Load_IntensitasBarangTransaksi_List,\r\n} from './Database.Actions'\r\n\r\n////// HELP\r\n////// HELP-REPORT\r\nexport const Load_IncomeReport_Barang_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_IncomeReport_Barang_List(tokenConfig(getState))\r\n        // console.log('Log: Load_IncomeReport_Barang_List -> Responses', Responses)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_INCOMEREPORT_BARANG,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_IncomeReport_Barang_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_IncomeReport_Keuangan_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n\r\n        const Responses = await Database_Load_IncomeReport_Keuangan_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_INCOMEREPORT_KEUANGAN,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_IncomeReport_Keuangan_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_OutcomeReport_Barang_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_OutcomeReport_Barang_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_OUTCOMEREPORT_BARANG,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_OutcomeReport_Barang_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_OutcomeReport_Modal_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n\r\n        const Responses = await Database_Load_OutcomeReport_Modal_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_OUTCOMEREPORT_MODAL,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_OutcomeReport_Modal_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n////// END-HELP-REPORT\r\n\r\n////// HELP-GRAPH\r\nexport const Load_Graph_Aset_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n\r\n        const Responses = await Database_Load_Aset_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_GRAPH_ASET,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Graph_Aset_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Query_Graph_Aset_List = (Query) => async (dispatch, getState) => {\r\n    // console.log('Log: Load_Query_Graph_Aset_List -> Query', Query)\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Load_Query_Graph_Aset_List -> IpAddres', IpAddres)\r\n\r\n        // const Kepemilikan = Query.Kepemilikan\r\n        // const Barang = Query.Barang\r\n        // const JenisBarang = Query.JenisBarang\r\n        // const StokMin = Query.StokMin\r\n        // const StokMax = Query.StokMax\r\n        // const HargaJualMin = Query.HargaJualMin\r\n        // const HargaJualMax = Query.HargaJualMax\r\n        // const Ket = Query.Ket\r\n\r\n        // const body = JSON.stringify({ Kepemilikan, Barang, JenisBarang, StokMin, StokMax, HargaJualMin, HargaJualMax, Ket })\r\n\r\n        // const Responses = await axios.post(`${IpAddres}/api/help/graph/query/aset`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Graph_Aset_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_GRAPH_ASET,\r\n        //         payload: Responses.data.AsetList\r\n        //     })\r\n        //     if (Responses.data.AsetList) {\r\n        //         const AsetList = Responses.data.AsetList\r\n        //         if (AsetList.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: HELP_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Graph_Aset_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Graph_UangMasuk_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_UangMasuk_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_GRAPH_UANGMASUK,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Graph_UangMasuk_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Query_Graph_UangMasuk_List = (Query) => async (dispatch, getState) => {\r\n    // console.log('Log: Load_Query_Graph_UangMasuk_List -> Query', Query)\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Load_Query_Graph_UangMasuk_List -> IpAddres', IpAddres)\r\n\r\n        // const DateMin = Query.DateMin\r\n        // const DateMax = Query.DateMax\r\n        // const TotalTransaksiMin = Query.TotalTransaksiMin\r\n        // const TotalTransaksiMax = Query.TotalTransaksiMax\r\n        // const GrafikView = Query.GrafikView\r\n\r\n        // const body = JSON.stringify({ DateMin, DateMax, TotalTransaksiMin, TotalTransaksiMax, GrafikView })\r\n        // const Responses = await axios.post(`${IpAddres}/api/help/graph/query/uangmasuk`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Graph_UangMasuk_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_GRAPH_UANGMASUK,\r\n        //         payload: Responses.data.UangMasuk\r\n        //     })\r\n        //     if (Responses.data.UangMasuk) {\r\n        //         const UangMasuk = Responses.data.UangMasuk\r\n        //         if (UangMasuk.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: HELP_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Graph_UangMasuk_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Graph_UangKeluar_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n\r\n        const Responses = await Database_Load_UangKeluar_List(tokenConfig(getState))\r\n        // console.log('Log: Load_Graph_UangKeluar_List -> Responses', Responses)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_GRAPH_UANGKELUAR,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Graph_UangKeluar_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Query_Graph_UangKeluar_List = (Query) => async (dispatch, getState) => {\r\n    // console.log('Log: Load_Query_Graph_UangKeluar_List -> Query', Query)\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Load_Query_Graph_UangKeluar_List -> IpAddres', IpAddres)\r\n\r\n        // const DateMin = Query.DateMin\r\n        // const DateMax = Query.DateMax\r\n        // const TotalTransaksiMin = Query.TotalTransaksiMin\r\n        // const TotalTransaksiMax = Query.TotalTransaksiMax\r\n        // const GrafikView = Query.GrafikView\r\n\r\n        // const body = JSON.stringify({ DateMin, DateMax, TotalTransaksiMin, TotalTransaksiMax, GrafikView })\r\n        // const Responses = await axios.post(`${IpAddres}/api/help/graph/query/uangkeluar`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Graph_UangKeluar_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_GRAPH_UANGKELUAR,\r\n        //         payload: Responses.data.UangKeluar\r\n        //     })\r\n        //     if (Responses.data.UangKeluar) {\r\n        //         const UangKeluar = Responses.data.UangKeluar\r\n        //         if (UangKeluar.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: HELP_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Graph_UangKeluar_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Graph_UangLose_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_UangLose_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_GRAPH_UANGLOSE,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Graph_UangLose_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Query_Graph_UangLose_List = (Query) => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        // const IpAddres = Get_IpAddres()\r\n\r\n        // const DateMin = Query.DateMin\r\n        // const DateMax = Query.DateMax\r\n        // const DiskonMin = Query.DiskonMin\r\n        // const DiskonMax = Query.DiskonMax\r\n        // const PotonganMin = Query.PotonganMin\r\n        // const PotonganMax = Query.PotonganMax\r\n        // const GrafikView = Query.GrafikView\r\n\r\n        // const body = JSON.stringify({ DateMin, DateMax, DiskonMin, DiskonMax, PotonganMin, PotonganMax, GrafikView })\r\n        // const Responses = await axios.post(`${IpAddres}/api/help/graph/query/uanglose`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Graph_UangLose_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_GRAPH_UANGLOSE,\r\n        //         payload: Responses.data.UangLose\r\n        //     })\r\n        //     if (Responses.data.UangLose) {\r\n        //         const UangLose = Responses.data.UangLose\r\n        //         if (UangLose.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: HELP_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Graph_UangLose_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Graph_IntensitasTransaksi_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_IntensitasTransaksi_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_GRAPH_INTENSITASTRANSAKSI,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Graph_IntensitasTransaksi_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Query_Graph_IntensitasTransaksi_List = (Query) => async (dispatch, getState) => {\r\n    // console.log('Log: Load_Query_Graph_Aset_List -> Query', Query)\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Load_Query_Graph_IntensitasTransaksi_List -> IpAddres', IpAddres)\r\n\r\n        // const NamaKasir = Query.NamaKasir\r\n        // const DateMin = Query.DateMin\r\n        // const DateMax = Query.DateMax\r\n        // const Jenis = Query.Jenis\r\n        // const DiskonMin = Query.DiskonMin\r\n        // const DiskonMax = Query.DiskonMax\r\n        // const PotonganHargaMin = Query.PotonganHargaMin\r\n        // const PotonganHargaMax = Query.PotonganHargaMax\r\n        // const TotalPembayaranMin = Query.TotalPembayaranMin\r\n        // const TotalPembayaranMax = Query.TotalPembayaranMax\r\n        // const GrafikView = Query.GrafikView\r\n\r\n        // const body = JSON.stringify({ NamaKasir, DateMin, DateMax, Jenis, DiskonMin, DiskonMax, PotonganHargaMin, PotonganHargaMax, TotalPembayaranMin, TotalPembayaranMax, GrafikView })\r\n        // const Responses = await axios.post(`${IpAddres}/api/help/graph/query/intensitastransaksi`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Graph_IntensitasTransaksi_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_GRAPH_INTENSITASTRANSAKSI,\r\n        //         payload: Responses.data.IntensitasTransaksi\r\n        //     })\r\n        //     if (Responses.data.IntensitasTransaksi) {\r\n        //         const IntensitasTransaksi = Responses.data.IntensitasTransaksi\r\n        //         if (IntensitasTransaksi.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: HELP_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Graph_IntensitasTransaksi_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Graph_IntensitasBarangTransaksi_List = () => async (dispatch, getState) => {\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        const Responses = await Database_Load_IntensitasBarangTransaksi_List(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: LIST_GRAPH_INTENSITASBARANGTRANSAKSI,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Graph_IntensitasBarangTransaksi_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n\r\nexport const Load_Query_Graph_IntensitasBarangTransaksi_List = (Query) => async (dispatch, getState) => {\r\n    // console.log('Log: Load_Query_Graph_IntensitasBarangTransaksi_List -> Query', Query)\r\n    dispatch({ type: HELP_LOADING })\r\n    try {\r\n        // const IpAddres = Get_IpAddres()\r\n        // console.log('Log: Load_Query_Graph_IntensitasBarangTransaksi_List -> IpAddres', IpAddres)\r\n\r\n        // const DateMin = Query.DateMin\r\n        // const DateMax = Query.DateMax\r\n        // const Tipe = Query.Tipe\r\n        // const Kepemilikan = Query.Kepemilikan\r\n        // const JenisBarang = Query.JenisBarang\r\n        // const Barang = Query.Barang\r\n        // const GrafikView = Query.GrafikView\r\n\r\n        // const body = JSON.stringify({ DateMin, DateMax, Tipe, Kepemilikan, JenisBarang, Barang, GrafikView })\r\n        // const Responses = await axios.post(`${IpAddres}/api/help/graph/query/intensitasbarangtransaksi`, body, tokenConfig(getState))\r\n        // // console.log('Log: Load_Query_Graph_IntensitasBarangTransaksi_List -> Responses', Responses)\r\n        // if (Responses) {\r\n        //     dispatch({\r\n        //         type: LIST_QUERY_GRAPH_INTENSITASBARANGTRANSAKSI,\r\n        //         payload: Responses.data.IntensitasBarangTransaksi\r\n        //     })\r\n        //     if (Responses.data.IntensitasBarangTransaksi) {\r\n        //         const IntensitasBarangTransaksi = Responses.data.IntensitasBarangTransaksi\r\n        //         if (IntensitasBarangTransaksi.length >= 1) {\r\n        //             dispatch(Create_Success_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n        //         } else {\r\n        //             dispatch(Create_Error_Messages(null, 'data tidak ditemukan'))\r\n        //         }\r\n        //     }\r\n        //     dispatch({ type: HELP_LOADED })\r\n        // }\r\n        const Responses = Action_Denied()\r\n        if (Responses) {\r\n            dispatch(Create_Info_Messages(Responses.status ? Responses.status : null, Responses.data.msg ? Responses.data.msg : null))\r\n            dispatch({ type: HELP_LOADED })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: Load_Query_Graph_IntensitasBarangTransaksi_List -> err', err)\r\n        dispatch(\r\n            Create_Error_Messages(\r\n                err.response ? (\r\n                    err.response.status ? err.response.status\r\n                        : null) : null,\r\n                err.response ? (\r\n                    err.response.data.msg ? err.response.data.msg\r\n                        : null) : 'anda tidak terhubung dengan server'\r\n            ))\r\n        dispatch({ type: HELP_LOADED })\r\n    }\r\n}\r\n////// END-HELP-GRAPH\r\n////// END-HELP","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\n// import Searching from '../../../Containers/Searching'\r\nimport BarangBulanan from '../../../Containers/Help/Help.IncomeReport.BarangBulanan'\r\n// import QueryBulananReport from '../../../Containers/Help/Help.Report.QueryBulananReport'\r\n\r\nconst IncomeReportBarangBulanan = () => {\r\n    return (\r\n        <Fragment>\r\n            {/* <Searching\r\n                tablename={'table_report_barang'}\r\n                tdnumber={2}\r\n                width='xl'\r\n                label={'Cari Berdasarkan NamaBarang'}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryBulananReport />}\r\n            /> */}\r\n            <Typography variant='h4' align='center'>\r\n                Laporan Penjualan Barang Bulanan\r\n                </Typography>\r\n            <BarangBulanan />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default IncomeReportBarangBulanan","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_IncomeReport_Keuangan_List } from '../../../Store/Actions/Help.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass KeuanganBulanan extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_IncomeReport_Keuangan_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_incomereport_keuangan', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_incomereport_keuangan', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_incomereport_keuangan', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('table_incomereport_keuangan', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.IncomeReportKeuanganList\r\n        ////// sumdata\r\n        const TotalDiskon = data.reduce((prev, cur) => {\r\n            return prev + cur.DiskonHarian\r\n        }, 0)\r\n        const TotalPotongan = data.reduce((prev, cur) => {\r\n            return prev + cur.PotonganHargaHarian\r\n        }, 0)\r\n        const TotalKeuntungan = data.reduce((prev, cur) => {\r\n            return prev + cur.KeuntunganHarian\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Tanggal)\r\n        const graphdatasetsdata = data.map((item) => item.KeuntunganHarian)\r\n        const graphdatasetsdata_1 = data.map((item) => item.PotonganHargaHarian)\r\n        const graphdatasetsdata_2 = data.map((item) => item.DiskonHarian)\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Table stickyHeader id='table_incomereport_keuangan'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Total Diskon Diberikan Harian&nbsp;(%)</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(3)}>Total Potongan Diberikan Harian&nbsp;(Rp)</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(4)}>Total Keuntungan Harian&nbsp;(Rp)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">{item.DiskonHarian}%</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.PotonganHargaHarian)}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.KeuntunganHarian)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"left\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{TotalDiskon}%</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalPotongan)}</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalKeuntungan)}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='bar'\r\n                                // labels={graphlabels}\r\n                                // datasetslabel='Grafik Jumlah Keuntungan perHari'\r\n                                // datasetsdata={graphdatasetsdata}\r\n                                data={{\r\n                                    datasets: [{\r\n                                        label: 'Total Keuntungan Harian (Rp)',\r\n                                        data: graphdatasetsdata,\r\n                                        backgroundColor: 'green',\r\n                                    }, {\r\n                                        label: 'Total Potongan Harian (Rp)',\r\n                                        data: graphdatasetsdata_1,\r\n                                        backgroundColor: 'red',\r\n                                        // type: 'line'\r\n                                    }, {\r\n                                        label: 'Total Diskon (%)',\r\n                                        data: graphdatasetsdata_2,\r\n                                        borderColor: 'blue',\r\n                                        backgroundColor: 'blue',\r\n                                        fill: false,\r\n                                        type: 'line'\r\n\r\n                                        // Changes this dataset to become a line\r\n                                        // type: 'line'\r\n                                    }],\r\n                                    labels: graphlabels\r\n                                }}\r\n                            />\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    IncomeReportKeuanganList: state.KasirQu_Help.IncomeReportKeuanganList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_IncomeReport_Keuangan_List })(KeuanganBulanan)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport KeuanganBulanan from '../../../Containers/Help/Help.IncomeReport.KeuanganBulanan'\r\n\r\nconst IncomeReportKeuanganBulanan = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Laporan Pendapatan Keuangan Bulanan\r\n                </Typography>\r\n            <KeuanganBulanan />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default IncomeReportKeuanganBulanan","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport IncomeReportBarangBulanan from './SubPage/IncomeReport.BarangBulanan'\r\nimport IncomeReportKeuanganBulanan from './SubPage/IncomeReport.KeuanganBulanan'\r\n\r\nconst IncomeReport = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Laporan Penjualan', link: 'help/incomereport' }]\r\n    const [value, setValue] = React.useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    const TapData = [{ taplabel: 'Keuangan Penjualan Bulanan', TapPanel: <IncomeReportKeuanganBulanan /> }, { taplabel: 'Penjualan Barang Bulanan', TapPanel: <IncomeReportBarangBulanan /> }]\r\n\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Paper style={{ marginBottom: '10px' }} >\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                    scrollButtons=\"auto\"\r\n                    centered={TapData.length > 6 ? false : true}\r\n                >\r\n                    {TapData.map((tapdata, index) => (\r\n                        <Tab key={index} label={tapdata.taplabel} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            {value === 0 ? TapData[value].TapPanel : null}\r\n            {value === 1 ? TapData[value].TapPanel : null}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default IncomeReport","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_OutcomeReport_Barang_List } from '../../../Store/Actions/Help.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass BarangBulanan extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_OutcomeReport_Barang_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_outcomereport_barang', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_outcomereport_barang', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_outcomereport_barang', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.OutcomeReportBarangList\r\n        // const secdata = this.props.IncomeReportBarangData\r\n        ////// sumdata\r\n        const TotalBarang = data.reduce((prev, cur) => {\r\n            return prev + cur.Jumlah\r\n        }, 0)\r\n        const TotalTotalModal = data.reduce((prev, cur) => {\r\n            return prev + cur.TotalModal\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Barcode)\r\n        const graphdatasetsdata = data.map((item) => item.Jumlah)\r\n\r\n        return (\r\n            <Fragment>\r\n                {(data && data.length > 0) ? (\r\n                    <Fragment>\r\n                        <Table stickyHeader id='table_outcomereport_barang'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                    <TableCell style={{ width: '65%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Nama Barang</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Jenis Barang</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Jumlah&nbsp;(satuan)</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Total Modal&nbsp;(Rp)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data.map((item, index) => (\r\n                                    <TableRow hover key={index}>\r\n                                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                        <TableCell align=\"left\">{item.NamaBarang}</TableCell>\r\n                                        <TableCell align=\"center\" >{item.JenisBarang}</TableCell>\r\n                                        <TableCell align=\"right\">{item.Jumlah}</TableCell>\r\n                                        <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.TotalModal)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow >\r\n                                    <TableCell style={{ width: '5%' }} align=\"left\" >Total:</TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"left\" ></TableCell>\r\n                                    <TableCell style={{ width: '65%' }} align=\"left\" ></TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"left\" ></TableCell>\r\n                                    <TableCell style={{ width: '5%' }} align=\"right\" >{TotalBarang}</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalTotalModal)}</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                        </Table>\r\n                        <Charting\r\n                            canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                            type='pie'\r\n                            labels={graphlabels}\r\n                            datasetslabel='Grafik Jumlah Penjualan Barang Bulanan'\r\n                            datasetsdata={graphdatasetsdata}\r\n                        />\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    OutcomeReportBarangList: state.KasirQu_Help.OutcomeReportBarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_OutcomeReport_Barang_List })(BarangBulanan)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport BarangBulanan from '../../../Containers/Help/Help.OutcomeReport.BarangBulanan'\r\n\r\nconst OutcomeReportBarangBulanan = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Laporan Belanja Barang Bulanan\r\n                </Typography>\r\n            <BarangBulanan />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default OutcomeReportBarangBulanan","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_OutcomeReport_Modal_List } from '../../../Store/Actions/Help.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass ModalBulanan extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_OutcomeReport_Modal_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_outcomereport_modalbulanan', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_outcomereport_modalbulanan', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_outcomereport_modalbulanan', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('table_outcomereport_modalbulanan', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.OutcomeReportModalList\r\n        ////// sumdata\r\n        const TotalTotalModal = data.reduce((prev, cur) => {\r\n            return prev + cur.ModalHarian\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Tanggal)\r\n        const graphdatasetsdata = data.map((item) => item.ModalHarian)\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Table stickyHeader id='table_outcomereport_modalbulanan'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '70%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" onClick={() => this.ButtonShortMoney(2)}>Total Belanja Modal&nbsp;(Rp)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.ModalHarian)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"left\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '70%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalTotalModal)}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='bar'\r\n                                labels={graphlabels}\r\n                                datasetslabel='Grafik Pembelanjaan Modal perHari'\r\n                                datasetsdata={graphdatasetsdata}\r\n                            />\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    OutcomeReportModalList: state.KasirQu_Help.OutcomeReportModalList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_OutcomeReport_Modal_List })(ModalBulanan)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport ModalBulanan from '../../../Containers/Help/Help.OutcomeReport.ModalBulanan'\r\n\r\nconst OutcomeReportModalBulanan = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h4' align='center'>\r\n                Laporan Belanja Modal Bulanan\r\n                </Typography>\r\n            <ModalBulanan />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default OutcomeReportModalBulanan","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport OutcomeReportBarangBulanan from './SubPage/OutcomeReport.BarangBulanan'\r\nimport OutcomeReportModalBulanan from './SubPage/OutcomeReport.ModalBulanan'\r\n\r\nconst OutcomeReport = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Laporan Pembelanjaan', link: 'help/outcomereport' }]\r\n    const [value, setValue] = React.useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    const TapData = [\r\n        { taplabel: 'Pengeluaran Modal Bulanan', TapPanel: <OutcomeReportModalBulanan /> },\r\n        { taplabel: 'Pembelian Barang Bulanan', TapPanel: <OutcomeReportBarangBulanan /> }\r\n    ]\r\n\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Paper style={{ marginBottom: '10px' }} >\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                    scrollButtons=\"auto\"\r\n                    centered={TapData.length > 6 ? false : true}\r\n                >\r\n                    {TapData.map((tapdata, index) => (\r\n                        <Tab key={index} label={tapdata.taplabel} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            {value === 0 ? TapData[value].TapPanel : null}\r\n            {value === 1 ? TapData[value].TapPanel : null}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default OutcomeReport","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Graph_Aset_List } from '../../../Store/Actions/Help.Actions'\r\nimport { get_BarangId_Detail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport GenericModals from '../GenericModals'\r\nimport BarangDetail from '../Barang/Barang.BarangDetail'\r\nimport Charting from '../Charting'\r\n\r\nclass AsetGraph extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Graph_Aset_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_graph_aset', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_graph_aset', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_graph_aset', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.GraphAsetList\r\n        ////// sumdata\r\n        const TotalStok = data.reduce((prev, cur) => {\r\n            return prev + cur.Stok\r\n        }, 0)\r\n        const TotalModal = data.reduce((prev, cur) => {\r\n            return prev + (cur.HargaModal * cur.Stok)\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Barcode)\r\n        const graphdatasetsdata = data.map((item) => (item.Stok * item.HargaModal))\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='pie'\r\n                                labels={graphlabels}\r\n                                datasetslabel='Grafik Jumlah Keuntungan perHari'\r\n                                datasetsdata={graphdatasetsdata}\r\n                            />\r\n\r\n                            <Table stickyHeader id='table_graph_aset'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortSTR(1)}>Barcode</TableCell>\r\n                                        <TableCell style={{ width: '50%' }} align=\"center\" onClick={() => this.ButtonShortSTR(2)}>Name</TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortSTR(3)}>Jenis</TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(4)}>Stok</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(5)}>Modal&nbsp;(Rp)</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(6)}>Total Modal&nbsp;(Rp)</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" >Detail</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Barcode}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Name}</TableCell>\r\n                                            <TableCell align=\"center\">{item.Jenis}</TableCell>\r\n                                            <TableCell align=\"right\">{item.Stok}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.HargaModal)}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat((item.HargaModal * item.Stok))}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <GenericModals\r\n                                                    size='s'\r\n                                                    header='Jenis Barang Detail'\r\n                                                    body={<BarangDetail />}\r\n                                                    Buttoncolor='primary'\r\n                                                    ButtononClickeven={() => this.onClick_get_BarangId_Detail(item._id)}\r\n                                                    Buttonlabel={'Detail'}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '50%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '5%' }} align=\"right\" >{TotalStok}</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" ></TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalModal)}</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" ></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    GraphAsetList: state.KasirQu_Help.GraphAsetList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Graph_Aset_List, get_BarangId_Detail })(AsetGraph)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Graph_Aset_List } from '../../../Store/Actions/Help.Actions'\r\nimport { Load_JenisBarang_List } from '../../../Store/Actions/JenisBarang.Actions'\r\nimport { Load_Barang_List } from '../../../Store/Actions/Barang.Actions'\r\nimport { Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, Button, Chip, InputAdornment } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nclass QueryAset extends React.Component {\r\n  state = {\r\n    Kepemilikan: '',\r\n    Barang: [],\r\n    JenisBarang: [],\r\n    StokMin: '',\r\n    StokMax: '',\r\n    HargaJualMin: '',\r\n    HargaJualMax: '',\r\n    Ket: ''\r\n  }\r\n  componentDidMount() {\r\n    this.props.Load_JenisBarang_List()\r\n    this.props.Load_Barang_List()\r\n  }\r\n  Form_OnChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  Form_OnSubmit = E => {\r\n    E.preventDefault()\r\n    const data = {\r\n      Kepemilikan: this.state.Kepemilikan,\r\n      Barang: this.state.Barang,\r\n      JenisBarang: this.state.JenisBarang,\r\n      StokMin: this.state.StokMin,\r\n      StokMax: this.state.StokMax,\r\n      HargaJualMin: this.state.HargaJualMin,\r\n      HargaJualMax: this.state.HargaJualMax,\r\n      Ket: this.state.Ket,\r\n    }\r\n    if (\r\n      ((data.StokMax < data.StokMin) && (data.StokMax && data.StokMin))\r\n      || ((data.HargaJualMax < data.HargaJualMin) && (data.HargaJualMax && data.HargaJualMin))\r\n    ) {\r\n      this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n    }\r\n    this.props.Load_Query_Graph_Aset_List(data)\r\n  }\r\n  render() {\r\n    const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n    const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n    const KepemilikanOptions = ['pribadi', 'nonpribadi']\r\n    const JenisBarangOptions = this.props.JenisBarangList\r\n    const BarangOptions = this.props.BarangList\r\n    const {\r\n      Kepemilikan,\r\n      Barang,\r\n      JenisBarang,\r\n      StokMin,\r\n      StokMax,\r\n      HargaJualMin,\r\n      HargaJualMax,\r\n      Ket,\r\n    } = this.state\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.Form_OnSubmit}>\r\n          <FormControl style={st_textfield} variant=\"filled\">\r\n            <InputLabel shrink >Kepemilikan</InputLabel>\r\n            <Select native onChange={this.Form_OnChange} label=\"Kepemilikan\" name='Kepemilikan' value={Kepemilikan} labelWidth={100} >\r\n              {/* <option value=\"\" disabled> -- select an option -- </option> */}\r\n              <option value=\"\" > -- select an option -- </option>\r\n              {KepemilikanOptions.map((item, index) =>\r\n                <option key={index} value={item}>{item}</option>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Autocomplete\r\n            multiple\r\n            value={Barang}\r\n            onChange={(event, newBarang) => {\r\n              this.setState({ Barang: newBarang })\r\n            }}\r\n\r\n            options={BarangOptions.sort((a, b) => (a.Jenis > b.Jenis) ? 1 : ((b.Jenis > a.Jenis) ? -1 : 0))}\r\n            getOptionLabel={option => typeof option === 'string' ? option : option.Name}\r\n            groupBy={(option) => option.Jenis}\r\n            renderTags={(tagValue, getTagProps) =>\r\n              tagValue.map((option, index) => (\r\n                <Chip\r\n                  label={option.Name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            style={{ width: '100%' }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} style={st_textfield} name='Barang' label=\"Barang\" variant=\"outlined\" placeholder=\"Barang\" />\r\n            )}\r\n          />\r\n\r\n          <Autocomplete\r\n            multiple\r\n            value={JenisBarang}\r\n            onChange={(event, newJenisBarang) => {\r\n              this.setState({ JenisBarang: newJenisBarang })\r\n            }}\r\n\r\n            options={JenisBarangOptions.sort((a, b) => (a.Kepemilikan > b.Kepemilikan) ? 1 : ((b.Kepemilikan > a.Kepemilikan) ? -1 : 0))}\r\n            getOptionLabel={option => typeof option === 'string' ? option : option.NamaJenisBarang}\r\n            groupBy={(option) => option.Kepemilikan}\r\n            renderTags={(tagValue, getTagProps) =>\r\n              tagValue.map((option, index) => (\r\n                <Chip\r\n                  label={option.NamaJenisBarang}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            style={{ width: '100%' }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} style={st_textfield} name='JenisBarang' label=\"JenisBarang\" variant=\"outlined\" placeholder=\"JenisBarang\" />\r\n            )}\r\n          />\r\n\r\n          <label>Cari Jumlah Stok:</label><br />\r\n          <TextField\r\n            style={st_halftextfield}\r\n            variant='outlined'\r\n            onChange={this.Form_OnChange}\r\n            type='number'\r\n            label='Jumlah Stok Minimum'\r\n            name='StokMin'\r\n            value={StokMin}\r\n          /><br />\r\n          <TextField\r\n            style={st_halftextfield}\r\n            variant='outlined'\r\n            onChange={this.Form_OnChange}\r\n            type='number'\r\n            label='Jumlah Stok Maksimum'\r\n            name='StokMax'\r\n            value={StokMax}\r\n          /><br />\r\n\r\n          <label>Cari Berdasarkan Harga Jual:</label><br />\r\n          <TextField\r\n            style={st_halftextfield}\r\n            variant='outlined'\r\n            onChange={this.Form_OnChange}\r\n            type='number'\r\n            label='Harga Jual Minimum'\r\n            name='HargaJualMin'\r\n            value={HargaJualMin}\r\n            InputProps={{\r\n              startAdornment:\r\n                <InputAdornment position=\"start\">\r\n                  Rp\r\n                </InputAdornment>,\r\n            }}\r\n          /><br />\r\n          <TextField\r\n            style={st_halftextfield}\r\n            variant='outlined'\r\n            onChange={this.Form_OnChange}\r\n            type='number'\r\n            label='Harga Jual Maksimum'\r\n            name='HargaJualMax'\r\n            value={HargaJualMax}\r\n            InputProps={{\r\n              startAdornment:\r\n                <InputAdornment position=\"start\">\r\n                  Rp\r\n                </InputAdornment>,\r\n            }}\r\n          /><br />\r\n\r\n          <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Keteragan' name='Ket' value={Ket} />\r\n          <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n  BarangList: state.KasirQu_Barang.BarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_JenisBarang_List, Load_Barang_List, Load_Query_Graph_Aset_List, Create_Warning_Messages })(QueryAset)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport AsetGraph from '../../../Containers/Help/Help.Graph.Aset'\r\nimport QueryAset from '../../../Containers/Help/Help.Graph.Query.Aset'\r\n\r\nconst GraphAset = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' variant='h3' >Aset</Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryAset />}\r\n            />\r\n            <AsetGraph />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default GraphAset","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Graph_UangMasuk_List } from '../../../Store/Actions/Help.Actions'\r\nimport { get_BarangId_Detail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass UangMasukGraph extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Graph_UangMasuk_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_graph_uangmasuk', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_graph_uangmasuk', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_graph_uangmasuk', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('table_graph_uangmasuk', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.GraphUangMasukList\r\n        ////// sumdata\r\n        const TotalUangMasuk = data.reduce((prev, cur) => {\r\n            return prev + cur.UangMasuk\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Tanggal)\r\n        const graphdatasetsdata = data.map((item) => item.UangMasuk)\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='bar'\r\n                                labels={graphlabels}\r\n                                datasetslabel='Grafik Jumlah Uang Masuk'\r\n                                datasetsdata={graphdatasetsdata}\r\n                            />\r\n\r\n                            <Table stickyHeader id='table_graph_uangmasuk'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(2)}>Total Uang Masuk&nbsp;(Rp)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.UangMasuk)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalUangMasuk)}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    GraphUangMasukList: state.KasirQu_Help.GraphUangMasukList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Graph_UangMasuk_List, get_BarangId_Detail })(UangMasukGraph)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Graph_UangMasuk_List } from '../../../Store/Actions/Help.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, Button, InputAdornment, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nconst date = new Date()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass QueryUangMasuk extends React.Component {\r\n  state = {\r\n    isAllData: false,\r\n    isAllDate: false,\r\n    DateMin: `${yyyy}-${mm}-01T00:01`,\r\n    DateMax: '',\r\n    TotalTransaksiMin: '',\r\n    TotalTransaksiMax: '',\r\n    GrafikView: 'harian',\r\n  }\r\n  Form_OnChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  CheckBox_OnChange = E => {\r\n    this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n  }\r\n  handleRadioChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  Form_OnSubmit = E => {\r\n    E.preventDefault()\r\n    const { isAllData, isAllDate } = this.state\r\n    const data = {\r\n      DateMin: isAllData ? null : (isAllDate ? null : this.state.DateMin),\r\n      DateMax: isAllData ? null : (isAllDate ? null : this.state.DateMax),\r\n      TotalTransaksiMin: isAllData ? null : this.state.TotalTransaksiMin,\r\n      TotalTransaksiMax: isAllData ? null : this.state.TotalTransaksiMax,\r\n      GrafikView: (isAllData || isAllDate) ? 'bulanan' : this.state.GrafikView,\r\n    }\r\n    if ((!data.DateMin && !data.DateMax) || (isAllData) || (isAllDate)) {\r\n      this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n    }\r\n    if (\r\n      ((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin))\r\n      || ((data.TotalTransaksiMax < data.TotalTransaksiMin) && (data.TotalTransaksiMax && data.TotalTransaksiMin))\r\n    ) {\r\n      this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n    }\r\n    this.props.Load_Query_Graph_UangMasuk_List(data)\r\n  }\r\n  render() {\r\n    const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n    const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n    const {\r\n      isAllData,\r\n      isAllDate,\r\n      DateMin,\r\n      DateMax,\r\n      TotalTransaksiMin,\r\n      TotalTransaksiMax,\r\n      GrafikView,\r\n    } = this.state\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.Form_OnSubmit}>\r\n          <label>Cari dari Keseluruhan Data:</label><br />\r\n          <div className='switch' style={MUI_VerticalMargin}>\r\n            <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n          </div><br />\r\n\r\n          {!isAllData ? (\r\n            <Fragment>\r\n              <FormControl style={st_textfield}>\r\n                <FormLabel >Penampakan Grafik</FormLabel>\r\n                <RadioGroup name='GrafikView' value={GrafikView} onChange={this.handleRadioChange}>\r\n                  <FormControlLabel value=\"harian\" control={<Radio />} label=\"perHari\" />\r\n                  <FormControlLabel value=\"bulanan\" control={<Radio />} label=\"perBulan\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n              <div className='switch' style={MUI_VerticalMargin}>\r\n                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n              </div><br />\r\n\r\n              {!isAllDate ? (\r\n                <Fragment>\r\n                  <label>Cari Berdasarkan Tanggal:</label><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                </Fragment>\r\n              ) : null}\r\n\r\n              {/* <label>{`Cari Berdasarkan Total Transaksi ${GrafikView === 'harian' ? 'perHari' : 'perBulan'}:`}</label><br /> */}\r\n              <label>Cari Berdasarkan Total Transaksi perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Transaksi Minimum'\r\n                name='TotalTransaksiMin'\r\n                value={TotalTransaksiMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Transaksi Maksimum'\r\n                name='TotalTransaksiMax'\r\n                value={TotalTransaksiMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { Load_Query_Graph_UangMasuk_List, Create_Info_Messages, Create_Warning_Messages })(QueryUangMasuk)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport UangMasukGraph from '../../../Containers/Help/Help.Graph.UangMasuk'\r\nimport QueryUangMasuk from '../../../Containers/Help/Help.Graph.Query.UangMasuk'\r\n\r\nconst UangMasuk = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' variant='h3' >Uang Masuk</Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryUangMasuk />}\r\n            />\r\n            <UangMasukGraph />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default UangMasuk","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Graph_UangKeluar_List } from '../../../Store/Actions/Help.Actions'\r\nimport { get_BarangId_Detail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass UangKeluarGraph extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Graph_UangKeluar_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_graph_uangkeluar', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_graph_uangkeluar', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_graph_uangkeluar', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('table_graph_uangkeluar', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.GraphUangKeluarList\r\n        ////// sumdata\r\n        const TotalUangKeluar = data.reduce((prev, cur) => {\r\n            return prev + cur.UangKeluar\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Tanggal)\r\n        const graphdatasetsdata = data.map((item) => item.UangKeluar)\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='bar'\r\n                                labels={graphlabels}\r\n                                datasetslabel='Grafik Jumlah Uang Keluar'\r\n                                datasetsdata={graphdatasetsdata}\r\n                            />\r\n\r\n                            <Table stickyHeader id='table_graph_uangkeluar'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(2)}>Total Uang Keluar&nbsp;(Rp)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.UangKeluar)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalUangKeluar)}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    GraphUangKeluarList: state.KasirQu_Help.GraphUangKeluarList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Graph_UangKeluar_List, get_BarangId_Detail })(UangKeluarGraph)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Graph_UangKeluar_List } from '../../../Store/Actions/Help.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, Button, InputAdornment, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nconst date = new Date()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass QueryUangKeluar extends React.Component {\r\n  state = {\r\n    isAllData: false,\r\n    isAllDate: false,\r\n    DateMin: `${yyyy}-${mm}-01T00:01`,\r\n    DateMax: '',\r\n    TotalTransaksiMin: '',\r\n    TotalTransaksiMax: '',\r\n    GrafikView: 'harian',\r\n  }\r\n  Form_OnChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  CheckBox_OnChange = E => {\r\n    this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n  }\r\n  handleRadioChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  Form_OnSubmit = E => {\r\n    E.preventDefault()\r\n    const { isAllData, isAllDate } = this.state\r\n    const data = {\r\n      DateMin: isAllData ? null : (isAllDate ? null : this.state.DateMin),\r\n      DateMax: isAllData ? null : (isAllDate ? null : this.state.DateMax),\r\n      TotalTransaksiMin: isAllData ? null : this.state.TotalTransaksiMin,\r\n      TotalTransaksiMax: isAllData ? null : this.state.TotalTransaksiMax,\r\n      GrafikView: (isAllData || isAllDate) ? 'bulanan' : this.state.GrafikView,\r\n    }\r\n    if ((!data.DateMin && !data.DateMax) || (isAllData) || (isAllDate)) {\r\n      this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n    }\r\n    if (\r\n      ((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin))\r\n      || ((data.TotalTransaksiMax < data.TotalTransaksiMin) && (data.TotalTransaksiMax && data.TotalTransaksiMin))\r\n    ) {\r\n      this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n    }\r\n    this.props.Load_Query_Graph_UangKeluar_List(data)\r\n  }\r\n  render() {\r\n    const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n    const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n    const {\r\n      isAllData,\r\n      isAllDate,\r\n      DateMin,\r\n      DateMax,\r\n      TotalTransaksiMin,\r\n      TotalTransaksiMax,\r\n      GrafikView,\r\n    } = this.state\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.Form_OnSubmit}>\r\n          <label>Cari dari Keseluruhan Data:</label><br />\r\n          <div className='switch' style={MUI_VerticalMargin}>\r\n            <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n          </div><br />\r\n\r\n          {!isAllData ? (\r\n            <Fragment>\r\n              <FormControl style={st_textfield}>\r\n                <FormLabel >Penampakan Grafik</FormLabel>\r\n                <RadioGroup name='GrafikView' value={GrafikView} onChange={this.handleRadioChange}>\r\n                  <FormControlLabel value=\"harian\" control={<Radio />} label=\"perHari\" />\r\n                  <FormControlLabel value=\"bulanan\" control={<Radio />} label=\"perBulan\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n              <div className='switch' style={MUI_VerticalMargin}>\r\n                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n              </div><br />\r\n\r\n              {!isAllDate ? (\r\n                <Fragment>\r\n                  <label>Cari Berdasarkan Tanggal:</label><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                </Fragment>\r\n              ) : null}\r\n\r\n              {/* <label>{`Cari Berdasarkan Total Transaksi ${GrafikView === 'harian' ? 'perHari' : 'perBulan'}:`}</label><br /> */}\r\n              <label>Cari Berdasarkan Total Transaksi perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Transaksi Minimum'\r\n                name='TotalTransaksiMin'\r\n                value={TotalTransaksiMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Transaksi Maksimum'\r\n                name='TotalTransaksiMax'\r\n                value={TotalTransaksiMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { Load_Query_Graph_UangKeluar_List, Create_Info_Messages, Create_Warning_Messages })(QueryUangKeluar)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport UangKeluarGraph from '../../../Containers/Help/Help.Graph.UangKeluar'\r\nimport QueryUangKeluar from '../../../Containers/Help/Help.Graph.Query.UangKeluar'\r\n\r\nconst UangKeluar = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' variant='h3' >Uang Keluar</Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryUangKeluar />}\r\n            />\r\n            <UangKeluarGraph />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default UangKeluar","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Graph_UangLose_List } from '../../../Store/Actions/Help.Actions'\r\nimport { get_BarangId_Detail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Money, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport { ConvertInttoMoney } from '../Formater'\r\nimport Charting from '../Charting'\r\n\r\nclass UangLoseGraph extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Graph_UangLose_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_graph_uanglose', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_graph_uanglose', ColumnNumb)\r\n    }\r\n    ButtonShortMoney(ColumnNumb) {\r\n        Short_Column_Money('table_graph_uanglose', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('table_graph_uanglose', ColumnNumb)\r\n    }\r\n    ConverNumberToMoneyFormat(OriginValue) {\r\n        const MoneyFormate = ConvertInttoMoney(OriginValue ? OriginValue : 0)\r\n        return MoneyFormate\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.GraphUangLoseList\r\n        ////// sumdata\r\n        const TotalUangLose = data.reduce((prev, cur) => {\r\n            return prev + cur.UangLose\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Tanggal)\r\n        const graphdatasetsdata = data.map((item) => item.UangLose)\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='bar'\r\n                                labels={graphlabels}\r\n                                datasetslabel='Grafik Jumlah Uang Lose'\r\n                                datasetsdata={graphdatasetsdata}\r\n                            />\r\n\r\n                            <Table stickyHeader id='table_graph_uanglose'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortMoney(2)}>Total Uang Lose&nbsp;(Rp)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">{this.ConverNumberToMoneyFormat(item.UangLose)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{this.ConverNumberToMoneyFormat(TotalUangLose)}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    GraphUangLoseList: state.KasirQu_Help.GraphUangLoseList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Graph_UangLose_List, get_BarangId_Detail })(UangLoseGraph)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Graph_UangLose_List } from '../../../Store/Actions/Help.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, Button, InputAdornment, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nconst date = new Date()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass QueryUangKeluar extends React.Component {\r\n  state = {\r\n    isAllData: false,\r\n    isAllDate: false,\r\n    DateMin: `${yyyy}-${mm}-01T00:01`,\r\n    DateMax: '',\r\n    DiskonMin: '',\r\n    DiskonMax: '',\r\n    PotonganMin: '',\r\n    PotonganMax: '',\r\n    GrafikView: 'harian',\r\n  }\r\n  Form_OnChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  CheckBox_OnChange = E => {\r\n    this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n  }\r\n  handleRadioChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  Form_OnSubmit = E => {\r\n    E.preventDefault()\r\n    const { isAllData, isAllDate } = this.state\r\n    const data = {\r\n      DateMin: isAllData ? null : (isAllDate ? null : this.state.DateMin),\r\n      DateMax: isAllData ? null : (isAllDate ? null : this.state.DateMax),\r\n      DiskonMin: isAllData ? null : this.state.DiskonMin,\r\n      DiskonMax: isAllData ? null : this.state.DiskonMax,\r\n      PotonganMin: isAllData ? null : this.state.PotonganMin,\r\n      PotonganMax: isAllData ? null : this.state.PotonganMax,\r\n      GrafikView: (isAllData || isAllDate) ? 'bulanan' : this.state.GrafikView,\r\n    }\r\n    if ((!data.DateMin && !data.DateMax) || (isAllData) || (isAllDate)) {\r\n      this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n    }\r\n    if (\r\n      ((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin))\r\n      || ((data.PotonganMax < data.PotonganMin) && (data.PotonganMax && data.PotonganMin))\r\n      || ((data.DiskonMax < data.DiskonMin) && (data.DiskonMax && data.DiskonMin))\r\n    ) {\r\n      this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n    }\r\n    this.props.Load_Query_Graph_UangLose_List(data)\r\n  }\r\n  render() {\r\n    const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n    const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n    const {\r\n      isAllData,\r\n      isAllDate,\r\n      DateMin,\r\n      DateMax,\r\n      DiskonMin,\r\n      DiskonMax,\r\n      PotonganMin,\r\n      PotonganMax,\r\n      GrafikView,\r\n    } = this.state\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.Form_OnSubmit}>\r\n          <label>Cari dari Keseluruhan Data:</label><br />\r\n          <div className='switch' style={MUI_VerticalMargin}>\r\n            <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n          </div><br />\r\n\r\n          {!isAllData ? (\r\n            <Fragment>\r\n              <FormControl style={st_textfield}>\r\n                <FormLabel >Penampakan Grafik</FormLabel>\r\n                <RadioGroup name='GrafikView' value={GrafikView} onChange={this.handleRadioChange}>\r\n                  <FormControlLabel value=\"harian\" control={<Radio />} label=\"perHari\" />\r\n                  <FormControlLabel value=\"bulanan\" control={<Radio />} label=\"perBulan\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n              <div className='switch' style={MUI_VerticalMargin}>\r\n                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n              </div><br />\r\n\r\n              {!isAllDate ? (\r\n                <Fragment>\r\n                  <label>Cari Berdasarkan Tanggal:</label><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                </Fragment>\r\n              ) : null}\r\n\r\n              <label>Cari Berdasarkan Diskon perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Diskon Transaksi Minimum'\r\n                name='DiskonMin'\r\n                value={DiskonMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      %\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Diskon Maksimum'\r\n                name='DiskonMax'\r\n                value={DiskonMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      %\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n              <label>Cari Berdasarkan Potongan perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Potongan Transaksi Minimum'\r\n                name='PotonganMin'\r\n                value={PotonganMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Potongan Maksimum'\r\n                name='PotonganMax'\r\n                value={PotonganMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { Load_Query_Graph_UangLose_List, Create_Info_Messages, Create_Warning_Messages })(QueryUangKeluar)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport UangLoseGraph from '../../../Containers/Help/Help.Graph.UangLose'\r\nimport QueryUangLose from '../../../Containers/Help/Help.Graph.Query.UangLose'\r\n\r\nconst UangLose = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' variant='h3' >Uang Lose</Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryUangLose />}\r\n            />\r\n            <UangLoseGraph />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default UangLose","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Graph_IntensitasTransaksi_List } from '../../../Store/Actions/Help.Actions'\r\nimport { get_BarangId_Detail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport Charting from '../Charting'\r\n\r\nclass IntensitasTransaksiGraph extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Graph_IntensitasTransaksi_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('table_graph_intensitastransaksi', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('table_graph_intensitastransaksi', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('table_graph_intensitastransaksi', ColumnNumb)\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.GraphIntensitasTransaksiList\r\n        ////// sumdata\r\n        const TotalIntensitasTransaksi = data.reduce((prev, cur) => {\r\n            return prev + cur.IntensitasTransaksi\r\n        }, 0)\r\n        ////// graphdata\r\n        const graphlabels = data.map((item) => item.Tanggal)\r\n        const graphdatasetsdata = data.map((item) => item.IntensitasTransaksi)\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='bar'\r\n                                labels={graphlabels}\r\n                                datasetslabel='Grafik Jumlah Intensitas Transaksi'\r\n                                datasetsdata={graphdatasetsdata}\r\n                            />\r\n\r\n                            <Table stickyHeader id='table_graph_intensitastransaksi'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" onClick={() => this.ButtonShortDate(1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortINT(2)}>Intensitas Transaksi</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">{item.IntensitasTransaksi}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" >Total:</TableCell>\r\n                                        <TableCell style={{ width: '25%' }} align=\"center\" ></TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align=\"right\" >{TotalIntensitasTransaksi}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                            </Table>\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    GraphIntensitasTransaksiList: state.KasirQu_Help.GraphIntensitasTransaksiList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Graph_IntensitasTransaksi_List, get_BarangId_Detail })(IntensitasTransaksiGraph)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Graph_IntensitasTransaksi_List } from '../../../Store/Actions/Help.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, Button, InputAdornment, FormLabel, RadioGroup, FormControlLabel, Radio, InputLabel, Select } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nconst date = new Date()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass QueryIntensitasTransaksi extends React.Component {\r\n  state = {\r\n    isAllData: false,\r\n    isAllDate: false,\r\n    NamaKasir: '',\r\n    DateMin: `${yyyy}-${mm}-01T00:01`,\r\n    DateMax: '',\r\n    Jenis: '',\r\n    DiskonMin: '',\r\n    DiskonMax: '',\r\n    PotonganHargaMin: '',\r\n    PotonganHargaMax: '',\r\n    TotalPembayaranMin: '',\r\n    TotalPembayaranMax: '',\r\n    GrafikView: 'harian',\r\n  }\r\n  Form_OnChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  CheckBox_OnChange = E => {\r\n    this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n  }\r\n  handleRadioChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  Form_OnSubmit = E => {\r\n    E.preventDefault()\r\n    const { isAllData, isAllDate } = this.state\r\n    const data = {\r\n      NamaKasir: isAllData ? null : this.state.NamaKasir,\r\n      DateMin: isAllData ? null : (isAllDate ? null : this.state.DateMin),\r\n      DateMax: isAllData ? null : (isAllDate ? null : this.state.DateMax),\r\n      Jenis: isAllData ? null : this.state.Jenis,\r\n      DiskonMin: isAllData ? null : this.state.DiskonMin,\r\n      DiskonMax: isAllData ? null : this.state.DiskonMax,\r\n      PotonganHargaMin: isAllData ? null : this.state.PotonganHargaMin,\r\n      PotonganHargaMax: isAllData ? null : this.state.PotonganHargaMax,\r\n      TotalPembayaranMin: isAllData ? null : this.state.TotalPembayaranMin,\r\n      TotalPembayaranMax: isAllData ? null : this.state.TotalPembayaranMax,\r\n      GrafikView: isAllData ? 'bulanan' : this.state.GrafikView,\r\n    }\r\n    if ((!data.DateMin && !data.DateMax) || (isAllData) || (isAllDate)) {\r\n      this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n    }\r\n    if (\r\n      ((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin))\r\n      || ((data.DiskonMax < data.DiskonMin) && (data.DiskonMax && data.DiskonMin))\r\n      || ((data.PotonganHargaMax < data.PotonganHargaMin) && (data.PotonganHargaMax && data.PotonganHargaMin))\r\n      || ((data.TotalPembayaranMax < data.TotalPembayaranMin) && (data.TotalPembayaranMax && data.TotalPembayaranMin))\r\n    ) {\r\n      this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n    }\r\n    this.props.Load_Query_Graph_IntensitasTransaksi_List(data)\r\n  }\r\n  render() {\r\n    const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n    const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n    const {\r\n      isAllData,\r\n      isAllDate,\r\n      NamaKasir,\r\n      DateMin,\r\n      DateMax,\r\n      Jenis,\r\n      DiskonMin,\r\n      DiskonMax,\r\n      PotonganHargaMin,\r\n      PotonganHargaMax,\r\n      TotalPembayaranMin,\r\n      TotalPembayaranMax,\r\n      GrafikView,\r\n    } = this.state\r\n\r\n    const JenisOptions = ['Belanja', 'Transaksi']\r\n\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.Form_OnSubmit}>\r\n          <label>Cari dari Keseluruhan Data:</label><br />\r\n          <div className='switch' style={MUI_VerticalMargin}>\r\n            <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n          </div><br />\r\n\r\n          {!isAllData ? (\r\n            <Fragment>\r\n              <FormControl style={st_textfield}>\r\n                <FormLabel >Penampakan Grafik</FormLabel>\r\n                <RadioGroup name='GrafikView' value={GrafikView} onChange={this.handleRadioChange}>\r\n                  <FormControlLabel value=\"pr_jam\" control={<Radio />} label=\"Persentase perJam\" />\r\n                  <FormControlLabel value=\"pr_harian\" control={<Radio />} label=\"Persentase perHari\" />\r\n                  <FormControlLabel value=\"harian\" control={<Radio />} label=\"perHari\" />\r\n                  <FormControlLabel value=\"bulanan\" control={<Radio />} label=\"perBulan\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Nama Kasir' name='NamaKasir' value={NamaKasir} />\r\n\r\n              <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n              <div className='switch' style={MUI_VerticalMargin}>\r\n                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n              </div><br />\r\n\r\n              {!isAllDate ? (\r\n                <Fragment>\r\n                  <label>Cari Berdasarkan Tanggal:</label><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                </Fragment>\r\n              ) : null}\r\n\r\n              <FormControl style={st_textfield} variant=\"filled\">\r\n                <InputLabel shrink >Jenis Transaksi</InputLabel>\r\n                <Select native onChange={this.Form_OnChange} label=\"Jenis Transaksi\" name='Jenis' value={Jenis} labelWidth={100} >\r\n                  <option value=\"\"> -- select an option -- </option>\r\n                  {JenisOptions.map((item, index) =>\r\n                    <option key={index} value={item}>{item}</option>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <label>Cari Berdasarkan Total Diskon perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Diskon Minimum'\r\n                name='DiskonMin'\r\n                value={DiskonMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      %\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Diskon Maksimum'\r\n                name='DiskonMax'\r\n                value={DiskonMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      %\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n              <label>Cari Berdasarkan Total Potongan Harga perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Potongan Harga Minimum'\r\n                name='PotonganHargaMin'\r\n                value={PotonganHargaMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Potongan Harga Maksimum'\r\n                name='PotonganHargaMax'\r\n                value={PotonganHargaMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n              <label>Cari Berdasarkan Total Pembayaran perTransaksi:</label><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Transaksi Minimum'\r\n                name='TotalPembayaranMin'\r\n                value={TotalPembayaranMin}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                style={st_halftextfield}\r\n                variant='outlined'\r\n                onChange={this.Form_OnChange}\r\n                type='number'\r\n                label='Total Transaksi Maksimum'\r\n                name='TotalPembayaranMax'\r\n                value={TotalPembayaranMax}\r\n                InputProps={{\r\n                  startAdornment:\r\n                    <InputAdornment position=\"start\">\r\n                      Rp\r\n                    </InputAdornment>,\r\n                }}\r\n              /><br />\r\n\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { Load_Query_Graph_IntensitasTransaksi_List, Create_Info_Messages, Create_Warning_Messages })(QueryIntensitasTransaksi)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport IntensitasTransaksiGraph from '../../../Containers/Help/Help.Graph.IntensitasTransaksi'\r\nimport QueryIntensitasTransaksi from '../../../Containers/Help/Help.Graph.Query.IntensitasTransaksi'\r\n\r\nconst IntensitasTransaksi = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' variant='h3' >Intensitas Transaksi</Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryIntensitasTransaksi />}\r\n            />\r\n            <IntensitasTransaksiGraph />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default IntensitasTransaksi","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Graph_IntensitasBarangTransaksi_List } from '../../../Store/Actions/Help.Actions'\r\nimport { get_BarangId_Detail } from '../../../Store/Actions/Barang.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Date } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { MUI_HorizontalMargin, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport Charting from '../Charting'\r\n\r\nclass IntensitasBarangTransaksiGraph extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Graph_IntensitasBarangTransaksi_List()\r\n    }\r\n    ButtonShortSTR(TableName, ColumnNumb) {\r\n        Short_Column_STR(TableName, ColumnNumb)\r\n    }\r\n    ButtonShortINT(TableName, ColumnNumb) {\r\n        Short_Column_INT(TableName, ColumnNumb)\r\n    }\r\n    ButtonShortDate(TableName, ColumnNumb) {\r\n        Short_Column_Date(TableName, ColumnNumb)\r\n    }\r\n    onClick_get_BarangId_Detail(BarangID) {\r\n        this.props.get_BarangId_Detail(BarangID)\r\n    }\r\n    RandomColor() {\r\n        const letters = '0123456789ABCDEF'\r\n        let color = '#'\r\n        let i = 0\r\n        while (i < 6) {\r\n            color += letters[Math.floor(Math.random() * 16)]\r\n            i = i + 1\r\n        }\r\n        return color\r\n    }\r\n    render() {\r\n        ////// data\r\n        const data = this.props.GraphIntensitasBarangTransaksiList\r\n        ////// graphdata\r\n        const GraphData = (Dataset) => {\r\n            // console.log('Log: IntensitasBarangTransaksiGraph -> GraphData -> Dataset', Dataset)\r\n            try {\r\n                if (!Dataset) {\r\n                    throw new Error(\r\n                        'Dataset tidak ada'\r\n                    )\r\n                }\r\n\r\n                const DataGraph = {}\r\n                const GraphLabels = []\r\n                const GraphData = []\r\n                let i = 0\r\n                Dataset.forEach(element => {\r\n                    const Dataset_Tanggal = element.Tanggal\r\n                    const ExistTanggal = GraphLabels.find(item => item === Dataset_Tanggal)\r\n                    if (!ExistTanggal) {\r\n                        GraphLabels.push(Dataset_Tanggal)\r\n                    }\r\n\r\n                    const Dataset_IntensitasBarangTransaksi = element.IntensitasBarangTransaksi ? element.IntensitasBarangTransaksi : []\r\n                    if (Dataset_IntensitasBarangTransaksi.length === 0) {\r\n                        let j = 0\r\n                        while (j < GraphData.length) {\r\n                            GraphData[j].data.push(0)\r\n                            j = j + 1\r\n                        }\r\n                    } else {\r\n                        const ExistBarangList = []\r\n                        Dataset_IntensitasBarangTransaksi.forEach(element_element => {\r\n                            const Dataset_Barcode = element_element.Barcode\r\n                            const InedexBarang = GraphData.findIndex(item => item.label === Dataset_Barcode)\r\n                            if (InedexBarang >= 0) {\r\n                                // console.log('InedexBarang', InedexBarang)\r\n                                ExistBarangList.push(InedexBarang)\r\n                                const IntensitasBarangTransaksi_IntensitasBarangTransaksi = element_element.IntensitasBarangTransaksi\r\n                                GraphData[InedexBarang].data.push(IntensitasBarangTransaksi_IntensitasBarangTransaksi)\r\n                            } else {\r\n                                const newGraphData_data = []\r\n                                const InedexBarang = GraphData.length\r\n                                ExistBarangList.push(InedexBarang)\r\n                                let k = 0\r\n                                while (k < i) {\r\n                                    newGraphData_data.push(0)\r\n                                    k = k + 1\r\n                                }\r\n                                const IntensitasBarangTransaksi_IntensitasBarangTransaksi = element_element.IntensitasBarangTransaksi\r\n                                const newColor = this.RandomColor()\r\n                                newGraphData_data.push(IntensitasBarangTransaksi_IntensitasBarangTransaksi)\r\n                                const newGraphData = {\r\n                                    label: Dataset_Barcode,\r\n                                    data: newGraphData_data,\r\n                                    backgroundColor: newColor,\r\n                                    fill: false,\r\n                                    borderColor: newColor,\r\n                                }\r\n                                GraphData.push(newGraphData)\r\n                            }\r\n                        })\r\n\r\n                        let l = 0\r\n                        // console.log(Dataset_Tanggal)\r\n                        // console.log('length', ExistBarangList.length)\r\n                        // console.log('ExistBarangList', ExistBarangList)\r\n                        while (l < GraphData.length) {\r\n                            const IndexExistBarangList = ExistBarangList.includes(l)\r\n                            // console.log(IndexExistBarangList)\r\n                            if (!IndexExistBarangList) {\r\n                                GraphData[l].data.push(0)\r\n                            }\r\n                            l = l + 1\r\n                        }\r\n                    }\r\n                    i = i + 1\r\n                })\r\n\r\n                // console.log('Log: IntensitasBarangTransaksiGraph -> GraphData -> GraphData', GraphData)\r\n                Object.assign(DataGraph, { datasets: GraphData })\r\n                Object.assign(DataGraph, { labels: GraphLabels })\r\n                // console.log('Log: IntensitasBarangTransaksiGraph -> GraphData -> DataGraph', DataGraph)\r\n                return DataGraph\r\n            } catch (err) {\r\n                console.log('Log: IntensitasBarangTransaksiGraph -> GraphData -> err', err)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    (data && data.length > 0) ? (\r\n                        <Fragment>\r\n                            <Charting\r\n                                canvasstyle={{ ...MUI_HorizontalMargin, ...MUI_VerticalMargin, width: '800px', height: '300px', padding: '10px' }}\r\n                                type='line'\r\n                                data={GraphData(data)}\r\n                            />\r\n\r\n                            <Table stickyHeader id='table_graph_intensibarangtastransaksi'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT('table_graph_intensibarangtastransaksi', 0)}>No</TableCell>\r\n                                        <TableCell style={{ width: '15%' }} align=\"center\" onClick={() => this.ButtonShortDate('table_graph_intensibarangtastransaksi', 1)}>Tanggal</TableCell>\r\n                                        <TableCell style={{ width: '70%' }} align=\"center\" >Intensitas Barang Transaksi</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {data.map((item, index) => (\r\n                                        <TableRow hover key={index}>\r\n                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"left\">{item.Tanggal}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {item.IntensitasBarangTransaksi.length > 0 ? (\r\n                                                    <Fragment>\r\n                                                        <Table stickyHeader id={`table_graph_barangtransaksiharian_${index}`}>\r\n                                                            <TableHead>\r\n                                                                <TableRow>\r\n                                                                    <TableCell style={{ width: '5%' }} align=\"center\" onClick={() => this.ButtonShortINT(`table_graph_barangtransaksiharian_${index}`, 0)}>No</TableCell>\r\n                                                                    <TableCell style={{ width: '15%' }} align=\"center\" onClick={() => this.ButtonShortSTR(`table_graph_barangtransaksiharian_${index}`, 1)}>Barcode</TableCell>\r\n                                                                    <TableCell style={{ width: '15%' }} align=\"center\" onClick={() => this.ButtonShortSTR(`table_graph_barangtransaksiharian_${index}`, 2)}>NamaBarang</TableCell>\r\n                                                                    <TableCell style={{ width: '10%' }} align=\"center\" onClick={() => this.ButtonShortINT(`table_graph_barangtransaksiharian_${index}`, 3)}>Intensitas Barang Harian</TableCell>\r\n                                                                </TableRow>\r\n                                                            </TableHead>\r\n                                                            <TableBody>\r\n                                                                {item.IntensitasBarangTransaksi.map((item_item, index_index) => (\r\n                                                                    <TableRow hover key={index_index}>\r\n                                                                        <TableCell align=\"center\">{index_index + 1}</TableCell>\r\n                                                                        <TableCell align=\"left\">{item_item.Barcode}</TableCell>\r\n                                                                        <TableCell align=\"left\">{item_item.NamaBarang}</TableCell>\r\n                                                                        <TableCell align=\"right\">{item_item.IntensitasBarangTransaksi}</TableCell>\r\n                                                                    </TableRow>\r\n                                                                ))}\r\n                                                            </TableBody>\r\n                                                        </Table>\r\n                                                    </Fragment>\r\n                                                ) : ''}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Fragment>\r\n                    ) : <DataTidakDitemukan />\r\n                }\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHelpLoading: state.KasirQu_Help.isHelpLoading,\r\n    GraphIntensitasBarangTransaksiList: state.KasirQu_Help.GraphIntensitasBarangTransaksiList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Graph_IntensitasBarangTransaksi_List, get_BarangId_Detail })(IntensitasBarangTransaksiGraph)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Query_Graph_IntensitasBarangTransaksi_List } from '../../../Store/Actions/Help.Actions'\r\nimport { Load_Barang_List } from '../../../Store/Actions/Barang.Actions'\r\nimport { Load_JenisBarang_List } from '../../../Store/Actions/JenisBarang.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, Button, FormLabel, RadioGroup, FormControlLabel, Radio, InputLabel, Select, Chip } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\n// Transaksi -> DateMin|DateMax\r\n// Transaksi -> Tipe\r\n// JenisBarang -> Kepemilikan \r\n// Barang -> JenisList []\r\n// Barang -> BarangList []\r\n\r\nconst date = new Date()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass QueryIntensitasBarangTransaksi extends React.Component {\r\n  state = {\r\n    isAllData: false,\r\n    isAllDate: false,\r\n    DateMin: `${yyyy}-${mm}-01T00:01`,\r\n    DateMax: '',\r\n    Tipe: '',\r\n    Kepemilikan: '',\r\n    JenisBarang: [],\r\n    Barang: [],\r\n    GrafikView: 'harian',\r\n  }\r\n  componentDidMount() {\r\n    this.props.Load_Barang_List()\r\n    this.props.Load_JenisBarang_List()\r\n  }\r\n  Form_OnChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  CheckBox_OnChange = E => {\r\n    this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n  }\r\n  handleRadioChange = E => {\r\n    this.setState({ [E.target.name]: E.target.value })\r\n  }\r\n  Form_OnSubmit = E => {\r\n    E.preventDefault()\r\n    const { isAllData, isAllDate } = this.state\r\n    const data = {\r\n      DateMin: isAllData ? null : (isAllDate ? null : this.state.DateMin),\r\n      DateMax: isAllData ? null : (isAllDate ? null : this.state.DateMax),\r\n      Tipe: isAllData ? null : this.state.Tipe,\r\n      Kepemilikan: isAllData ? null : this.state.Kepemilikan,\r\n      JenisBarang: isAllData ? null : this.state.JenisBarang,\r\n      Barang: isAllData ? null : this.state.Barang,\r\n      GrafikView: isAllData ? 'bulanan' : this.state.GrafikView,\r\n    }\r\n    if ((!data.DateMin && !data.DateMax) || (isAllData) || (isAllDate)) {\r\n      this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n    }\r\n    if (\r\n      ((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin))) {\r\n      this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n    }\r\n    this.props.Load_Query_Graph_IntensitasBarangTransaksi_List(data)\r\n  }\r\n  render() {\r\n    const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n    const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n    const {\r\n      isAllData,\r\n      isAllDate,\r\n      DateMin,\r\n      DateMax,\r\n      Tipe,\r\n      Kepemilikan,\r\n      JenisBarang,\r\n      Barang,\r\n      GrafikView,\r\n    } = this.state\r\n\r\n    const TipeOptions = ['Belanja', 'Transaksi']\r\n    const KepemilikanOptions = ['pribadi', 'nonpribadi']\r\n    const JenisBarangOptions = this.props.JenisBarangList\r\n    const BarangOptions = this.props.BarangList\r\n\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.Form_OnSubmit}>\r\n          <label>Cari dari Keseluruhan Data:</label><br />\r\n          <div className='switch' style={MUI_VerticalMargin}>\r\n            <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n          </div><br />\r\n\r\n          {!isAllData ? (\r\n            <Fragment>\r\n              <FormControl style={st_textfield}>\r\n                <FormLabel >Penampakan Grafik</FormLabel>\r\n                <RadioGroup name='GrafikView' value={GrafikView} onChange={this.handleRadioChange}>\r\n                  {/* <FormControlLabel value=\"pr_jam\" control={<Radio />} label=\"Persentase perJam\" /> */}\r\n                  {/* <FormControlLabel value=\"pr_harian\" control={<Radio />} label=\"Persentase perHari\" /> */}\r\n                  <FormControlLabel value=\"harian\" control={<Radio />} label=\"perHari\" />\r\n                  <FormControlLabel value=\"bulanan\" control={<Radio />} label=\"perBulan\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n              <div className='switch' style={MUI_VerticalMargin}>\r\n                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n              </div><br />\r\n\r\n              {!isAllDate ? (\r\n                <Fragment>\r\n                  <label>Cari Berdasarkan Tanggal:</label><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                  <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                </Fragment>\r\n              ) : null}\r\n\r\n              <FormControl style={st_textfield} variant=\"filled\">\r\n                <InputLabel shrink >Tipe Transaksi</InputLabel>\r\n                <Select native onChange={this.Form_OnChange} label=\"Tipe Transaksi\" name='Tipe' value={Tipe} labelWidth={100} >\r\n                  <option value=\"\"> -- select an option -- </option>\r\n                  {TipeOptions.map((item, index) =>\r\n                    <option key={index} value={item}>{item}</option>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl style={st_textfield} variant=\"filled\">\r\n                <InputLabel shrink >Kepemilikan Barang</InputLabel>\r\n                <Select native onChange={this.Form_OnChange} label=\"Kepemilikan Barang\" name='Kepemilikan' value={Kepemilikan} labelWidth={100} >\r\n                  <option value=\"\"> -- select an option -- </option>\r\n                  {KepemilikanOptions.map((item, index) =>\r\n                    <option key={index} value={item}>{item}</option>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Autocomplete\r\n                multiple\r\n                value={JenisBarang}\r\n                onChange={(event, newJenisBarang) => {\r\n                  this.setState({ JenisBarang: newJenisBarang })\r\n                }}\r\n\r\n                options={JenisBarangOptions.sort((a, b) => (a.Kepemilikan > b.Kepemilikan) ? 1 : ((b.Kepemilikan > a.Kepemilikan) ? -1 : 0))}\r\n                getOptionLabel={option => typeof option === 'string' ? option : option.NamaJenisBarang}\r\n                groupBy={(option) => option.Kepemilikan}\r\n                renderTags={(tagValue, getTagProps) =>\r\n                  tagValue.map((option, index) => (\r\n                    <Chip\r\n                      label={option.NamaJenisBarang}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                style={{ width: '100%' }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} style={st_textfield} name='JenisBarang' label=\"Jenis Barang\" variant=\"outlined\" placeholder=\"JenisBarang\" />\r\n                )}\r\n              />\r\n\r\n              <Autocomplete\r\n                multiple\r\n                value={Barang}\r\n                onChange={(event, newBarang) => {\r\n                  this.setState({ Barang: newBarang })\r\n                }}\r\n\r\n                options={BarangOptions.sort((a, b) => (a.Jenis > b.Jenis) ? 1 : ((b.Jenis > a.Jenis) ? -1 : 0))}\r\n                getOptionLabel={option => typeof option === 'string' ? option : option.Name}\r\n                groupBy={(option) => option.Jenis}\r\n                renderTags={(tagValue, getTagProps) =>\r\n                  tagValue.map((option, index) => (\r\n                    <Chip\r\n                      label={option.Name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                style={{ width: '100%' }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} style={st_textfield} name='Barang' label=\"Barang\" variant=\"outlined\" placeholder=\"Barang\" />\r\n                )}\r\n              />\r\n\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n        </form>\r\n      </Fragment>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  JenisBarangList: state.KasirQu_JenisBarang.JenisBarangList,\r\n  BarangList: state.KasirQu_Barang.BarangList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Query_Graph_IntensitasBarangTransaksi_List, Load_Barang_List, Load_JenisBarang_List, Create_Info_Messages, Create_Warning_Messages })(QueryIntensitasBarangTransaksi)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../../Containers/Searching'\r\nimport IntensitasBarangTransaksiGraph from '../../../Containers/Help/Help.Graph.IntensitasBarangTransaksi'\r\nimport QueryIntensitasBarangTransaksi from '../../../Containers/Help/Help.Graph.Query.IntensitasBarangTransaksi'\r\n\r\nconst IntensitasBarangTransaksi = () => {\r\n    return (\r\n        <Fragment>\r\n            <Typography align='center' variant='h3' >Intensitas Barang Transaksi</Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryIntensitasBarangTransaksi />}\r\n            />\r\n            <IntensitasBarangTransaksiGraph />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default IntensitasBarangTransaksi","import React, { Fragment } from 'react'\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport GraphAset from './SubPage/Graph.Aset'\r\nimport UangMasuk from './SubPage/Graph.UangMasuk'\r\nimport UangKeluar from './SubPage/Graph.UangKeluar'\r\nimport UangLose from './SubPage/Graph.UangLose'\r\nimport IntensitasTransaksi from './SubPage/Graph.IntensitasTransaksi'\r\nimport IntensitasBarangTransaksi from './SubPage/Graph.IntensitasBarangTransaksi'\r\n\r\nconst Graph = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Laporan Grafik', link: 'help/graph' }]\r\n    const [value, setValue] = React.useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    const TapData = [\r\n        { taplabel: 'Cek Aset', TapPanel: <GraphAset /> },\r\n        { taplabel: 'Cek Uang Masuk', TapPanel: <UangMasuk /> },\r\n        { taplabel: 'Cek Uang Keluar', TapPanel: <UangKeluar /> },\r\n        { taplabel: 'Cek Uang Lose', TapPanel: <UangLose /> },\r\n        { taplabel: 'Intensitas Transaksi', TapPanel: <IntensitasTransaksi /> },\r\n        { taplabel: 'Intensitas Barang Transaksi', TapPanel: <IntensitasBarangTransaksi /> },\r\n    ]\r\n\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Paper style={{ marginBottom: '10px' }} >\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant={TapData.length > 6 ? \"scrollable\" : null}\r\n                    scrollButtons=\"auto\"\r\n                    centered={TapData.length > 6 ? false : true}\r\n                >\r\n                    {TapData.map((tapdata, index) => (\r\n                        <Tab key={index} label={tapdata.taplabel} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            {value === 0 ? TapData[value].TapPanel : null}\r\n            {value === 1 ? TapData[value].TapPanel : null}\r\n            {value === 2 ? TapData[value].TapPanel : null}\r\n            {value === 3 ? TapData[value].TapPanel : null}\r\n            {value === 4 ? TapData[value].TapPanel : null}\r\n            {value === 5 ? TapData[value].TapPanel : null}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Graph","import React, { Fragment } from 'react'\r\n\r\nimport { Typography, Link, List, ListItem, ListItemText, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\n\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded'\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded'\r\n\r\nexport const KasirQuTextAdjustButton = (props) => {\r\n    const AdjustTextSize = (AdditionalSize) => {\r\n        try {\r\n            const txt = document.getElementById(props.AdjustId)\r\n            const style = window.getComputedStyle(txt, null).getPropertyValue('font-size')\r\n            const currentSize = parseFloat(style)\r\n            txt.style.fontSize = ((currentSize + (AdditionalSize) >= 10) ? (currentSize + (AdditionalSize)) : currentSize) + 'px'\r\n        } catch (err) {\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Typography align='right' >\r\n                <Button variant='contained' onClick={() => AdjustTextSize(10)} >+</Button>\r\n                <Button variant='contained' onClick={() => AdjustTextSize(-10)}>-</Button>\r\n            </Typography>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport const KasirQuCreateList = (props) => {\r\n    const Id = props.Id\r\n    const ListData = props.ListData\r\n    const theme = useTheme()\r\n    return (\r\n        <Fragment>\r\n            <List id={Id} >\r\n                {ListData.map((item, index) => (\r\n                    <ListItem key={index}>\r\n                        <ListItemText\r\n                            disableTypography\r\n                        >\r\n                            <p style={{ color: theme.palette.text.secondary }} >\r\n                                <b style={{ color: theme.palette.text.primary }} >\r\n                                    {item.PrimaryText ? item.PrimaryText : ''}\r\n                                </b>\r\n                                <br />\r\n                                {item.SecondaryText ? item.SecondaryText : ''}\r\n                            </p>\r\n                            {item.NonTextContent ? item.NonTextContent : ''}\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n////// AKUN\r\nexport const KasirQuHelp_TingkatanAkun = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Tingkatan Akun', link: 'help/tingkatan_akun' }]\r\n    const Id = 'TingkatanAkun'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu tinggkatan akun?',\r\n            SecondaryText: 'Tingkatan akun adalah pembagian akun berdasarkan beberapa jenis, dimana setiap jenis mempunyai kemampuan/batasan tertentu dalam melakukan suatu hal',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana cara mengecek tingkatan akun saya?',\r\n            SecondaryText: 'Tingkatan akun dapat ditemui QuickMenu-> Account atau Menu utama ->Account',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa saja Tingkatan Akun yang ada?',\r\n            SecondaryText: 'Tingkatan akun dibagi menjadi 3 katagori: kasir, admin dan superuser',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa perbedaan Tingkatan Akun yang satu dengan yang lain?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Untuk melihat detail perbedaan Tingkatan Akun dapat dilihat di <b><Link href='/blog/preview/kasirqu/help/perbedaan_tingkatan_akun'>tautan ini</Link></b>\r\n                </Fragment>\r\n            ),\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >Tingkatan Akun</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport const KasirQuHelp_PerbedaanTingkatanAkun = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Perbedaan Tingkatan Akun', link: 'help/perbedaan_tingkatan_akun' }]\r\n    const Id = 'PerbedaanTingkatanAkun'\r\n    const UserAbilityList = [\r\n        {\r\n            Bagian: 'Transaksi',\r\n            Actions: [\r\n                {\r\n                    Action: 'Menambah Transaksi',\r\n                    Kasir: true,\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Menambah Belanja',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat List Transaksi',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melakukan Import/Export',\r\n                    SuperUser: true,\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            Bagian: 'Barang',\r\n            Actions: [\r\n                {\r\n                    Action: 'Melihat List Barang',\r\n                    Kasir: true,\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat List Katagori Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Detail Katagori Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Menambah Katagori Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Update Detail Katagori Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Delete Katagori Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat List Konfigurasi Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Detail Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Menambah Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Update Detail Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Delete Barang',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melakukan Import/Export Jenis Barang',\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melakukan Import/Export Barang',\r\n                    SuperUser: true,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            Bagian: 'Help',\r\n            Actions: [\r\n                {\r\n                    Action: 'Melihat Bantuan',\r\n                    Kasir: true,\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Laporan Penjualan',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Laporan Belanja',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Laporan Grafik',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            Bagian: 'Account',\r\n            Actions: [\r\n                {\r\n                    Action: 'Melihat Detail Account Pribadi',\r\n                    Kasir: true,\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Mengupdate Detail Account Pribadi',\r\n                    Kasir: true,\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat List Account',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Detail Account Yang Lain',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Menambah Account',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Mengupdate Keseluruhan Detail Account',\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Menghapus Keseluruhan Detail Account',\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat Detail Toko',\r\n                    Admin: true,\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Mengupdate Detail Toko',\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'Melihat History',\r\n                    SuperUser: true,\r\n                },\r\n                {\r\n                    Action: 'MengExpoprt History',\r\n                    SuperUser: true,\r\n                },\r\n            ]\r\n        },\r\n    ]\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu tinggkatan akun?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Untuk mempelajari Mengenai Tngkatan akun dapat dilihat di <b><Link href='/blog/preview/kasirqu/help/tingkatan_akun'>tautan ini</Link></b>\r\n                </Fragment>\r\n            ),\r\n        },\r\n        {\r\n            PrimaryText: 'Apa perbedaan Tingkatan Akun yang satu dengan yang lain?',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='center' style={{ width: '5%' }} >Bagian</TableCell>\r\n                                <TableCell align='center' style={{ width: '95%' }} >Kemampuan</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {UserAbilityList.map((item, index) => (\r\n                                <TableRow hover key={index}>\r\n                                    <TableCell align='left'>{item.Bagian}</TableCell>\r\n                                    <TableCell align='right'>\r\n                                        {item.Actions.length > 0 ? (\r\n                                            <Table >\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell align='center' style={{ width: '5%' }} >Action</TableCell>\r\n                                                        <TableCell align='center' style={{ width: '30%' }} >KASIR</TableCell>\r\n                                                        <TableCell align='center' style={{ width: '30%' }} >ADMIN</TableCell>\r\n                                                        <TableCell align='center' style={{ width: '30%' }} >SUPERUSER</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {item.Actions ? item.Actions.map((item_Actions, index_Actions) => (\r\n                                                        <TableRow hover key={index_Actions}>\r\n                                                            <TableCell align='left'>{item_Actions.Action}</TableCell>\r\n                                                            <TableCell align='center'>{item_Actions.Kasir ? <CheckCircleOutlineRoundedIcon style={{ color: 'green' }} /> : <CancelRoundedIcon style={{ color: 'red' }} />}</TableCell>\r\n                                                            <TableCell align='center'>{item_Actions.Admin ? <CheckCircleOutlineRoundedIcon style={{ color: 'green' }} /> : <CancelRoundedIcon style={{ color: 'red' }} />}</TableCell>\r\n                                                            <TableCell align='center'>{item_Actions.SuperUser ? <CheckCircleOutlineRoundedIcon style={{ color: 'green' }} /> : <CancelRoundedIcon style={{ color: 'red' }} />}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )) : ''}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        ) : ''}\r\n\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Fragment>\r\n            ),\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >Perbedaan Tingkatan Akun</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport const KasirQuHelp_TambahUser = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Tambah User', link: 'help/tambah_user' }]\r\n    const Id = 'TambahUser'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menambah User/Account?',\r\n            SecondaryText: 'Untuk Menambah Akun anda perlu mengakses Menu \"List User\" yang dapat ditemui Di Menu Utama, Pastikan anda menggunakan Akun dengan Tingkatan Akun \"Admin\" atau \"SuperUser\". Lalu pada bagian atas tampilan anda akan menemukan tombol \"Add Account\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengisi Form yang Ada?',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - User Name : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                            UserName digunakan untuk Login, UserName Wajib Diisi dan tidak bisa sama dengan yang sudah ada. UserName tidak bisa diganti kedepannya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Name : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Name digunakan untuk tampilan saja, Name Wajib Diisi dan tidak bisa sama dengan yang sudah ada\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Password : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Password digunakan untuk kata sandi anda ketika login, Password Wajib Diisi tidak ada ketentuan mengisinya tp disarankan minimal 4 karakter\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Confirm Password : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Confirm Password digunakan untuk verifikasi kata sandi saat pembuatan akun, pastikan Password dan Confirm Password sama\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Photo Profile : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        Photo Profile digunakan hanya untuk tampilan ketika membuak halaman profile, file yang bisa diupload berformat \".jpeg .png .jpg\"\r\n                    </p>\r\n                    <br />\r\n                    <label><b>Tingkatan Akun:</b></label><br />\r\n                    Untuk memahami apa itu Tingkatan Akun anda bisa mencari bantuan di menu \"Help\" atau mengunjungi tautan <Link href='/blog/preview/kasirqu/help/tingkatan_akun'><b>berikut</b></Link>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - KASIR :\r\n                            </b>\r\n                        </label><br />\r\n                        Jika Diceklis/hijau maka akun akan memiliki Tingkatan Akun KASIR\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - ADMIN :\r\n                            </b>\r\n                        </label><br />\r\n                        Jika Diceklis/hijau maka akun akan memiliki Tingkatan Akun ADMIN\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - SUPERUSER :\r\n                            </b>\r\n                        </label><br />\r\n                        Jika Diceklis/hijau maka akun akan memiliki Tingkatan Akun SUPERUSER <br />\r\n                        ket: hanya bisa dilakukan oleh akun SUPERUSER lainnya, disarankan akun SUPERUSER tidak terlalu banyak\r\n                    </p>\r\n                </Fragment>\r\n            )\r\n        },\r\n\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >Tambah User</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_UpdateUser = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Update User', link: 'help/update_user' }]\r\n    const Id = 'UpdateUser'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Saya Mengupdate Detail Akun Saya?',\r\n            SecondaryText: 'Untuk Mengupdate Detail Akun Anda Bisa Pergi Ke \"Quick Menu\"->\"Account\" atau \"Menu Utama\"->\"Account\" lalu memilih tombol \"Update\" Diatas Tombol \"Log Out\" ',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Saya Mengupdate Tingkatan Akun Saya?',\r\n            SecondaryText: 'Untuk Mengupdate Tingkatan Akun Anda Perlu Masuk Dengan Akun ADMIN atau SUPERUSER ',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Saya Mengupdate Tingkatan Akun Akun Lain?',\r\n            SecondaryText: 'Untuk Mengupdate Tingkatan Akun Akun Lain Anda Perlu Masuk Dengan Akun SUPERUSER Lalu \"Menu Utama\"->\"User List\"->Pilih Akun yang ingin di update, lalu klik \"Edit\" di row/baris yang sama dengan akun yang anda pilih',\r\n        },\r\n        {\r\n            PrimaryText: 'Ketentuan Update:',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - User Name : (Tidak Bisa Diupdate)\r\n                            </b>\r\n                        </label><br />\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Name : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Nama bisa diganti dengan nama lain yang blm digunakan, dan tidak bisa dikosongkan\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Mengganti Password\r\n                            </b>\r\n                        </label><br />\r\n                        Untuk mengganti password centang tombol \"Ganti Password\" lalu masukkan password dikolom \"Password\" dan \"Confirm Password\". Pastikan Password yang dimasukkan sama di kedua field\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Photo Profile :\r\n                            </b>\r\n                        </label><br />\r\n                        Untuk mengganti Photo Profile anda tinggal mengklik tombol \"Choose File\" lalu memilih file, file yang bisa diupload berformat \".jpeg .png .jpg\"\r\n                    </p>\r\n                    <br />\r\n                    <label><b>Tingkatan Akun:</b></label><br />\r\n                    Untuk mengatifkan Tingkatan Akun geser ke kanan/hijau, menonaktifkan kekiri/merah <br />\r\n                    ket: jika \"Active\" Di non aktifkan akun terkait tidak bisa lagi dipakai sampai diaktifkan kembali (data tidak terhapus)\r\n                </Fragment>\r\n            )\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >Update User</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_DeleteUser = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Delete User', link: 'help/delete_user' }]\r\n    const Id = 'DeleteUser'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bisakah Saya Menghapus Akun Saya?',\r\n            SecondaryText: 'Untuk Menghapus Akun Pribadi Bisa Meminta Bantuan SUPERUSER, karna selain SUPERUSER tidak bisa menghapus akun',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menghapus Akun?',\r\n            SecondaryText: 'Untuk Menghapus Akun Anda Perlu Masuk Dengan Akun SUPERUSER, Lalu \"Menu Utama\"->\"User List\" di barisan akun yang anda pilih klik tombol \"Delete\" dan konfirmasi dengan menekan tombol \"Delete\" dibagian bawah Modals',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Menghapus Akun Berresiko?',\r\n            SecondaryText: 'Sejauh ini tidak ada resiko penghapusan akun selain akun yang berkaitan tidak bisa digunakan lagi',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Jika Hanya ada satu akun SUPERUSER dan saya menghapusnya?',\r\n            SecondaryText: 'Semua Aksi yang membutuhkan SUPERUSER tidak bisa dilakukan, termasuk membuat akun SUPERUSER lainnya, jadi hati hati dalam hal ini',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >Delete User</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_UpdateToko = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Update Toko', link: 'help/update_toko' }]\r\n    const Id = 'UpdateToko'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara MengUpdate Detail Toko?',\r\n            SecondaryText: 'Anda harus masuk dengan akun SUPERUSER lalu \"Menu Utama\"->\"Detail Toko\" klik tombol \"Update\" pada bagian bawah page',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Ada Ketentuan Khusus Dalam Mengisi/Update Form?',\r\n            SecondaryText: 'Tidak ada, Pastikan Semua form terisi, dan form \"Logp\" diisi dengan file gambar (.jpg .jpeg .png dll)',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >Update Toko</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_History = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'History', link: 'help/history' }]\r\n    const Id = 'History'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu History?',\r\n            SecondaryText: 'History adalah catatan semua aktifitas penting yang terjadi di aplikasi ini',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa Saja yang Termasuk  History?',\r\n            SecondaryText: 'Semua aktifitas penting: Tambah, Update, Delete, Transaksi, Belanja dll',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Mengakses History?',\r\n            SecondaryText: 'Untuk Mengakses History anda harus masuk dengan akun SUPERUSER lalu \"Menu Utama\"->\"History\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa Halaman History Saya Menampilkan \"Data Tidak Ditemukan\"?',\r\n            SecondaryText: 'Halaman History secara default menampilkan catatan perhari, jadi jika anda melihat seperti itu maka pada hari tersebut tidak ada catatan',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Jika Saya Ingin Mencari History Yang Lampau?',\r\n            SecondaryText: 'Pada bagian dibawah tulisan \"History\" ada lambang panah klik dan anda bisa memilih (konfigurasi) History apa yang anda cari',\r\n        },\r\n        {\r\n            PrimaryText: 'PERINGATAN',\r\n            SecondaryText: 'Jika data terlalu banyak proses mungkin akan memakan waktu yang lumayan lama, dan jika anda mencoba menshorting dengan data yang sangat banyak ada kemungkinan aplikasi freez untuk sementara karna sangking banyaknya data',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3' >History</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n////// HELP\r\nexport const KasirQuHelp_IncomeReport = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Income Report', link: 'help/incomereport_help' }]\r\n    const Id = 'Help_IncomeReport'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu Income Report?',\r\n            SecondaryText: 'Income Report adalah sistem laporan bulanan (bulan ini) yang menampilkan data statistik mengenai uang masuk ke aplikasi. Income Report terbagi menjadi dua \"Keuangan\" dan \"Barang\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Membuka Income Report?',\r\n            SecondaryText: 'Anda harus Masuk Dengan Akun ADMIN atau SUPERUSER lalu \"Menu Utama\"->\"Laporan Penjualan\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Keuangan Penjualan Bulanan?',\r\n            SecondaryText: 'Menampilkan Laporan Pendapatan Keuangan Bulana yang berisi Total Keuangan, Total Potongan dan Total Diskon Per Hari',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Penjualan Barang Bulanan?',\r\n            SecondaryText: 'Menampilkan Laporan Penjualan Barang Bulana yang berisi Total Penjualan Barang dalam bentuk satuan Per Hari',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Income Report</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_OutcomeReport = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Outcome Report', link: 'help/outcomereport_help' }]\r\n    const Id = 'Help_OutcomeReport'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu Outcome Report?',\r\n            SecondaryText: 'Outcome Report adalah sistem laporan bulanan (bulan ini) yang menampilkan data statistik mengenai uang Keluar. Outcome Report terbagi menjadi dua \"Keuangan\" dan \"Barang\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Membuka Outcome Report?',\r\n            SecondaryText: 'Anda harus Masuk Dengan Akun ADMIN atau SUPERUSER lalu \"Menu Utama\"->\"Laporan Belanja\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Pengeluaran Modal Bulanan?',\r\n            SecondaryText: 'Menampilkan Laporan Pembelanjaan Modal Bulana yang berisi Total Modal Per Hari',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Pembelian Barang Bulanan?',\r\n            SecondaryText: 'Menampilkan Laporan Pembelanjaan Barang Bulana yang berisi Total Penjualan Barang dalam bentuk satuan Per Hari',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Outcome Report</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_Graph = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Graph', link: 'help/graph_help' }]\r\n    const Id = 'Help_Graph'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu Graph?',\r\n            SecondaryText: 'Graph adalah laporan statistik mengenai berbagai macam hal yang terkait dengan aplikasi. secara default ditampilkan secara bulanan(bulan ini. kecuali aset)',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara MengAkses Graph?',\r\n            SecondaryText: 'Anda Harus Masuk dengan Akun ADMIN atau SUPERUSER lalu \"Menu Utama\"->\"Laporan Grafik\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Jika Saya Ingin Mencari Data yang Lain/Spesifik?',\r\n            SecondaryText: 'Disetiap Halaman Pada Graph kami sudah menyiapkan pencarian dengan cara mengkik tombol panah kebawah, lalu anda bisa melakukan pencarian/filteran sesuak anda',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Cek Aset?',\r\n            SecondaryText: 'Halaman yang menampilkan statistik Aset yang anda miliki',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Cek Uang Masuk?',\r\n            SecondaryText: 'Halaman yang menampilkan statistik Pendapatan anda melalui penjualan',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Cek Uang Keluar?',\r\n            SecondaryText: 'Halaman yang menampilkan statistik Pengeluaran anda melalui pembelian/belanja modal',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Cek Uang Lose?',\r\n            SecondaryText: 'Halaman yang menampilkan statistik Pendapatan anda yang terpotong karna pemberian diskon/potongan harga pada transaksi',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Intensitas Transaksi?',\r\n            SecondaryText: 'Halaman yang menampilkan statistik Jumlah banyak Transksi yang terjadi',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Intensitas Barang Transaksi?',\r\n            SecondaryText: 'Halaman yang menampilkan statistik Jumlah banyak Barang pada Transksi',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Graph</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\n////// BARANG\r\nexport const KasirQuHelp_BarangList = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Barang List', link: 'help/barang_list' }]\r\n    const Id = 'Help_BarangList'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengecek List Barang?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Untuk mengecek barang anda bisa membuka \"Quick Menu\"-&gt;\"Barang\" atau \"Menu Utama\"-&gt;\"List Barang\" <br /><br />\r\n                    Jika anda masuk Menggunakan ADMIN atau SUPERUSER anda juga bisa membuka di \"Menu Utama\"-&gt;\"Konfigurasi Barang\" Untuk tampilan yang lebih lengkap\r\n                </Fragment>\r\n            ),\r\n        },\r\n\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Barang List</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_Barang = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Barang', link: 'help/barang' }]\r\n    const Id = 'Help_Barang'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengakses Tambah, Update, Hapus Barang?',\r\n            SecondaryText: 'Untuk melakukan hal tersebut pertama anda membutuhkan akun ADMIN atau SUPERUSER, lalu \"Menu Utama\"->\"Konfigurasi Barang\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Menambah Barang',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Barcode : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                            Barcode adalah kode unik setiap produck, biasanya berisi kumpulan angka. Barcode wajib diisi, tidak bisa sama dan tidak bisa diubah kedepannya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Name Barang : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Nama barang menjelaskan produk misal: \"susu ultra 250ml\" dsb. Nama Barang wajib diisi dan tidak bisa sama dengan yang lain\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Jenis Barang : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Jenis Barang merupakan bentuk pengelompokan dari barang tersebut. Jenis Barang wajib diisi dan opsi Jenis Barang Diambil dari list Jenis Barang. <br />\r\n                         jadi jika Jenis Barang yang ingin anda masukkan tidak ada silakan tambah terlebih dahulu Jenis Barangnya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - \"Apakah Bisa Melakukan Transasksi Satuan Desimal?\"\r\n                            </b>\r\n                        </label><br />\r\n                        Jika Dislide kekanan/hijau (secara default tidak) maka transaksi yang berkaitan dengan barang bisa dilakukan secara desimal.<br />\r\n                       jika anda menghijaukan slider tersebut maka anda akan bisa menulis \"0.5\" atau \"1.5\" atau lainnya pada halaman transaksi, berguna untuk contoh kasus pembelian gula 0.5 kg x 3\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Keterangan : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        Menambah informasi mengenai Barang terkait, dapat dilihat ketika membuka Detail Barang\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Photo Profile : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        Photo Barang digunakan hanya untuk tampilan ketika membuak Detail Barang, file yang bisa diupload berformat \".jpeg .png .jpg\"\r\n                    </p>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            PrimaryText: 'Update Barang',\r\n            SecondaryText: 'Proses dan ketentuan mengupdate Barang hampir sama dengan Menambah Barang, hanya saja Barcode Tidak Bisa Diganti',\r\n        },\r\n        {\r\n            PrimaryText: 'Delete Barang',\r\n            SecondaryText: 'Pada baris yang sama dengan Barang Yang ingin anda hapus klik tombol \"Delete\" dan konfirmasi dengan Mengklik tombol \"Delete\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Ada Masalah Jika Saya Menghapus Beberapa Barang?',\r\n            SecondaryText: 'Ada Kemungkinan \"IncomeReport\"/\"Graph\" karna data barang dianggap tidak ada, namun pada pengetesan tidak ada masalah',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Barang</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_SatuanJualBarang = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Satuan Jual Barang', link: 'help/satuan_jual_barang' }]\r\n    const Id = 'Help_SatuanJualBarang'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menambah Satuan Jual?',\r\n            SecondaryText: 'Anda Harus Masuk Sebgai ADMIN atau SUPERUSER untuk melakukan ini, Masuk ke \"Konfigurasi Barang\" lalu pilih \"edit\" dihalamn baru akan muncuk tombol \"+\" berwarna biru, lalu akan muncul satuan baru kosong, edit satuan baru kosong tersebut dengan mengklik tombol berbentuk pensil lalu masukkan nama satuan jual, minimal satuan dan harga jual per satuan',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengedit Satuan Jual?',\r\n            SecondaryText: 'Klik Tombol Pencil Pada baris satuan jual yang ingin anda ubah',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menghapus Satuan Jual?',\r\n            SecondaryText: 'Klik Tombol tempat sampah Pada baris satuan jual yang ingin anda hapus',\r\n        },\r\n        {\r\n            PrimaryText: 'Bisakah Saya Mengubah Satuan Jual Satuan?',\r\n            SecondaryText: 'Tidak, Satuan Jual Satuan Secara otomatis mengikuti Harga jual satuan dan tidak bisa diubah',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Satuan Jual Barang</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_JenisBarang = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Jenis Barang', link: 'help/jenisbarang' }]\r\n    const Id = 'Help_JenisBarang'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengakses Tambah, Update, Hapus Jenis Barang?',\r\n            SecondaryText: 'Untuk melakukan hal tersebut pertama anda membutuhkan akun ADMIN atau SUPERUSER, lalu \"Menu Utama\"->\"Katagori Barang\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Menambah Jenis Barang',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Nama Jenis Barang : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                            Nama Jenis Barang wajib diisi, tidak boleh sama dengan yang sudah ada dan tidak bisa diganti kedepannya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Kepemilikan : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Kepemilikan ini menggambarkan barang ini kepunyaan siapa, opsi yang dikasi berupa \"pribadi\" = kepunyaan sendiri atau \"non-pribadi\" =  bukan kepunayaan sendiri atau titipan atau lainnya, berguna untuk membantu mengecek pendapatan dan lain sebagainya di menu incomereport/graph. wajib diisi dengan salah satu opsi terkait\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Keterangan : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        Menambah informasi mengenai Jenis Barang jika dibutuhkan, dapat dilihat ketika membuka Detail Jenis Barang\r\n                    </p>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            PrimaryText: 'Update Jenis Barang',\r\n            SecondaryText: 'Proses dan ketentuan mengupdate Barang hampir sama dengan Menambah Jenis Barang, hanya saja Nama Jenis Barang Tidak Bisa Diganti',\r\n        },\r\n        {\r\n            PrimaryText: 'Delete Jenis Barang',\r\n            SecondaryText: 'Pada baris yang sama dengan Barang Yang ingin anda hapus klik tombol \"Delete\" dan konfirmasi dengan Mengklik tombol \"Delete\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Ada Masalah Jika Saya Menghapus Beberapa Jenis Barang?',\r\n            SecondaryText: 'Ya, jika ada Barang Yang masih memilih Jenis Barang sebagai Jenisnya maka Barang tersebut otomatis akan terhapus, selebih dari itu tidak ada (selama pengetesan)',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Jenis Barang</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n////// TRANSAKSI\r\nexport const KasirQuHelp_Transaksi = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Transaksi', link: 'help/transaksi' }]\r\n    const Id = 'Help_Transaksi'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Menambah Barang ke list?',\r\n            SecondaryText: 'pada Kolom Diatas Tombol \"Tambah\" anda bisa menulis nama barang atau barcode barang atau bahkan menscan barcode, setelah itu klik tombol \"Tambah\", maka barang akan tertambah pada list belanja',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Megubah Jumlah Belanja?',\r\n            SecondaryText: 'Klik gambar pensil lalu pilih jenis satuan yang dibeli lalu masukkan jumlah pembelanjaan di kolom jumlah',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Jika ada barang/barcode yang sama tp beda pembelian satuan?',\r\n            SecondaryText: 'anda tinggal menbah barang ke list barang',\r\n        },\r\n        {\r\n            PrimaryText: 'Kenapa Ketika Saya Mengedit Barang List \"Total\" Tidak Akurat?',\r\n            SecondaryText: 'karna sistem mengagap anda memasukkan barang baru, namun itu tidak masalah karna ketika anda menyudahi atau membatalkan edit sistem akan menghitung ulang, dan tidak berpengaruh ke hasil akhir',\r\n        },\r\n        {\r\n            PrimaryText: 'Jika Sudah Selesai Memilih Barang Bagaimana?',\r\n            SecondaryText: 'Jika sudah selesai klik tombol \"Review Pembayaran\" lalu masukkan uang pembayaran sehingga lebih besar dari jumlah tagihan lalu klik tombol \"Bayar\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Diskon/Potongan Harga Bekerja?',\r\n            SecondaryText: 'Diskon diisi dengan range persentase (1-100) dan potongan harga diisi dengan range kurang dari total tagihan. Diskon dilakukan terlebih dahulu dari pada Potongan Harga. ',\r\n        },\r\n        {\r\n            PrimaryText: 'PERINGATAN',\r\n            SecondaryText: 'Total Tagihan Tidak Bisa 0, Yang Artinya Diskon tidak bisa 100% Potongan Harga Tidak bisa sama dengan jumlah tagihan dan tidak bisa melakukan transaksi dengan harga jual 0',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Transaksi</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_Belanja = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Belanja', link: 'help/belanja' }]\r\n    const Id = 'Help_Belanja'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Belanja?',\r\n            SecondaryText: 'Belanja hanya bisa dilakukan oleh akun ADMIN atau SUPERUSER, lalu masukke \"Menu Utama\"-> \"Belanja\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menbah Barang di List Belanja?',\r\n            SecondaryText: 'Pastikan barang sudah terdaftar, lalu masukkan barcode atau pilih nama barang di form di atas tombol \"Tambah\", setelah itu klik Tombol \"Tambah\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Cara Edit Barang Belanjaan?',\r\n            SecondaryText: 'Klik tombol berbentuk pensil pada baris yang sama, masukkan jumlah barang belanjaan barang, harga modal dan harga jual yang anda inginkan. setelah semua terisi klik tombol \"Review Barang Belanja\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa Saya Mendapati Warna Merah Di Review?',\r\n            SecondaryText: 'Berarti barang terkait harga modal atau harga jualnya 0',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa Saya Mendapati Warna Kuning Di Review?',\r\n            SecondaryText: 'Berarti barang terkait harga modal lebih besar dari harga jualnya',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Saya Perlu Mengupdate Detail Barang Lagi Setelah Melakukan Belanja?',\r\n            SecondaryText: 'Jika bermaksud mengupdate detail barang harga satuan atau satuan jual satuan maka jawabannya tidak perlu. Namun jika maksud anda menyesuaikan harga satuan jual lainnya pada barang terkait jawabnnya ya perlu',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Belanja</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_Stok = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Stok', link: 'help/stok' }]\r\n    const Id = 'Help_Stok'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menambah Stok Barang Setelah Menambah Data Barang?',\r\n            SecondaryText: 'Penambahan Bisa dilakukan dengan cara mengakses halaman belanja dan menjabarkan jumlah barang harga modal dan harga jualnya, sehingga barang tetap terdata di report',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Ada Cara Lain Untuk Menambah Stok Selain Melalui Menu Belanja?',\r\n            SecondaryText: 'Ada, Namun Sangat tidak disarankan karna akan merusak statistik reprot dan graph. Yaitu dengan mengupdate barang di menu \"Konfigurasi Barang\" namun anda membutuhkan akun SUPERUSER untuk melakukan ini',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Stok</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_TransaksiDetail = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Transaksi Detail', link: 'help/transaksi_detail' }]\r\n    const Id = 'Help_TransaksiDetail'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengecek Transaksi yang Sudah Ada?',\r\n            SecondaryText: 'Anda harus masuk sebagai ADMIN atau SUPERUSER lalu ke \"Menu Utama\"->\"Transaksi List\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa Terdapat Tulisan \"Data Tidak Ditemukan\"?',\r\n            SecondaryText: 'Karena secara default hanya menmpilkan transaksi hari ini, jika anda ingin mencari transaksi lainnya anda bisa melakukkanya dengan secara spesifik mencarinya dengan cara mengklik tombol panah kebawah lalu akan muncul jendela pencarian, masukkan spesifikasi yang diinginkan lalu klik tombol \"Cari\"',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Transaksi Detail</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\n////// GENERAL||NAVIGASI\r\nexport const KasirQuHelp_ImportExport = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Import/Export', link: 'help/import-export' }]\r\n    const Id = 'Help_ImportExport'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengexport Data Barang, Jenis Barang, atau Transaksi?',\r\n            SecondaryText: 'Anda harus masuk dengan akun SUPERUSER lalu \"Menut Utama\"->lalu \"Import/Export Barang\" untuk barang, \"Import/Export Katagori Barang\" untuk jenis barang dan \"Import/Export Transaksi\" untuk Transaksi. pada halaman Export klik tombol panah kebawah dibawah tulisan export dan pilih spesifikasi data barang yang anda inginkan, lalu klik \"Cari\" ketika data muncul dan yakin ingin mengexport data klik tombol \"Export\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Untuk Apa Saya Mengexport Data?',\r\n            SecondaryText: 'Data di export untuk backup jika sewaktu waktu data hilang atau report toko',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Menimport Data Barang, Jenis Barang, atau Transaksi?',\r\n            SecondaryText: 'Anda harus masuk dengan akun SUPERUSER lalu \"Menut Utama\"->lalu \"Import/Export Barang\" untuk barang, \"Import/Export Katagori Barang\" untuk jenis barang dan \"Import/Export Transaksi\" untuk Transaksi. pada halaman Import darg file excel atau klik tombol awan dan plih file excelnya lalu klik \"cek\" lalu akan muncul halaman \"Review\" jika sudah yakin centang pernyataan \"saya sudah yakin tidak ada yang salah pada data diatas\" lalu klik tombol \"cek\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa Proses Import Cenderung Lebih Susah?',\r\n            SecondaryText: 'Karna anda mencoba memasukkan data banyak kedalam program, verifikasi yang awalnya dilakukan oleh sistem secara otomatis menjadi manual oleh anda. dan agar tidak terjadi malfunction pada program',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Hanya Ini Panduan Importnya?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Untuk Lebih detial bisa ke halaman terkait, lebih lengkap. di tautan berikut ini\r\n                    <Link href='/blog/preview/kasirqu/barang/konfigurasibarang/importexport' ><b> Barang </b></Link>,\r\n                    <Link href='/blog/preview/kasirqu/barang/katagoribarang/importexport' ><b> Jenis Barang </b></Link>,\r\n                    <Link href='/blog/preview/kasirqu/transaksi/importexport' ><b> Transaksi </b></Link>.\r\n                </Fragment>)\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Import/Export</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_LightDark = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Light/Dark', link: 'help/light-dark' }]\r\n    const Id = 'Help_LightDark'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa itu Light/Dark?',\r\n            SecondaryText: 'Light/Dark adalah fungsi untuk mengganti tampilan dari terang menjadi gelap atau sebaliknya',\r\n        },\r\n        {\r\n            PrimaryText: 'Dimana Saya Bisa Mengakses Light/Dark?',\r\n            SecondaryText: 'Light/Dark Dapat diakses di bagian kiri bawah pada tampilan lebar, dan atas kanan pada tampilan kecil. Berganti tampilan cukup dengan mengklik pada slider',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Light/Dark</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_PanduanPenggunaan = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Panduan Penggunaan', link: 'help/penggunaan_help' }]\r\n    const Id = 'Help_PanduanPenggunaan'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengakses Menu?',\r\n            SecondaryText: 'Menu terbagi dua Menu Utama dan Menu cepat. Menu utama dapat diakses dengan cara mengklik pada logo di menu cepat. Menu cepat akan selalu ada dibagian kiri atau atas layar (tergantung ukuran layar anda) ',\r\n        },\r\n        {\r\n            PrimaryText: 'Bisakah Saya Menshorting Data Dari Terbesar ke Terkecil atau Sebaliknya?',\r\n            SecondaryText: 'Dihampir semua tabel bisa anda hanya perlu mengklik header dari tabel maka otomatis data tershortir, tapi hati hati jika data terlalu banyak ada kemungkinan proses memakan waktu dan kemungkinan freez sebentar',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa Gunanya Gambar Rumah Di Bagian Kanan Atas?',\r\n            SecondaryText: 'Itu adalah bantuan menu dimana dia membantu bernavigasi jika diklik',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa Ketika Saya Mencari Data Dengan Lambang Kaca Pembesar di bagian awalnya data tidak ditemukan',\r\n            SecondaryText: 'Kolom pencari bekerja mencari dari data yang sudah ada jadi jika data blm ada silakan anda melakukan pemanggilan data secara spesifik dengan mengklik tanda panah kebawah(jika ada)',\r\n        },\r\n        {\r\n            PrimaryText: 'Apa itu Pencarian Spesifik',\r\n            SecondaryText: 'Jika anda menemukan tanda panah kebawah artinya anda dapat melakukan pencarian data secara spesifik, biasanya ada pada halaman data list',\r\n        },\r\n        {\r\n            PrimaryText: 'Data Yang Ditampilkan Pada Diagram Terlalu Banyak Saya Tidak Bisa Membacanya',\r\n            SecondaryText: 'Jika Demikian anda bisa mencari spesifik data sehingga data yang ditampilkan lebih spesifik atau dengan menghilangkan sementara data dengan cara mengklik legend data pada diagram',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Panduan Penggunaan</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_PanduanTampilan = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Panduan Tampilan', link: 'help/tampilan_help' }]\r\n    const Id = 'Help_PanduanTampilan'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Jika Tampilan Putih Saja?',\r\n            SecondaryText: 'Anda bisa merealod page dengan cara klik kanan pada mouse lalu pilih \"Realod\"',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Panduan Tampilan</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_PanduanMenu = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Panduan Menu', link: 'help/menu_help' }]\r\n    const Id = 'Help_PanduanMenu'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Bagaimana Cara Mengakses Beberapa Fitur Yang Saya Inginkan?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Untuk Mengakses Semua Menu Anda Bisa Mengklik Logo, yang akan membawa anda ke Menu Utama disana anda bisa memilih fitur yang anda ingin akses sesuai user yang anda gunakan <br />\r\n                    atau pada bagian kanan (jika mode lebar) atau atas (mode kecil) anda bisa mengakses menu cepat untuk mengecek fitur fitur yang biasa digunakan\r\n                </Fragment>),\r\n        },\r\n        {\r\n            PrimaryText: 'Apa Itu Mode Lebar/Kecil?',\r\n            SecondaryText: 'Mode Lebar/kecil adalah tampilan letak Navigasi menu berada, jika layar anda dibawah 1080px maka otomatis mengaktifkan mode kecil supaya Menu tidak menutupi layar',\r\n        },\r\n        {\r\n            PrimaryText: 'Mengapa ada Beberapa Menu yang Tidak Tampak Disaya?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Menu Diatur Berdasarkan Tingkatan Akun, jadi jika ada beberapa menu yang tidak tampil mungkin anda menggunakan Tingkatan Akun anda menseting seperti itu, untuk melihat lebih jauh anda bisa membaca di tautan <Link href='/blog/preview/kasirqu/help/tingkatan_akun' ><b>ini</b></Link>\r\n                </Fragment>),\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography align='center' variant='h3'>Panduan Menu</Typography>\r\n            <hr />\r\n            <KasirQuTextAdjustButton AdjustId={Id} />\r\n            <KasirQuCreateList Id={Id} ListData={ListData} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_FirstTimeUse = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'First Time Use', link: 'help/first_time_use' }]\r\n    const Id = 'Help_FirstTimeUse'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Adakah Software yang Perlu Diinstal Sebelum Penggunaaan?',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    Jika anda menjalankan aplikasi pertama kli diserver maka ya perlu ada software yang diinstal<br />\r\n                    yaitu database program, karna database tidak terbawa di softwate ini, silahkan download di halaman berikut <Link href='https://www.mongodb.com/try/download/community' target=\"_blank\" rel=\"noreferrer\"><b>ini</b></Link>\r\n                </Fragment> )\r\n        },\r\n        {\r\n            PrimaryText: 'Panduan Penggunaan Pertama Kali',\r\n            SecondaryText: 'Untuk penggunaan pertama kali anda perlu melakukan registrasi akun terlebih dahulu. pertama jalankan aplikasi lalu pada halaman login klik gambar/logo sebanyak 10 kali atau lebih lalu anda akan dibawa ke halama seting aplikasi (hanya bisa satu kli registrasi)',\r\n        },\r\n        {\r\n            PrimaryText: 'Apakah Bisa Melakukan Seting Penggunaan Pertama di Client?',\r\n            SecondaryText: 'Tidak, Seting penggunaan pertama haurs dilakukan di server',\r\n        },\r\n        {\r\n            PrimaryText: 'Registrasi Akun Super',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - UserName : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        UserName digunakan untuk login kedepannya, Username Wajib diisi dan tidak bisa diganti kedepannya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Name : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Name Digunakan Untuk tampilan nama dari akun terkait, wajib diisi\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Password dan Confirm Passowrd : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Digunakan Untuk kata santi akun anda ketika login nantinya, wajib diisi dan field password dan confirm password harus berisi sama. disarankan minimal 4 karakter\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Kupon : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        Kupon adalah sandi misterius yang hanya diketahui oleh pembuat aplikasi, silakan tanya pembuat aplikasi\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Photo Profil : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        foto yang akan ditampilkan ketika membuka user detail, tidak wajib diisi opsional\r\n                    </p>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            PrimaryText: 'Registrasi Data Toko',\r\n            NonTextContent: (\r\n                <Fragment>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Nama Toko : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        diisi dengan nama toko yang anda inginkan, digunakan untuk identitas toko anda, bisa diganti nantinya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - alamat : (Require)\r\n                            </b>\r\n                        </label><br />\r\n                        diisi dengan alamat toko yang anda, digunakan untuk identitas toko anda, bisa diganti nantinya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - Kontak : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        diisi dengan kontak toko yang anda, digunakan untuk identitas toko anda, bisa diganti/isi nantinya\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <b>\r\n                                - logo : (Optional)\r\n                            </b>\r\n                        </label><br />\r\n                        logo yang menggambarkan toko anda, tidak wajib diisi opsional, bisa diisi kemudian hari\r\n                    </p>\r\n                </Fragment>\r\n            )\r\n        },\r\n        {\r\n            PrimaryText: 'Ketertangan Tambahan',\r\n            SecondaryText: (\r\n                <Fragment>\r\n                    - Akun yang dibuat sudah pasti memiliki semua Tipe Akun <br />\r\n                    - Disarankan Setelah proses selesai segera membuat akun SUPERUSER lainnya agar tidak terjadi masalah ketika akun ini bermasalah <br />\r\n                    - Jika terjadi maslah pada registrasi silakan hubungi pihak pembuat untuk reset database\r\n                </Fragment>\r\n            ),\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <Paper >\r\n                <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n                <Typography align='center' variant='h3'>First Time Use</Typography>\r\n                <hr />\r\n                <KasirQuTextAdjustButton AdjustId={Id} />\r\n                <KasirQuCreateList Id={Id} ListData={ListData} />\r\n            </Paper>\r\n        </Fragment>\r\n    )\r\n}\r\nexport const KasirQuHelp_Login = () => {\r\n    const breadcrumbs = [{ name: 'Help', link: 'help' }, { name: 'Login', link: 'help/login' }]\r\n    const Id = 'Help_Login'\r\n    const ListData = [\r\n        {\r\n            PrimaryText: 'Apa Saja Yang Dibutuhkan Untuk Login?',\r\n            SecondaryText: 'Username dan Password, pastikan keduanya benar. jika ada maslah/lupa silakan hubungi SUPERUSER untuk mereset password',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Jika Saya Login Dikomputer Bukan Server?',\r\n            SecondaryText: 'Jika demikian maka selain Username dan Password anda harus mengisi field tambahan berupa Alamat Web atau IP Address dengan portnya (jikadibutuhkan, biasanya tidak). Silakan pilih menggunakan alamat web atau ip bergantung server tujuan. Kolom tambahan dapat diakses dengan mencklis \"Saya Mengakses dari Client\"',\r\n        },\r\n        {\r\n            PrimaryText: 'Bagaimana Jika Saya Lupa Username atau Password saya?',\r\n            SecondaryText: 'Silakan hubungi SUPERUSER untuk bertanya username anda atau mereset password anda',\r\n        },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <Paper>\r\n                <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n                <Typography align='center' variant='h3'>Login</Typography>\r\n                <hr />\r\n                <KasirQuTextAdjustButton AdjustId={Id} />\r\n                <KasirQuCreateList Id={Id} ListData={ListData} />\r\n            </Paper>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_AccountDetail } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { Avatar, TextField } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_st_AccountDetail_Avatar, MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass AccountDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idDetailAccount !== prevProps.idDetailAccount) {\r\n            const { idDetailAccount } = this.props\r\n            this.props.get_AccountDetail(idDetailAccount)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { idDetailAccount } = this.props\r\n        // console.log('mountt', this.props)\r\n        // console.log('mountt', idDetailAccount)\r\n        if (idDetailAccount !== null) {\r\n            this.props.get_AccountDetail(idDetailAccount)\r\n        }\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const AccountDetail = this.props.AccountDetail\r\n        const DefaultUrl = this.props.WebSite ? `http://${this.props.WebSite}` : `http://${this.props.IpAddres ? this.props.IpAddres : '127.0.0.1'}:${this.props.Port ? this.props.Port : '5000'}`\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth, ...theme.customTheme.readonlytextfield }\r\n        const st_switch = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        // console.log(User)\r\n        // console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                {AccountDetail ?\r\n                    <Fragment>\r\n                        <Avatar alt=\"Remy Sharp\" src={AccountDetail.ProfilePicture ? `${DefaultUrl}/${AccountDetail.ProfilePicture}` : null} style={MUI_st_AccountDetail_Avatar} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='User Name' name='UserName' value={AccountDetail.UserName ? AccountDetail.UserName : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Name' name='Name' value={AccountDetail.Name ? AccountDetail.Name : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='password' label='Password' name='password' value={AccountDetail.Password ? AccountDetail.Password : ''} />\r\n                        <hr />\r\n                        <label>Active:</label><br />\r\n                        <div className='switch' style={{ ...MUI_VerticalMargin }}>\r\n                            <input type=\"checkbox\" style={st_switch} disabled name='isActive' checked={AccountDetail.isActive ? AccountDetail.isActive : false} /><span></span><br />\r\n                        </div><br />\r\n                        <label>Kasir:</label><br />\r\n                        <div className='switch' style={{ ...MUI_VerticalMargin }}>\r\n                            <input type=\"checkbox\" disabled name='isKasir' checked={AccountDetail.isKasir ? AccountDetail.isKasir : false} /><span></span><br />\r\n                        </div><br />\r\n                        <label>Admin:</label><br />\r\n                        <div className='switch' style={{ ...MUI_VerticalMargin }}>\r\n                            <input type=\"checkbox\" disabled name='isAdmin' checked={AccountDetail.isAdmin ? AccountDetail.isAdmin : false} /><span></span><br />\r\n                        </div><br />\r\n                        <label>SuperUser:</label><br />\r\n                        <div className='switch' style={{ ...MUI_VerticalMargin }}>\r\n                            <input type=\"checkbox\" disabled name='isSuperUser' checked={AccountDetail.isSuperUser ? AccountDetail.isSuperUser : false} /><span></span><br />\r\n                        </div><br />\r\n                        {/* <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='tanggal pembuatan akun' name='RegisterDate' value={AccountDetail.RegisterDate ? new Date(AccountDetail.RegisterDate).toLocaleString('id-ID', { hour12: false }) : ''} /> */}\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='tanggal pembuatan akun' name='RegisterDate' value={AccountDetail.RegisterDate ? new Date(AccountDetail.RegisterDate).toLocaleString() : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Terakhir kali login' name='LastActive' value={AccountDetail.LastActive ? new Date(AccountDetail.LastActive).toLocaleString() : ''} />\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    User: state.KasirQu_Auth.User,\r\n    idDetailAccount: state.KasirQu_Account.idDetailAccount,\r\n    AccountDetail: state.KasirQu_Account.AccountDetail,\r\n    IpAddres: state.KasirQu_Auth.IpAddres,\r\n    Port: state.KasirQu_Auth.Port,\r\n    WebSite: state.KasirQu_Auth.WebSite,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_AccountDetail })(withTheme(AccountDetail))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_AccountDetail, Update_Account } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { TextField, Checkbox, FormGroup, FormControlLabel, Button } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_VerticalMargin, MUI_st_AccountDetail_TextField, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass AccountUpdate extends React.Component {\r\n    state = {\r\n        UserName: '',\r\n        Name: '',\r\n        ChangePassword: false,\r\n        Password: '',\r\n        ConfirmPassword: '',\r\n        isActive: false,\r\n        isKasir: false,\r\n        isAdmin: false,\r\n        isSuperUser: false,\r\n        Profilepicture: null,\r\n    }\r\n    componentDidMount() {\r\n        const { idUpdateAccount } = this.props\r\n        if (idUpdateAccount !== null) {\r\n            this.props.get_AccountDetail(idUpdateAccount)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idUpdateAccount !== prevProps.idUpdateAccount) {\r\n            const { idUpdateAccount } = this.props\r\n            this.props.get_AccountDetail(idUpdateAccount)\r\n        }\r\n        if (this.props.AccountDetail !== prevProps.AccountDetail) {\r\n            const { AccountDetail } = this.props\r\n            if (AccountDetail) {\r\n                this.setState({\r\n                    UserName: AccountDetail.UserName,\r\n                    Name: AccountDetail.Name,\r\n                    isActive: AccountDetail.isActive,\r\n                    isKasir: AccountDetail.isKasir,\r\n                    isAdmin: AccountDetail.isAdmin,\r\n                    isSuperUser: AccountDetail.isSuperUser,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User, idUpdateAccount } = this.props\r\n        const updatedata = {\r\n            Name: this.state.Name,\r\n            // ChangePassword: this.state.ChangePassword,\r\n            Password: this.state.Password,\r\n            // ConfirmPassword: this.state.ConfirmPassword, \r\n            isActive: this.state.isActive,\r\n            isKasir: this.state.isKasir,\r\n            isAdmin: this.state.isAdmin,\r\n            isSuperUser: this.state.isSuperUser,\r\n            Profilepicture: this.state.Profilepicture\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        if ((this.state.ChangePassword === true) && ((this.state.Password === '' || this.state.Password === null) || (this.state.Password !== this.state.ConfirmPassword))) {\r\n            E.preventDefault()\r\n        } else {\r\n            this.props.Update_Account(idUpdateAccount, updatedata, authdata)\r\n        }\r\n    }\r\n    render() {\r\n        // console.log('prop', this.props)\r\n        const theme = this.props.theme\r\n        const User = this.props.User\r\n        const AccountDetail = this.props.AccountDetail\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_st_AccountDetail_TextField }\r\n        const st_switch = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const {\r\n            UserName,\r\n            Name,\r\n            ChangePassword,\r\n            Password,\r\n            ConfirmPassword,\r\n            isActive,\r\n            isKasir,\r\n            isAdmin,\r\n            isSuperUser,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                {AccountDetail ?\r\n                    <Fragment>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <TextField style={{ ...st_textfield, ...theme.customTheme.readonlytextfield }} variant='outlined' disabled type='text' label='User Name' name='UserName' value={UserName ? UserName : ''} />\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Name' name='Name' value={Name ? Name : ''} required />\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox color='primary' onChange={this.CheckBox_OnChange} name=\"ChangePassword\" value={ChangePassword} />}\r\n                                    label=\"Ganti Password\"\r\n                                />\r\n                            </FormGroup>\r\n                            {ChangePassword ?\r\n                                <Fragment>\r\n                                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='password' label='Password' name='Password' value={Password} />\r\n                                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='password' label='Confirm Password' name='ConfirmPassword' value={ConfirmPassword}\r\n                                        error={((Password !== ConfirmPassword) && (ConfirmPassword !== '')) ? true : false}\r\n                                        helperText={((Password !== ConfirmPassword) && (ConfirmPassword !== '')) ? 'password dan password confirm harus sama' : null}\r\n                                    />\r\n                                </Fragment>\r\n                                : null\r\n                            }\r\n                            <label>Photo Profile:</label><br />\r\n                            <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n                            {(User.isSuperUser) ?\r\n                                <Fragment>\r\n                                    <hr />\r\n                                    <label>Active:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" style={st_switch} onChange={this.CheckBox_OnChange} name='isActive' checked={isActive ? isActive : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Kasir:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isKasir' checked={isKasir ? isKasir : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Admin:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAdmin' checked={isAdmin ? isAdmin : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>SuperUser:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isSuperUser' checked={isSuperUser ? isSuperUser : false} /><span></span><br />\r\n                                    </div><br />\r\n                                </Fragment>\r\n                                : null\r\n                            }\r\n                            <hr />\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Update</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    idUpdateAccount: state.KasirQu_Account.idUpdateAccount,\r\n    AccountDetail: state.KasirQu_Account.AccountDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_AccountDetail, Update_Account })(withTheme(AccountUpdate))","import React, { Fragment } from 'react'\r\n\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../MUI_theme'\r\n\r\nconst LogOutButton = () => {\r\n    const onClickLogOut = () => {\r\n        window.location.href = '/blog/preview/kasirqu/logout'\r\n    }\r\n    const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n    return (\r\n        <Fragment>\r\n            <Button variant=\"outlined\" style={st_button} color='secondary' size=\"large\" type='submit' onClick={onClickLogOut} >\r\n                Log Out\r\n                </Button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default LogOutButton","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_AccountId_Detail, get_AccountId_Update } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\nimport { MUI_st_Account_Container, MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport AccountDetail from '../../Containers/Account/Account.AccountDetail'\r\nimport GenericModals from '../../Containers/GenericModals'\r\nimport AccountUpdate from '../../Containers/Account/Account.AccountUpdate'\r\nimport LogOutButton from '../../Containers/LogOutButton'\r\n\r\nclass Account extends React.Component {\r\n    componentDidMount() {\r\n        const { user } = this.props\r\n        if (user !== null) {\r\n            // console.log('hi')\r\n            this.props.get_AccountId_Detail(user._id)\r\n        }\r\n    }\r\n    onClick_get_AccountId_Update(AccountId) {\r\n        this.props.get_AccountId_Update(AccountId)\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        const breadcrumbs = [{ name: 'Account', link: 'account' }]\r\n        const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        // const AccountId = this.props.user._id\r\n        return (\r\n            <Fragment>\r\n                <Container style={MUI_st_Account_Container} maxWidth=\"md\">\r\n                    <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n                    <AccountDetail />\r\n                    <hr />\r\n                    <GenericModals\r\n                        size='m'\r\n                        header='Update Account'\r\n                        body={<AccountUpdate />}\r\n                        Buttonstyle={st_button}\r\n                        Buttoncolor='primary'\r\n                        Buttonsize='large'\r\n                        ButtononClickeven={() => this.onClick_get_AccountId_Update(this.props.user._id)}\r\n                        Buttonlabel={'Update'}\r\n                    />\r\n                    <LogOutButton />\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.KasirQu_Auth.User\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_AccountId_Detail, get_AccountId_Update })(Account)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Add_Account } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nclass AddAccount extends React.Component {\r\n    state = {\r\n        UserName: '',\r\n        Name: '',\r\n        Password: '',\r\n        ConfirmPassword: '',\r\n        isKasir: false,\r\n        isAdmin: false,\r\n        isSuperUser: false,\r\n        Profilepicture: null,\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User } = this.props\r\n        const addaccountdata = {\r\n            UserName: this.state.UserName,\r\n            Name: this.state.Name,\r\n            Password: this.state.Password,\r\n            isKasir: this.state.isKasir,\r\n            isAdmin: this.state.isAdmin,\r\n            isSuperUser: this.state.isSuperUser,\r\n            Profilepicture: this.state.Profilepicture,\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        if (this.state.Password === this.state.ConfirmPassword) {\r\n            this.props.Add_Account(addaccountdata, authdata)\r\n        }\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const User = this.props.User\r\n        const {\r\n            UserName,\r\n            Name,\r\n            Password,\r\n            ConfirmPassword,\r\n            isKasir,\r\n            isAdmin,\r\n            isSuperUser,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='User Name' name='UserName' value={UserName} required />\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Name' name='Name' value={Name} required />\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='password' label='Password' name='Password' value={Password} required />\r\n                    <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='password' label='Confirm Password' name='ConfirmPassword' value={ConfirmPassword}\r\n                        error={((Password !== ConfirmPassword) && (ConfirmPassword !== '')) ? true : false}\r\n                        helperText={((Password !== ConfirmPassword) && (ConfirmPassword !== '')) ? 'password dan password confirm harus sama' : null}\r\n                    />\r\n                    <label>Photo Profile:</label><br />\r\n                    <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n                    <hr />\r\n                    <label>Kasir:</label><br />\r\n                    <div className='switch'>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isKasir' checked={isKasir} /><span></span><br />\r\n                    </div><br />\r\n                    <label>Admin:</label><br />\r\n                    <div className='switch'>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAdmin' checked={isAdmin} /><span></span><br />\r\n                    </div><br />\r\n                    {(User.isSuperUser) ?\r\n                        <Fragment>\r\n                            <label>SuperUser:</label><br />\r\n                            <div className='switch'>\r\n                                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isSuperUser' checked={isSuperUser} /><span></span><br />\r\n                            </div><br />\r\n                        </Fragment>\r\n                        : null\r\n                    }\r\n                    <hr />\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Add Account</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Add_Account })(AddAccount)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Account_List, get_AccountId_Detail, get_AccountId_Update, Delete_an_Account } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport GenericModals from '../GenericModals'\r\nimport AccountDetail from './Account.AccountDetail'\r\nimport AccountUpdate from './Account.AccountUpdate'\r\n\r\nclass UserDataList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.Load_Account_List()\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_user', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_user', ColumnNumb)\r\n    }\r\n    onClick_get_AccountId_Detail(AccountID) {\r\n        this.props.get_AccountId_Detail(AccountID)\r\n    }\r\n    onClick_get_AccountId_Update(AccountID) {\r\n        this.props.get_AccountId_Update(AccountID)\r\n    }\r\n    onClick_get_Delete_an_Account(AccountID) {\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Delete_an_Account(AccountID, authdata)\r\n    }\r\n    render() {\r\n        const data = this.props.AccountList\r\n        const { User, idDetailAccount } = this.props\r\n        const DeleteButton = () => {\r\n            return (\r\n                <Fragment>\r\n                    <Button\r\n                        style={{ ...MUI_FullWidth, MUI_VerticalMargin }}\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        onClick={() => this.onClick_get_Delete_an_Account(idDetailAccount)}\r\n                    >\r\n                        Delete\r\n                        </Button>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {data ?\r\n                    <Table stickyHeader id='tabel_user'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{ width: '5%' }} align='center' onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                <TableCell style={{ width: '15%' }} align='left' onClick={() => this.ButtonShortSTR(1)}>ID</TableCell>\r\n                                <TableCell style={{ width: '50%' }} align='left' onClick={() => this.ButtonShortSTR(2)}>User Name</TableCell>\r\n                                <TableCell style={{ width: '10%' }} align='center'>Detail</TableCell>\r\n                                {User ? (User.isSuperUser ?\r\n                                    <Fragment>\r\n                                        <TableCell style={{ width: '10%' }} align='center'>Edit</TableCell>\r\n                                        <TableCell style={{ width: '10%' }} align='center'>Delete</TableCell>\r\n                                    </Fragment>\r\n                                    : null)\r\n                                    : null\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map((item, index) => (\r\n                                <TableRow hover key={index + 1}>\r\n                                    <TableCell align='center'>{index + 1}</TableCell>\r\n                                    <TableCell align='left'>{item._id}</TableCell>\r\n                                    <TableCell align='left'>{item.UserName}</TableCell>\r\n                                    <TableCell align='center'>\r\n                                        <GenericModals\r\n                                            size='s'\r\n                                            header='Account Detail'\r\n                                            body={<AccountDetail />}\r\n                                            Buttoncolor='primary'\r\n                                            ButtononClickeven={() => this.onClick_get_AccountId_Detail(item._id)}\r\n                                            Buttonlabel={'Detail'}\r\n                                        />\r\n                                    </TableCell>\r\n                                    {User ? (User.isSuperUser ?\r\n                                        <Fragment>\r\n                                            <TableCell align='center'>\r\n                                                <GenericModals\r\n                                                    size='m'\r\n                                                    header='Update Account'\r\n                                                    body={<AccountUpdate />}\r\n                                                    Buttoncolor='inherit'\r\n                                                    ButtononClickeven={() => this.onClick_get_AccountId_Update(item._id)}\r\n                                                    Buttonlabel={'Edit'}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align='center'>\r\n                                                <GenericModals\r\n                                                    size='s'\r\n                                                    header='Delete Account'\r\n                                                    body={<AccountDetail />}\r\n                                                    footer={<DeleteButton />}\r\n                                                    Buttoncolor='secondary'\r\n                                                    ButtononClickeven={() => this.onClick_get_AccountId_Detail(item._id)}\r\n                                                    Buttonlabel={'Delete'}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </Fragment>\r\n                                        : null)\r\n                                        : null\r\n                                    }\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    AccountList: state.KasirQu_Account.AccountList,\r\n    idDetailAccount: state.KasirQu_Account.idDetailAccount,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_Account_List, get_AccountId_Detail, get_AccountId_Update, Delete_an_Account })(UserDataList)","import React, { Fragment } from 'react'\r\n\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport GenericModals from '../../Containers/GenericModals'\r\nimport AddAccount from '../../Containers/Account/Account.AddAccount'\r\nimport UserDataList from '../../Containers/Account/Account.UserDataList'\r\n\r\nconst UserList = () => {\r\n    const breadcrumbs = [{ name: 'Account', link: 'account' }, { name: 'UserList', link: 'account/userlist' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <GenericModals\r\n                size='m'\r\n                header='Add Account'\r\n                body={<AddAccount />}\r\n                Buttonstyle={{ ...MUI_FullWidth, ...MUI_VerticalMargin }}\r\n                Buttonvariant='contained'\r\n                Buttonsize='large'\r\n                Buttoncolor='primary'\r\n                ButtononClickeven={() => null}\r\n                Buttonlabel={'Add Account'}\r\n            />\r\n            <hr />\r\n            <UserDataList />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserList","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_TokoDetail } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { Avatar, TextField } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_st_AccountDetail_Avatar, MUI_st_AccountDetail_TextField, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass AccountDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.get_TokoDetail()\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const TokoDetail = this.props.TokoDetail\r\n        const DefaultUrl = this.props.WebSite ? `http://${this.props.WebSite}` : `http://${this.props.IpAddres ? this.props.IpAddres : '127.0.0.1'}:${this.props.Port ? this.props.Port : '5000'}`\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_st_AccountDetail_TextField, ...theme.customTheme.readonlytextfield }\r\n        return (\r\n            <Fragment>\r\n                {TokoDetail ?\r\n                    <Fragment>\r\n                        <Avatar alt=\"Remy Sharp\" src={TokoDetail.Logo ? `${DefaultUrl}/${TokoDetail.Logo}` : null} style={MUI_st_AccountDetail_Avatar} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Nama Toko' name='NamaToko' value={TokoDetail.NamaToko ? TokoDetail.NamaToko : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Alamat' name='Alamat' value={TokoDetail.Alamat ? TokoDetail.Alamat : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Kontak' name='Kontak' value={TokoDetail.Kontak ? TokoDetail.Kontak : ''} />\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    TokoDetail: state.KasirQu_Account.TokoDetail,\r\n    IpAddres: state.KasirQu_Auth.IpAddres,\r\n    Port: state.KasirQu_Auth.Port,\r\n    WebSite: state.KasirQu_Auth.WebSite,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_TokoDetail })(withTheme(AccountDetail))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_TokoDetail, Update_Toko } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass TokoUpdate extends React.Component {\r\n    state = {\r\n        NamaToko: '',\r\n        Alamat: '',\r\n        Kontak: '',\r\n        Logo: null,\r\n    }\r\n    componentDidMount() {\r\n        this.props.get_TokoDetail()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.TokoDetail !== prevProps.TokoDetail) {\r\n            const { TokoDetail } = this.props\r\n            if (TokoDetail) {\r\n                this.setState({\r\n                    NamaToko: TokoDetail.NamaToko,\r\n                    Alamat: TokoDetail.Alamat,\r\n                    Kontak: TokoDetail.Kontak,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { User } = this.props\r\n        const updatedata = {\r\n            NamaToko: this.state.NamaToko,\r\n            Alamat: this.state.Alamat,\r\n            Kontak: this.state.Kontak,\r\n            Logo: this.state.Logo,\r\n        }\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n        this.props.Update_Toko(updatedata, authdata)\r\n    }\r\n    render() {\r\n        // console.log('prop', this.props)\r\n        const TokoDetail = this.props.TokoDetail\r\n\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const {\r\n            NamaToko,\r\n            Alamat,\r\n            Kontak,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                {TokoDetail ?\r\n                    <Fragment>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Nama Toko' name='NamaToko' value={NamaToko ? NamaToko : ''} />\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Alamat' name='Alamat' value={Alamat ? Alamat : ''} />\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Kontak' name='Kontak' value={Kontak ? Kontak : ''} />\r\n\r\n                            <label>Logo:</label><br />\r\n                            <input type='file' accept='image/*' onChange={this.File_OnChange} name='Logo' /><br />\r\n\r\n                            <hr />\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Update</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    : <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    TokoDetail: state.KasirQu_Account.TokoDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_TokoDetail, Update_Toko })(TokoUpdate)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\nimport { MUI_st_Account_Container, MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport TokoDetail from '../../Containers/Account/Account.TokoDetail'\r\nimport GenericModals from '../../Containers/GenericModals'\r\nimport TokoUpdate from '../../Containers/Account/Account.TokoUpdate'\r\n\r\nclass Toko extends React.Component {\r\n    render() {\r\n        const breadcrumbs = [{ name: 'Account', link: 'account' }, { name: 'Toko Detail', link: 'account/tokodetail' }]\r\n        const st_button = { ...MUI_FullWidth, ...MUI_VerticalMargin }\r\n        const User = this.props.User\r\n        return (\r\n            <Fragment>\r\n                <Container style={MUI_st_Account_Container} maxWidth=\"md\">\r\n                    <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n                    <TokoDetail />\r\n                    <hr />\r\n                    {User?.isSuperUser ? (\r\n                        <GenericModals\r\n                            size='m'\r\n                            header='Update Toko'\r\n                            body={<TokoUpdate />}\r\n                            Buttonstyle={st_button}\r\n                            Buttoncolor='primary'\r\n                            Buttonsize='large'\r\n                            ButtononClickeven={() => null}\r\n                            Buttonlabel={'Update'}\r\n                        />) : null}\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    User: state.KasirQu_Auth.User\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Toko)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { get_HistoryDetail } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { MUI_FullWidth, MUI_VerticalMargin } from '../../../MUI_theme'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\n\r\nclass HistoryDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idDetailHistory !== prevProps.idDetailHistory) {\r\n            const { idDetailHistory } = this.props\r\n            this.props.get_HistoryDetail(idDetailHistory)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { idDetailHistory } = this.props\r\n        if (idDetailHistory !== null) {\r\n            this.props.get_HistoryDetail(idDetailHistory)\r\n        }\r\n    }\r\n    render() {\r\n        const theme = this.props.theme\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth, ...theme.customTheme.readonlytextfield }\r\n        const Detail = this.props.HistoryDetail\r\n        const Detail_Change = Detail ? JSON.parse(Detail.Change) : null\r\n        // console.log('Detail_Change', Detail_Change)\r\n        const DataKeys = Detail_Change ? Object.keys(Detail_Change) : null\r\n        // console.log('DataKeys', DataKeys)\r\n        const DataChange = []\r\n        if (Detail_Change) {\r\n            DataChange.push(Detail_Change)\r\n        }\r\n        // console.log('DataChange', DataChange)\r\n        return (\r\n            <Fragment>\r\n                {Detail ? (\r\n                    <Fragment>\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='User Name' name='UserName' value={Detail.UserName ? Detail.UserName : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Tanggal' name='Tanggal' value={Detail.Tanggal ? new Date(Detail.Tanggal).toLocaleString() : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Lokasi' name='Location' value={Detail.Location ? Detail.Location : ''} />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Aksi' name='Action' value={Detail.Action ? Detail.Action : ''} />\r\n                        <label>Perubahan:</label>\r\n                        {DataChange && DataChange.length > 0 ? (\r\n                            <Fragment>\r\n                                <Table id='tabel_history_detail_change'>\r\n                                    <TableHead >\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">No</TableCell>\r\n                                            {DataKeys.map((item) => (\r\n                                                <TableCell\r\n                                                    align=\"center\"\r\n                                                    style={{ maxWidth: `${(100 / (DataKeys.length) + 2) - 1}%` }}\r\n                                                    key={item}\r\n                                                >\r\n                                                    {item}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {DataChange.map((item, index) => (\r\n                                            <TableRow hover key={index}>\r\n                                                <TableCell align=\"center\" >{index + 1}</TableCell>\r\n                                                {Object.keys(item).map((itemitem, indexindex) => (\r\n                                                    <TableCell align=\"center\" key={`${index}${indexindex}`} >\r\n                                                        {/* {JSON.stringify(item[itemitem])} */}\r\n                                                        {(typeof item[itemitem] === 'object' && item[itemitem] !== null) ? JSON.stringify(item[itemitem]) : item[itemitem]}\r\n                                                    </TableCell>\r\n                                                ))}\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Fragment>\r\n                        ) : <DataTidakDitemukan />}\r\n                        <hr />\r\n                        <TextField style={st_textfield} variant='outlined' InputProps={{ readOnly: true, }} type='text' label='Status' name='Status' value={Detail.Status ? \"Sukses\" : \"Gagal\"} />\r\n\r\n                    </Fragment>\r\n                ) : <DataTidakDitemukan />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    idDetailHistory: state.KasirQu_Account.idDetailHistory,\r\n    HistoryDetail: state.KasirQu_Account.HistoryDetail,\r\n})\r\n\r\nexport default connect(mapStateToProps, { get_HistoryDetail })(withTheme(HistoryDetail))","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_History_List, get_HistoryId_Detail, Export_History } from '../../../Store/Actions/Account.Actions'\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\r\nimport { MUI_VerticalMargin, MUI_FullWidth } from '../../../MUI_theme'\r\n\r\nimport { Short_Column_INT, Short_Column_STR, Short_Column_Date } from '../Shorting'\r\n\r\nimport { DataTidakDitemukan } from '../Page404'\r\nimport GenericModals from '../GenericModals'\r\nimport HistoryDetail from './Account.History.HistoryDetail'\r\n\r\nclass HistoryList extends React.Component {\r\n    state = {\r\n        ExportHistoryList: [],\r\n    }\r\n    componentDidMount() {\r\n        this.props.Load_History_List()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.HistoryList !== prevProps.HistoryList) {\r\n            const { HistoryList } = this.props\r\n            this.setState({ ExportHistoryList: HistoryList })\r\n        }\r\n        if (this.props.ExportHistoryList !== prevProps.ExportHistoryList) {\r\n            const { ExportHistoryList } = this.props\r\n            this.setState({ ExportHistoryList: ExportHistoryList })\r\n        }\r\n    }\r\n    onClick_get_HistoryId_Detail(HistoryID) {\r\n        this.props.get_HistoryId_Detail(HistoryID)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabel_export_history', ColumnNumb)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabel_export_history', ColumnNumb)\r\n    }\r\n    ButtonShortDate(ColumnNumb) {\r\n        Short_Column_Date('tabel_export_history', ColumnNumb)\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const ExportHistoryList = this.state.ExportHistoryList\r\n        const { User } = this.props\r\n        const authdata = {\r\n            isKasir: User.isKasir,\r\n            isAdmin: User.isAdmin,\r\n            isSuperUser: User.isSuperUser,\r\n        }\r\n\r\n        this.props.Export_History(ExportHistoryList, authdata)\r\n    }\r\n    render() {\r\n        const {\r\n            ExportHistoryList,\r\n        } = this.state\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const data = ExportHistoryList\r\n        // console.log(data)\r\n        return (\r\n            <Fragment>\r\n                {(data && data.length > 0) ?\r\n                    <Fragment>\r\n                        <Table stickyHeader id='tabel_export_history'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '5%' }} align='center' onClick={() => this.ButtonShortINT(0)}>No</TableCell>\r\n                                    <TableCell style={{ width: '45%' }} align='center' onClick={() => this.ButtonShortSTR(1)}>UserName</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align='center' onClick={() => this.ButtonShortDate(2)}>Tanggal</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align='center' onClick={() => this.ButtonShortSTR(3)}>Location</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align='center' onClick={() => this.ButtonShortSTR(4)}>Action</TableCell>\r\n                                    <TableCell style={{ width: '30%' }} align='center' onClick={() => this.ButtonShortSTR(5)}>Status</TableCell>\r\n                                    <TableCell style={{ width: '10%' }} align='center'>Detail</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data.map((item, index) => (\r\n                                    <TableRow hover key={index + 1}>\r\n                                        <TableCell align='center'>{index + 1}</TableCell>\r\n                                        <TableCell align='left'>{item.UserName}</TableCell>\r\n                                        <TableCell align='left'>{new Date(item.Tanggal).toLocaleString()}</TableCell>\r\n                                        <TableCell align='center'>{item.Location}</TableCell>\r\n                                        <TableCell align='center'>{item.Action}</TableCell>\r\n                                        <TableCell align='center'>{item.Status ? \"Sukses\" : \"Gagal\"}</TableCell>\r\n                                        <TableCell align='center'>\r\n                                            <GenericModals\r\n                                                size='xl'\r\n                                                uncontrollsize={true}\r\n                                                header='Account Detail'\r\n                                                body={<HistoryDetail />}\r\n                                                Buttoncolor='primary'\r\n                                                ButtononClickeven={() => this.onClick_get_HistoryId_Detail(item._id)}\r\n                                                Buttonlabel={'Detail'}\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Export</Button>\r\n                        </form>\r\n                    </Fragment>\r\n                    :\r\n                    <DataTidakDitemukan />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    User: state.KasirQu_Auth.User,\r\n    HistoryList: state.KasirQu_Account.HistoryList,\r\n    ExportHistoryList: state.KasirQu_Account.ExportHistoryList,\r\n})\r\n\r\nexport default connect(mapStateToProps, { Load_History_List, get_HistoryId_Detail, Export_History })(HistoryList)","import React, { Fragment } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Load_Export_Query_History } from '../../../Store/Actions/Account.Actions'\r\nimport { Create_Info_Messages, Create_Warning_Messages } from '../../../Store/Actions/Messages.Actions'\r\n\r\nimport { TextField, FormControl, InputLabel, Select, Button, Chip } from '@material-ui/core'\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { MUI_VerticalMargin, MUI_FullWidth, MUI_HalfWidth, MUI_HorizontalHalfMargin } from '../../../MUI_theme'\r\n\r\nconst date = new Date()\r\nconst dd = date.getDate() >= 10 ? date.getDate() : '0' + date.getDate()\r\nconst mm = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)\r\nconst yyyy = date.getFullYear()\r\n\r\nclass QueryHistoryList extends React.Component {\r\n    state = {\r\n        isAllData: false,\r\n        UserName: '',\r\n        isAllDate: false,\r\n        DateMin: `${yyyy}-${mm}-${dd}T00:01`,\r\n        DateMax: '',\r\n        Location: [],\r\n        Action: [],\r\n        Status: '',\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            UserName: this.state.isAllData ? null : this.state.UserName,\r\n            DateMin: this.state.isAllData ? null : this.state.isAllDate ? null : this.state.DateMin,\r\n            DateMax: this.state.isAllData ? null : this.state.isAllDate ? null : this.state.DateMax,\r\n            Location: this.state.isAllData ? null : this.state.Location,\r\n            Action: this.state.isAllData ? null : this.state.Action,\r\n            Status: this.state.isAllData ? null : this.state.Status,\r\n        }\r\n        if ((!data.DateMin && !data.DateMax) || (this.state.isAllData) || (this.state.isAllDate)) {\r\n            this.props.Create_Info_Messages(null, 'anda mencoba memfilter semua data, mungkin akan memakan waktu proses cukup lama')\r\n        }\r\n        if (\r\n            ((data.DateMax < data.DateMin) && (data.DateMax && data.DateMin))) {\r\n            this.props.Create_Warning_Messages(null, 'Nilai Minimum Lebih Besar Dari Nilai Maksimum, Data mungkin tidak terpanggil')\r\n        }\r\n        this.props.Load_Export_Query_History(data)\r\n    }\r\n    render() {\r\n        const st_textfield = { ...MUI_VerticalMargin, ...MUI_FullWidth }\r\n        const st_halftextfield = { ...MUI_VerticalMargin, ...MUI_HorizontalHalfMargin, ...MUI_HalfWidth }\r\n        const LocationOptions = [\r\n            'JenisBarang',\r\n            'Barang/JenisBarang',\r\n            'Barang',\r\n            'Transaksi/Transaksi',\r\n            'Transaksi/Belanja',\r\n            'Barang/Transaksi/Belanja',\r\n            'Barang/Transaksi/Transaksi',\r\n            'Toko',\r\n            'User',\r\n        ]\r\n        const ActionOptions = [\r\n            'Add',\r\n            'Update',\r\n            'Delete',\r\n            'Import/Add',\r\n            'Belanja/Update',\r\n            'Transaksi/Update',\r\n            'Create',\r\n        ]\r\n        const StatusOption = [\r\n            { text: 'Sukses', value: true },\r\n            { text: 'Gagal', value: false }\r\n        ]\r\n        const {\r\n            isAllData,\r\n            UserName,\r\n            isAllDate,\r\n            DateMin,\r\n            DateMax,\r\n            Location,\r\n            Action,\r\n            Status,\r\n        } = this.state\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>Cari dari Keseluruhan Data:</label><br />\r\n                    <div className='switch' style={MUI_VerticalMargin}>\r\n                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllData' checked={isAllData} /><span></span><br />\r\n                    </div><br />\r\n\r\n                    {!isAllData ? (\r\n                        <Fragment>\r\n                            <TextField style={st_textfield} variant='outlined' onChange={this.Form_OnChange} type='text' label='Berdasarkan UserName' name='UserName' value={UserName} />\r\n\r\n                            <label>Cari dari Keseluruhan Tanggal:</label><br />\r\n                            <div className='switch' style={MUI_VerticalMargin}>\r\n                                <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='isAllDate' checked={isAllDate} /><span></span><br />\r\n                            </div><br />\r\n                            {!isAllDate ? (\r\n                                <Fragment>\r\n                                    <label>Cari Berdasarkan Tanggal:</label><br />\r\n                                    <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Minimum' name='DateMin' value={DateMin} InputLabelProps={{ shrink: true }} /><br />\r\n                                    <TextField style={st_halftextfield} variant='outlined' onChange={this.Form_OnChange} type='datetime-local' label='tanggal Maksimum' name='DateMax' value={DateMax} InputLabelProps={{ shrink: true }} /><br />\r\n                                </Fragment>\r\n                            ) : null}\r\n\r\n                            <Autocomplete\r\n                                multiple\r\n                                value={Location}\r\n                                onChange={(event, newLocation) => {\r\n                                    this.setState({ Location: newLocation })\r\n                                }}\r\n\r\n                                options={LocationOptions.sort((a, b) => (a > b) ? 1 : ((b > a) ? -1 : 0))}\r\n                                // getOptionLabel={option => typeof option === 'string' ? option : option.NamaJenisBarang}\r\n                                getOptionLabel={option => option}\r\n                                // groupBy={(option) => option.Kepemilikan}\r\n                                renderTags={(tagValue, getTagProps) =>\r\n                                    tagValue.map((option, index) => (\r\n                                        <Chip\r\n                                            // label={option.NamaJenisBarang}\r\n                                            label={option}\r\n                                            {...getTagProps({ index })}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                style={{ width: '100%' }}\r\n                                renderInput={(params) => (\r\n                                    <TextField {...params} style={st_textfield} name='Location' label=\"Lokasi\" variant=\"outlined\" placeholder=\"Lokasi\" />\r\n                                )}\r\n                            />\r\n\r\n                            <Autocomplete\r\n                                multiple\r\n                                value={Action}\r\n                                onChange={(event, newAction) => {\r\n                                    this.setState({ Action: newAction })\r\n                                }}\r\n\r\n                                options={ActionOptions.sort((a, b) => (a > b) ? 1 : ((b > a) ? -1 : 0))}\r\n                                // getOptionLabel={option => typeof option === 'string' ? option : option.NamaJenisBarang}\r\n                                getOptionLabel={option => option}\r\n                                // groupBy={(option) => option.Kepemilikan}\r\n                                renderTags={(tagValue, getTagProps) =>\r\n                                    tagValue.map((option, index) => (\r\n                                        <Chip\r\n                                            // label={option.NamaJenisBarang}\r\n                                            label={option}\r\n                                            {...getTagProps({ index })}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                style={{ width: '100%' }}\r\n                                renderInput={(params) => (\r\n                                    <TextField {...params} style={st_textfield} name='Action' label=\"Aksi\" variant=\"outlined\" placeholder=\"Aksi\" />\r\n                                )}\r\n                            />\r\n\r\n                            <FormControl style={st_textfield} variant=\"filled\">\r\n                                <InputLabel shrink >Status</InputLabel>\r\n                                <Select native onChange={this.Form_OnChange} label=\"Status\" name='Status' value={Status} labelWidth={100} >\r\n                                    <option value=\"\" > -- select an option -- </option>\r\n                                    {StatusOption.map((item, index) =>\r\n                                        <option key={index} value={item.value}>{item.text}</option>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Fragment>\r\n                    ) : null}\r\n\r\n                    <Button type='submit' style={st_textfield} size=\"large\" variant='contained' color='primary' >Cari</Button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { Load_Export_Query_History, Create_Info_Messages, Create_Warning_Messages })(QueryHistoryList)","import React, { Fragment } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TableSearching } from '../../Containers/Searching'\r\nimport BreadCrumbs from '../../Containers/BreadCrumbs'\r\nimport HistoryList from '../../Containers/Account/Account.History.HistoryList'\r\nimport QueryHistoryList from '../../Containers/Account/Account.History.QueryHistoryList'\r\n\r\nconst History = () => {\r\n    const breadcrumbs = [{ name: 'Account', link: 'account' }, { name: 'Toko Detail', link: 'account/tokodetail' }, { name: 'History', link: 'account/tokodetail/history' }]\r\n    return (\r\n        <Fragment>\r\n            <BreadCrumbs breadcrumbs={breadcrumbs} />\r\n            <Typography variant='h4' align='center'>\r\n                History\r\n            </Typography>\r\n            <TableSearching\r\n                hidesearch={true}\r\n                advancesearch={true}\r\n                accordiondetails={<QueryHistoryList />}\r\n            />\r\n            <HistoryList />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default History","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport Store from '../../../Store/Store'\r\nimport { connect } from 'react-redux'\r\nimport { Get_Blog_Detail } from '../../../Store/Actions/Blog.Actions'\r\n\r\n// import { gsap } from 'gsap'\r\n// // import { ScrollTrigger } from 'gsap/ScrollTrigger'\r\n// import { ScrollTrigger } from \"gsap/dist/ScrollTrigger\"\r\n\r\nimport Introduce from '../../Containers/Blog/Introduce'\r\nimport OpeningPanel from '../../Containers/Blog/OpeningPanel'\r\nimport ExplanationPanel from '../../Containers/Blog/ExplanationPanel'\r\nimport FooterPanel from '../../Containers/Blog/FooterPanel'\r\n\r\nimport Logo from '../../../IMG/logo_1.png'\r\nimport { GrGroup, GrCalculator } from 'react-icons/gr'\r\n\r\nconst BlogPrestasiQu = (props) => {\r\n    useEffect(() => {\r\n        Store.dispatch(Get_Blog_Detail(2))\r\n        // ScrollTrigger.refresh()\r\n    }, [])\r\n    const ShowData = props.Blog_Detail\r\n    return (\r\n        <Fragment>\r\n            <Introduce\r\n                Description={ShowData?.Title ? ShowData.Title : ''}\r\n            />\r\n            <OpeningPanel\r\n                Title={ShowData?.Title ? ShowData.Title : ''}\r\n                Description={ShowData?.Description ? ShowData.Description : ''}\r\n            />\r\n            <ExplanationPanel\r\n                id='GroupedUser'\r\n                Title='Grouped User'\r\n                Description='Each User grouped into a category, an action allowed or not determine based on User Group'\r\n                ContentICO={GrGroup}\r\n                ReverstRow={true}\r\n            />\r\n            <ExplanationPanel\r\n                id='SubmissionSystem'\r\n                Title='Submission System'\r\n                Description='A capable User can submit a Point or Prestasi to another user, after submission a SuperVisor User will cek and choice whether a Submission Accepted Rejected or Delayed. A Submission can also input with image'\r\n                ContentImage={Logo}\r\n            />\r\n            <ExplanationPanel\r\n                id='AutoCalculateAPoint'\r\n                Title='Auto Calculate a Point'\r\n                Description='System will automatically change a Point base on Point or Prestasi after Submission accepted, and also User can see their own Point or Prestasi history'\r\n                ContentICO={GrCalculator}\r\n                ReverstRow={true}\r\n            />\r\n            {/* <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 1440 320\"\r\n            >\r\n                <path\r\n                    fill=\"#0099ff\"\r\n                    fill-opacity=\"1\"\r\n                    d=\"M0,320L0,160L288,160L288,96L576,96L576,64L864,64L864,64L1152,64L1152,288L1440,288L1440,320L1152,320L1152,320L864,320L864,320L576,320L576,320L288,320L288,320L0,320L0,320Z\"\r\n                >\r\n                </path>\r\n            </svg> */}\r\n            <FooterPanel\r\n                GithubLink={ShowData?.GithubLink ? ShowData.GithubLink : ''}\r\n                PrototypeLink={ShowData?.PrototypeLink ? ShowData.PrototypeLink : ''}\r\n                SVGd=\"M0,320L0,160L288,160L288,96L576,96L576,64L864,64L864,64L1152,64L1152,288L1440,288L1440,320L1152,320L1152,320L864,320L864,320L576,320L576,320L288,320L288,320L0,320L0,320Z\"\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    Blog_Detail: state.Generic_Blog.Blog_Detail\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(BlogPrestasiQu)","import React from 'react'\r\n\r\nconst loading = () => {\r\n    return (\r\n        <div className='content'>\r\n            <div className=\"load-wrapp\">\r\n                <div className=\"loadaer\">\r\n                    {/* <p className=\"loading-text\">Loading 6</p> */}\r\n                    <div className=\"letter-holder\">\r\n                        <div className=\"l-1 letter\">L</div>\r\n                        <div className=\"l-2 letter\">o</div>\r\n                        <div className=\"l-3 letter\">a</div>\r\n                        <div className=\"l-4 letter\">d</div>\r\n                        <div className=\"l-5 letter\">i</div>\r\n                        <div className=\"l-6 letter\">n</div>\r\n                        <div className=\"l-7 letter\">g</div>\r\n                        <div className=\"l-8 letter\">.</div>\r\n                        <div className=\"l-9 letter\">.</div>\r\n                        <div className=\"l-10 letter\">.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default loading","import React from 'react'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nimport Loading from '../Components/Container/Loading'\r\n\r\nconst PrivateRoute=({component:Component, auth,...rest})=>(\r\n    <Route {...rest} render={props=>{\r\n        // return <Component {...props} />\r\n        if (auth.isLoading){\r\n            // return <h2>loading...</h2>\r\n            return <Loading />\r\n        }else if(!auth.isAuthenticated){\r\n            return <Redirect to=\"/blog/preview/prestasiqu/login\" />\r\n        }else{\r\n            //TODO console.log(rest)\r\n            //TODO if(! \"rest\" == \"rest\" api response permission is false return to home )\r\n            return <Component {...props} />\r\n        }\r\n    }}/>\r\n)\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { LogIn } from '../../../Store/Actions/Auth.Actions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// import LoginStaffModal from './loginstaffmodal'\r\n\r\nimport Logo from '../../../IMG/Logo.png'\r\nimport LockSVG from '../../../IMG/ICO/lock.svg'\r\nimport AccountSVG from '../../../IMG/ICO/account.svg'\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    nomerinduk: '',\r\n    password: '',\r\n    isShow: true\r\n  }\r\n  onChange = E => this.setState({ [E.target.name]: E.target.value })\r\n  onSubmit = E => {\r\n    E.preventDefault()\r\n    this.props.LogIn(this.state.nomerinduk, this.state.password)\r\n  }\r\n  render() {\r\n    if (this.props.isAuthenticated) {\r\n      return <Redirect to=\"/blog/preview/prestasiqu\" />\r\n    }\r\n    const { nomerinduk, password } = this.state\r\n    return (\r\n      <div className=\"LoginPage\">\r\n        {/* {this.state.isShow ? (<LoginStaffModal />) : null} */}\r\n        <img src={Logo} alt=\"Logo\" className=\"text-rounded mx-auto d-block\" />\r\n        {/* <h1 className=\"font-weight-bold text-center\">PRESTASIQU</h1> */}\r\n        <h4 className=\"text-center\">Pembukuan Prestasi dan Pelanggaran Siswa di Sekolah</h4>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Nomer Induk</label>\r\n            <div className=\"input-group\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\"><img src={AccountSVG} alt=\"logoaccount\" /></span>\r\n              <input className=\"form-control\" type=\"text\" name=\"nomerinduk\" onChange={this.onChange} value={nomerinduk} placeholder=\"Nomer Registrasi / Nomer Induk\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <div className=\"input-group\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\"><img src={LockSVG} alt=\"logopassword\" /></span>\r\n              <input className=\"form-control\" type=\"password\" name=\"password\" onChange={this.onChange} value={password} placeholder=\"Password anda\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-block btn-colorize-green\">Login</button>\r\n          </div>\r\n        </form>\r\n        {/* <button onClick={this.openmodel} data-toggle=\"modal\" data-target=\".bd-example-modal-lg\" className=\"btn btn-block btn-colorize-green\">Staff Login</button> */}\r\n        {/* <button data-toggle=\"modal\" data-target=\"#loginstaffmodal\" className=\"btn btn-block btn-colorize-green\">Staff Login</button> */}\r\n        <button className=\"btn btn-block btn-colorize-green\" style={{ backgroundColor: '#f50057' }} onClick={() => window.location = '/'} >Back to Home</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.PrestasiQu_Auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { LogIn })(Login)\r\n","import React from 'react';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {LogOut} from '../../../Store/Actions/Auth.Actions'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Logout extends React.Component{\r\n  state={\r\n    redirectstatus:false\r\n  }\r\n  componentDidMount() {\r\n    this.props.LogOut()\r\n    setTimeout(() => this.setState({ redirectstatus: true }), 3000)\r\n  }\r\n  // componentWillUnmount() {\r\n  //   clearTimeout(this.id)\r\n  // }\r\n  render(){\r\n    return(\r\n      <div className=\"Logout\">\r\n          <h2 className=\"position-center\">Logout page</h2>\r\n          {this.state.redirectstatus?<Redirect to=\"/blog/preview/prestasiqu/login\" />:null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n  auth:state.PrestasiQu_Auth\r\n})\r\nexport default connect(mapStateToProps,{LogOut})(Logout)\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {LogOut} from '../../Store/Actions/Auth.Actions'\r\nclass Home extends React.Component{\r\n    render(){\r\n        // this.componentDidMount(){\r\n        //     window.location.reload\r\n        // }\r\n        const {user}=this.props.auth\r\n        return(\r\n            <div>\r\n            <center> <h1>selamat datang</h1>\r\n            <strong>{user ? `welcom ${user.nomerinduk}`:\"\"}</strong><br />\r\n            <strong>{user ? `welcom ${user.id}`:\"\"}</strong><br />\r\n            <strong>{user ? `welcom ${user.profile}`:\"\"}</strong>\r\n            <button onClick={this.props.LogOut} className=\"nav-link btn btn-info btn-sm text-light\">Logout</button>\r\n            </center>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.PrestasiQu_Auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{LogOut})(Home)","// import axios from 'axios'\r\nimport {\r\n    // ErrorMassages,\r\n    SuccessMassages,\r\n    // createMassages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    ////// LOADING\r\n    BIODATA_LOADING,\r\n    BIODATA_NOT_LOADING,\r\n    ////// LOAD DETAIL\r\n    _BUTTON_DETAIL_VIEW_,\r\n    BIODATA_DETAIL_LOADED,\r\n    BIODATA_ACCOUNT_DETAIL_LOADED,\r\n    ////// BIODATA-UPDATE\r\n    _BUTTON_UPDATE_BIODATA_,\r\n    BIODATA_UPDATE_DATA_LOADED,\r\n    // BIODATA_UPDATED,\r\n    ////// BIODATA-DELETE\r\n    // BIODATA_DELETED,\r\n    ////// BIODATA ACCOUNT-UPDATE\r\n    _BUTTON_UPDATE_BIODATA_ACCOUNT_,\r\n    BIODATA_ACCOUNT_UPDATE_DATA_LOADED,\r\n    // BIODATA_ACCOUNT_UPDATED,\r\n    ////// BIODATA SISWA\r\n    SISWA_DATA_LOADED,\r\n    ////// BIODATA SISWA-CREATE\r\n    // SISWA_BIODATA_CREATED,\r\n    // SISWA_BIODATA_FAILED_CREATE,\r\n    // SISWA_ACCOUNT_CREATED,\r\n    // SISWA_ACCOUNT_FAILED_CREATE,\r\n    // SISWA_FULLY_CREATED,\r\n    ////// BIODATA STAFF\r\n    STAFF_DATA_LOADED,\r\n    ////// BIODATA STAFF-CREATE\r\n    // STAFF_BIODATA_CREATED,\r\n    // STAFF_BIODATA_FAILED_CREATE,\r\n    // STAFF_ACCOUNT_CREATED,\r\n    // STAFF_ACCOUNT_FAILED_CREATE,\r\n    // STAFF_FULLY_CREATED,\r\n    ////// BIODATA ADMIN\r\n    ADMIN_DATA_LOADED,\r\n    ////// BIODATA ADMIN-CREATE\r\n    // ADMIN_BIODATA_CREATED,\r\n    // ADMIN_BIODATA_FAILED_CREATE,\r\n    // ADMIN_ACCOUNT_CREATED,\r\n    // ADMIN_ACCOUNT_FAILED_CREATE,\r\n    // ADMIN_FULLY_CREATED,\r\n    ////// BIODATA ALL\r\n    ALL_DATA_LOADED,\r\n\r\n} from './Type.Actions'\r\n\r\nimport { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_Biodata,\r\n    Database_Load_Biodata_Account,\r\n    Database_Load_List_of_Siswa,\r\n    Database_Load_List_of_Staff,\r\n    Database_Load_List_of_Admin,\r\n    Database_Load_List_of_All,\r\n} from './Database.Actions'\r\n\r\n////// LOAD DETAIL\r\nexport const Button_DetailView = (BiodataID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_DETAIL_VIEW_,\r\n        payload: BiodataID\r\n    })\r\n}\r\nexport const LoadBiodata = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_Biodata(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: BIODATA_DETAIL_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadBiodata -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n\r\n}\r\nexport const LoadBiodataAccount = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_Biodata_Account(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: BIODATA_ACCOUNT_DETAIL_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadBiodataAccount -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}\r\n////// BIODATA-UPDATE\r\nexport const Button_UpdateBiodata = (BiodataID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_UPDATE_BIODATA_,\r\n        payload: BiodataID\r\n    })\r\n}\r\nexport const LoadBiodataUpdate = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_Biodata(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: BIODATA_UPDATE_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadBiodataUpdate -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}\r\nexport const UpdateBiodata = (data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: UpdateBiodata -> err', err)\r\n    }\r\n}\r\n////// BIODATA-DELETE\r\nexport const DeleteBiodata = (BiodataID, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: DeleteBiodata -> err', err)\r\n    }\r\n}\r\n////// BIODATA ACCOUNT-UPDATE\r\nexport const Button_UpdateBiodataAccount = (BiodataID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_UPDATE_BIODATA_ACCOUNT_,\r\n        payload: BiodataID\r\n    })\r\n}\r\nexport const LoadBiodataAccountUpdate = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n\r\n        const Responses = await Database_Load_Biodata_Account(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: BIODATA_ACCOUNT_UPDATE_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log('Log: LoadBiodataAccountUpdate -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}\r\nexport const UpdateBiodataAccount = (BiodataID, data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: UpdateBiodataAccount -> err', err)\r\n    }\r\n}\r\n////// BIODATA SISWA\r\nexport const LoadListofSiswa = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_List_of_Siswa(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: SISWA_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofSiswa -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}\r\n////// BIODATA SISWA-CREATE\r\nexport const CreateBiodataasSiswa = (Data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: CreateBiodataasSiswa -> err', err)\r\n    }\r\n}\r\n////// BIODATA STAFF\r\nexport const LoadListofStaff = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_List_of_Staff(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: STAFF_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofStaff -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}\r\n////// BIODATA STAFF-CREATE\r\nexport const CreateBiodataasStaff = (Data, authdata) => (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: CreateBiodataasStaff -> err', err)\r\n    }\r\n}\r\n////// BIODATA ADMIN\r\nexport const LoadListofAdmin = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_List_of_Admin(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: ADMIN_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofAdmin -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}\r\n////// BIODATA ADMIN-CREATE\r\nexport const CreateBiodataasAdmin = (Data, authdata) => (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: CreateBiodataasAdmin -> err', err)\r\n    }\r\n}\r\n////// BIODATA ALL\r\nexport const LoadListofAll = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BIODATA_LOADING })\r\n        const Responses = await Database_Load_List_of_All(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: ALL_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofAll -> err', err)\r\n        dispatch({ type: BIODATA_NOT_LOADING })\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Print = () =>{\r\n    return(\r\n        <div className='print-section'>\r\n            <button className='btn btn-lg btn-colorize-green'>print</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Print","import React from 'react'\r\n\r\nconst DataNotFound = ()=>{\r\n    return(\r\n        <div>\r\n            <hr />\r\n            <h1>Data Tidak Ditemukan</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default DataNotFound\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadBiodata } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nimport DataNotFound from '../../Container/DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass BiodataDetail extends React.Component {\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.biodata.Biodata_ID !== prevProps.biodata.Biodata_ID) {\r\n            const { Biodata_ID } = this.props.biodata\r\n            if (Biodata_ID !== null) {\r\n                this.props.LoadBiodata(Biodata_ID)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isBiodataLoading, Biodata } = this.props.biodata\r\n        if (isBiodataLoading === true){\r\n            return(\r\n                <Loading />\r\n            )\r\n        }else{\r\n        return (\r\n            <div>\r\n                {Biodata ? (\r\n                    <div className=\"Biodata-section\">\r\n                        <img src={Biodata ? Biodata.Profilepicture : null} className='biodata-img' alt='foto profile biodata' /><br />\r\n                        <h1 className='position-center'>Biodata</h1>\r\n                        <label>Nomer Induk:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='NomerInduk' readOnly value={Biodata ? Biodata.NomerInduk : \"\"} /><br />\r\n                        <label>Nama:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='Nama' readOnly value={Biodata ? Biodata.Nama : \"\"} /><br />\r\n                        <label>Agama:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='Agama' readOnly value={Biodata ? Biodata.Agama : \"\"} /><br />\r\n                        <label>Tempat Lahir:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='TempatLahir' readOnly value={Biodata ? Biodata.TempatLahir : \"\"} /><br />\r\n                        <label>Tanggal Lahir:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='TanggalLahir' readOnly value={Biodata ? Biodata.TanggalLahir : \"\"} /><br />\r\n                        <label>Alamat:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='Alamat' readOnly value={Biodata ? Biodata.Alamat : \"\"} /><br />\r\n                        <label>Nomer TLP:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='NomerTLP' readOnly value={Biodata ? Biodata.NomerTLP : \"\"} /><br />\r\n                        <label>Email:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='Email' readOnly value={Biodata ? Biodata.Email : \"\"} /><br />\r\n                        <label>Pendidikan Terakhir:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='PendidikanTerakhir' readOnly value={Biodata ? Biodata.PendidikanTerakhir : \"\"} /><br />\r\n                        <label>Instansi Pendidikan Terakhir:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='InstansiPendidikanTerakhir' readOnly value={Biodata ? Biodata.InstansiPendidikanTerakhir : \"\"} /><br />\r\n                        <label>Point:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='Point' readOnly value={Biodata ? Biodata.Point : \"\"} /><br />\r\n                        <label>Status:</label><br />\r\n                        <input type='text' className='Input-as-Info' name='Status' readOnly value={Biodata ? Biodata.Status : \"\"} /><br />\r\n                    </div>\r\n                )\r\n                    : <DataNotFound />\r\n                }\r\n            </div>\r\n        )\r\n            }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    // auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadBiodata })(BiodataDetail)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadBiodataAccount } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nimport DataNotFound from '../../Container/DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass AccountDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.biodata.Biodata_ID !== prevProps.biodata.Biodata_ID) {\r\n            const { Biodata_ID } = this.props.biodata\r\n            if (Biodata_ID !== null) {\r\n                this.props.LoadBiodataAccount(Biodata_ID)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isBiodataLoading, Account } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        if (isBiodataLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Account ? (\r\n                        <div className='account-section'>\r\n                            <h1 className='position-center'>Account</h1>\r\n                            <label>Nomer Induk:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Account ? Account.nomerinduk : \"\"} /><br />\r\n                            <label>Password:</label><br />\r\n                            <input type='password' className='Input-as-Info' name='password' readOnly value={Account ? Account.password : \"\"} /><br />\r\n                            {(user.admin || user.superuser) ? (\r\n                                <div >\r\n                                    <label>Active:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" name='active' readOnly checked={Account ? Account.active : false} />\r\n                                        <span></span><br />\r\n                                    </div><br />\r\n                                    <label>Siswa:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" name='active' readOnly checked={Account ? Account.siswa : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Staff:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" name='active' readOnly checked={Account ? Account.staff : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Admin:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" name='active' readOnly checked={Account ? Account.admin : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Supervisor:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" name='active' readOnly checked={Account ? Account.supervisor : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Superuser:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" name='active' readOnly checked={Account ? Account.superuser : false} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Last Login:</label><br />\r\n                                    <input type='text' className='Input-as-Info' name='account' readOnly value={Account.last_login ? Account.last_login : \"\"} /><br />\r\n                                </div>\r\n\r\n                            )\r\n                                : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadBiodataAccount })(AccountDetail)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadBiodataUpdate, UpdateBiodata } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nimport Loading from '../Loading'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass BiodataUpdateModal extends React.Component {\r\n    state = {\r\n        NomerInduk: '',\r\n        Nama: '',\r\n        Agama: '',\r\n        TempatLahir: '',\r\n        TanggalLahir: '',\r\n        Alamat: '',\r\n        NomerTLP: '',\r\n        Email: '',\r\n        PendidikanTerakhir: '',\r\n        InstansiPendidikanTerakhir: '',\r\n        Point: '',\r\n        Status: '',\r\n        Profilepicture: null,\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.biodata.Update_Biodata_ID !== prevProps.biodata.Update_Biodata_ID) {\r\n            const { Update_Biodata_ID } = this.props.biodata\r\n            if (Update_Biodata_ID !== null) {\r\n                this.props.LoadBiodataUpdate(Update_Biodata_ID)\r\n            }\r\n        }\r\n        if (this.props.biodata.Update_Biodata !== prevProps.biodata.Update_Biodata) {\r\n            const { Update_Biodata } = this.props.biodata\r\n            if (Update_Biodata) {\r\n                this.setState({\r\n                    id: Update_Biodata.id,\r\n                    NomerInduk: Update_Biodata.NomerInduk,\r\n                    Nama: Update_Biodata.Nama,\r\n                    Agama: Update_Biodata.Agama,\r\n                    TempatLahir: Update_Biodata.TempatLahir,\r\n                    TanggalLahir: Update_Biodata.TanggalLahir,\r\n                    Alamat: Update_Biodata.Alamat,\r\n                    NomerTLP: Update_Biodata.NomerTLP,\r\n                    Email: Update_Biodata.Email,\r\n                    PendidikanTerakhir: Update_Biodata.PendidikanTerakhir,\r\n                    InstansiPendidikanTerakhir: Update_Biodata.InstansiPendidikanTerakhir,\r\n                    Point: Update_Biodata.Point,\r\n                    Status: Update_Biodata.Status,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const updatedata = {\r\n            id: this.state.id,\r\n            NomerInduk: this.state.NomerInduk,\r\n            Nama: this.state.Nama,\r\n            Agama: this.state.Agama,\r\n            TempatLahir: this.state.TempatLahir,\r\n            TanggalLahir: this.state.TanggalLahir,\r\n            Alamat: this.state.Alamat,\r\n            NomerTLP: this.state.NomerTLP,\r\n            Email: this.state.Email,\r\n            PendidikanTerakhir: this.state.PendidikanTerakhir,\r\n            InstansiPendidikanTerakhir: this.state.InstansiPendidikanTerakhir,\r\n            Point: this.state.Point,\r\n            Status: this.state.Status,\r\n            Profilepicture: this.state.Profilepicture,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n\r\n        this.props.UpdateBiodata(updatedata, authdata)\r\n    }\r\n    render() {\r\n        const { isBiodataLoading } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        // const {name} = (this.state? this.state : '') //this is shorter?\r\n        const {\r\n            NomerInduk,\r\n            Nama,\r\n            Agama,\r\n            TempatLahir,\r\n            TanggalLahir,\r\n            Alamat,\r\n            NomerTLP,\r\n            Email,\r\n            PendidikanTerakhir,\r\n            InstansiPendidikanTerakhir,\r\n            Point,\r\n            Status,\r\n        } = this.state\r\n        const StatusSiswaOption = ['Siswa Aktif', 'Siswa Lulus', 'Siswa Diberhentikan']\r\n        const StatusGuruOption = ['Guru Aktif', 'Guru Pensiun', 'Guru Diberhentikan']\r\n        const StatusStaffOption = ['Staf Aktif', 'Staf Pensiun', 'Staf Diberhentikan']\r\n        const AgamaOption = ['Buddha', 'Hindu', 'Islam', 'Katolik', 'KongHuCu', 'Kristen', 'Lainnya']\r\n        const PendidikanTerakhirOption = ['SD', 'SMP', 'SMA', 'S1', 'S2', 'S3']\r\n        if (isBiodataLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {NomerInduk ? (\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <label>Nomer Induk:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' readOnly name='NomerInduk' value={NomerInduk} /><br />\r\n                            <label>Nama:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama' value={Nama} placeholder='Masukkan nama lengkap anda' /><br />\r\n                            <label>Agama:</label><br />\r\n                            <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Agama' value={Agama} >\r\n                                <option value=\"\" disabled> -- select an option -- </option>\r\n                                {AgamaOption.map((listdata) =>\r\n                                    <option key={listdata} value={listdata}>{listdata}</option>\r\n                                )}\r\n                            </select>\r\n                            <label>Tempat Lahir:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TempatLahir' value={TempatLahir} placeholder='Masukkan tempat anda lahir' /><br />\r\n                            <label>Tanggal Lahir:</label><br />\r\n                            <input type='date' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TanggalLahir' value={TanggalLahir} placeholder='Masukkan tanggal lahir anda' /> <br />\r\n                            <label>Alamat:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Alamat' value={Alamat} placeholder='Masukkan tempat anda tinggal' /><br />\r\n                            <label>Nomer TLP:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerTLP' value={NomerTLP} placeholder='Masukkan nomer tlp anda' /><br />\r\n                            <label>Email:</label><br />\r\n                            <input type='email' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Email' value={Email} placeholder='Masukkan alamat email anda' /><br />\r\n                            <label>Pendidikan Terakhir:</label><br />\r\n                            {user ? (\r\n                                <div>\r\n                                    {(user.siswa && (!user.staff || !user.admin)) ? (\r\n                                        <div>\r\n                                            <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} readOnly name='PendidikanTerakhir' value={PendidikanTerakhir} /><br />\r\n                                        </div>\r\n                                    ) : (\r\n                                            <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='PendidikanTerakhir' value={PendidikanTerakhir} placeholder='Pilih pendidikan terakhir anda' >\r\n                                                <option value=\"\" disabled> -- select an option -- </option>\r\n                                                {PendidikanTerakhirOption.map((listdata) =>\r\n                                                    <option key={listdata} value={listdata}>{listdata}</option>\r\n                                                )}\r\n\r\n                                            </select>\r\n                                        )}\r\n                                </div>\r\n                            ) : null}\r\n                            <label>Instansi Pendidikan Terakhir:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='InstansiPendidikanTerakhir' value={InstansiPendidikanTerakhir} placeholder='Masukkan nama instansi pendidikan terakhir anda' /><br />\r\n                            {user ? (\r\n                                <div>\r\n                                    {(user.admin || user.superuser) ? (\r\n                                        <div>\r\n                                            <label>Point:</label><br />\r\n                                            <input type='text' className='Input-as-Info Input-as-Update' readOnly name='Point' value={Point} /><br />\r\n                                            <label>Status:</label><br />\r\n                                            <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Status' value={Status} placeholder='Pilih status untuk user ini'>\r\n                                                <option value=\"\" disabled> -- select an option -- </option>\r\n                                                <option value=\"\" disabled>siswa option</option>\r\n                                                {StatusSiswaOption.map((listdata) =>\r\n                                                    <option key={listdata} value={listdata}>{listdata}</option>\r\n                                                )}\r\n                                                <option value=\"\" disabled>guru option</option>\r\n                                                {StatusGuruOption.map((listdata) =>\r\n                                                    <option key={listdata} value={listdata}>{listdata}</option>\r\n                                                )}\r\n                                                <option value=\"\" disabled>staff option</option>\r\n                                                {StatusStaffOption.map((listdata) =>\r\n                                                    <option key={listdata} value={listdata}>{listdata}</option>\r\n                                                )}\r\n                                            </select>\r\n                                        </div>\r\n                                    ) : (\r\n                                            null\r\n                                        )}\r\n                                </div>\r\n                            ) : (\r\n                                    null\r\n                                )}\r\n                            <label>Photo Profile:</label><br />\r\n                            <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    ) : <DataNotFound />}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadBiodataUpdate, UpdateBiodata })(BiodataUpdateModal)","import React from 'react'\r\n\r\nimport BiodataUpdate from '../Detail/BiodataUpdate'\r\n\r\nconst BiodataUpdateModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"BiodataUpdateModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Biodata Update</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataUpdate />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BiodataUpdateModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadBiodataAccountUpdate, UpdateBiodataAccount } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nimport Loading from '../Loading'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass AccountUpdateModal extends React.Component {\r\n    state = {\r\n        nomerinduk: null,\r\n        changepassword: false,\r\n        password: null,\r\n        password1: '',\r\n        password2: '',\r\n        active: false,\r\n        siswa: false,\r\n        staff: false,\r\n        admin: false,\r\n        supervisor: false,\r\n        superuser: false,\r\n        profile: '',\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.biodata.Update_Biodata_Account_ID !== prevProps.biodata.Update_Biodata_Account_ID) {\r\n            const { Update_Biodata_Account_ID } = this.props.biodata\r\n            if (Update_Biodata_Account_ID !== null) {\r\n                this.props.LoadBiodataAccountUpdate(Update_Biodata_Account_ID)\r\n            }\r\n        }\r\n        if (this.props.biodata.Update_Biodata_Account !== prevProps.biodata.Update_Biodata_Account) {\r\n            const { Update_Biodata_Account } = this.props.biodata\r\n            if (Update_Biodata_Account) {\r\n                this.setState({\r\n                    // id: Update_Biodata_Account.id,\r\n                    nomerinduk: Update_Biodata_Account.nomerinduk,\r\n                    password: Update_Biodata_Account.password,\r\n                    active: Update_Biodata_Account.active,\r\n                    siswa: Update_Biodata_Account.siswa,\r\n                    staff: Update_Biodata_Account.staff,\r\n                    admin: Update_Biodata_Account.admin,\r\n                    supervisor: Update_Biodata_Account.supervisor,\r\n                    superuser: Update_Biodata_Account.superuser,\r\n                    profile: Update_Biodata_Account.profile,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n        // console.log('name', E.target.name)\r\n        // console.log('value', E.target.value)\r\n    }\r\n    CheckBox_OnChange = E => {\r\n        this.setState({ [E.target.name]: !this.state[E.target.name] })\r\n        // console.log('name', E.target.name)\r\n        // console.log('value', E.target.value)\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { user } = this.props.auth\r\n        // const { Biodata } = this.props.biodata\r\n        const updatedata = {\r\n            // id: this.state.id,\r\n            nomerinduk: this.state.nomerinduk,\r\n            changepassword: this.state.changepassword,\r\n            password1: this.state.password1,\r\n            active: this.state.active,\r\n            siswa: this.state.siswa,\r\n            staff: this.state.staff,\r\n            admin: this.state.admin,\r\n            supervisor: this.state.supervisor,\r\n            superuser: this.state.superuser,\r\n            // profile: this.state.profile\r\n        }\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        const BiodataID = this.state.profile\r\n        if ((this.state.changepassword === true) && ((this.state.password1 === '' || this.state.password1 === null) || (this.state.password1 !== this.state.password2))) {\r\n            // E.preventDefault()\r\n        } else {\r\n            this.props.UpdateBiodataAccount(BiodataID, updatedata, authdata)\r\n        }\r\n    }\r\n    render() {\r\n        const { isBiodataLoading } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        const {\r\n            nomerinduk,\r\n            changepassword,\r\n            password,\r\n            password1,\r\n            password2,\r\n            active,\r\n            siswa,\r\n            staff,\r\n            admin,\r\n            supervisor,\r\n            superuser,\r\n        } = this.state\r\n        if (isBiodataLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {nomerinduk ? (\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <label>Nomer Induk:</label><br />\r\n                            <input type='text' className='Input-as-Info Input-as-Update' readOnly name='nomerinduk' value={nomerinduk} /><br />\r\n                            <label>Password:</label><br />\r\n                            <div className=\"custom-control custom-checkbox my-1 mr-sm-2\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlInline\" onChange={this.CheckBox_OnChange} name='changepassword' checked={changepassword} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"customControlInline\">Change Password</label>\r\n                            </div>\r\n                            {changepassword ? (\r\n                                <div>\r\n                                    <label>New Password:</label><br />\r\n                                    <input type='password' className={`Input-as-Info Input-as-Update ${password1 === password2 ? null : 'form-error'}`} onChange={this.Form_OnChange} name='password1' value={password1} placeholder='Masukkan password baru anda' /><br />\r\n                                    <label>Confirm New Password:</label><br />\r\n                                    <input type='password' className={`Input-as-Info Input-as-Update ${password1 === password2 ? null : 'form-error'}`} onChange={this.Form_OnChange} name='password2' value={password2} placeholder='Masukkan konfirmasi password baru' /><br />\r\n                                    {password1 === password2 ? null : (\r\n                                        <div className='form-error-massages'>\r\n                                            password did not match\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                    <div>\r\n                                        <input type='password' className='Input-as-Info' name='password' readOnly value={password} /><br />\r\n                                    </div>\r\n                                )}\r\n                            {user.admin || user.superuser ? (\r\n                                <div>\r\n                                    <label>Active:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='active' checked={active} />\r\n                                        <span></span><br />\r\n                                    </div><br />\r\n                                    <label>Siswa:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='siswa' checked={siswa} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Staff:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='staff' checked={staff} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Admin:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='admin' checked={admin} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Supervisor:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='supervisor' checked={supervisor} /><span></span><br />\r\n                                    </div><br />\r\n                                    <label>Superuser:</label><br />\r\n                                    <div className='switch'>\r\n                                        <input type=\"checkbox\" onChange={this.CheckBox_OnChange} name='superuser' checked={superuser} /><span></span><br />\r\n                                    </div><br />\r\n                                </div>\r\n                            ) : null}\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    ) : <DataNotFound />}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\nexport default connect(mapStateToProps, { LoadBiodataAccountUpdate, UpdateBiodataAccount })(AccountUpdateModal)","import React from 'react'\r\n\r\nimport AccountUpdate from '../Detail/AccountUpdate'\r\n\r\nconst AccountUpdateModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"AccountUpdateModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Account Update</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <AccountUpdate />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountUpdateModal","import React from 'react'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount} from '../../../Store/Actions/Biodata.Actions'\r\n\r\nimport Print from '../../Container/Print'\r\nimport BiodataDetail from '../../Container/Detail/BiodataDetail'\r\nimport AccountDetail from '../../Container/Detail/AccountDetail'\r\nimport BiodataUpdateModal from '../../Container/Modal/Modal.Biodata_Update'\r\nimport AccountUpdateModal from '../../Container/Modal/Modal.Account_Update'\r\n\r\nclass Biodata extends React.Component{\r\n    componentDidMount(){\r\n        const {user} = this.props.auth\r\n        if (user !== null){\r\n            this.props.Button_DetailView(user.profile)\r\n        }\r\n    }\r\n    ButtonUpdateBiodata(BiodataID){\r\n        this.props.Button_UpdateBiodata(BiodataID)\r\n    }\r\n    ButtonUpdateBiodataAccount(BiodataID){\r\n        this.props.Button_UpdateBiodataAccount(BiodataID)\r\n    }\r\n    render(){\r\n        const {Biodata} = this.props.biodata\r\n        return(\r\n            <div className='Biodata'>\r\n                <Print />\r\n                <BiodataDetail />\r\n                <button onClick={() =>this.ButtonUpdateBiodata(Biodata.id)} data-toggle=\"modal\" data-target=\"#BiodataUpdateModal\" className='btn btn-sm btn-colorize-green'>Update</button>\r\n                <BiodataUpdateModal />\r\n                <AccountDetail />\r\n                <button onClick={() =>this.ButtonUpdateBiodataAccount(Biodata.id)} data-toggle=\"modal\" data-target=\"#AccountUpdateModal\" className='btn btn-sm btn-colorize-green'>Update</button>\r\n                <AccountUpdateModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    biodata:state.PrestasiQu_Biodata,\r\n    auth:state.PrestasiQu_Auth\r\n  })\r\n\r\nexport default connect(mapStateToProps,{Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount})(Biodata)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CreateBiodataasSiswa } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nclass BiodataSiswaAdd extends React.Component {\r\n    state = {\r\n        NomerInduk: '',\r\n        Nama: '',\r\n        Agama: '',\r\n        TempatLahir: '',\r\n        TanggalLahir: '',\r\n        Alamat: '',\r\n        NomerTLP: '',\r\n        Email: '',\r\n        InstansiPendidikanTerakhir: '',\r\n        Profilepicture: null,\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            NomerInduk: this.state.NomerInduk,\r\n            Nama: this.state.Nama,\r\n            Agama: this.state.Agama,\r\n            TempatLahir: this.state.TempatLahir,\r\n            TanggalLahir: this.state.TanggalLahir,\r\n            Alamat: this.state.Alamat,\r\n            NomerTLP: this.state.NomerTLP,\r\n            Email: this.state.Email,\r\n            InstansiPendidikanTerakhir: this.state.InstansiPendidikanTerakhir,\r\n            Profilepicture: this.state.Profilepicture,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.CreateBiodataasSiswa(data, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    render() {\r\n        const {\r\n            NomerInduk,\r\n            Nama,\r\n            Agama,\r\n            TempatLahir,\r\n            TanggalLahir,\r\n            Alamat,\r\n            NomerTLP,\r\n            Email,\r\n            InstansiPendidikanTerakhir,\r\n        } = this.state\r\n        const AgamaOption = ['Buddha', 'Hindu', 'Islam', 'Katolik', 'KongHuCu', 'Kristen', 'Lainnya']\r\n        return (\r\n            <div>\r\n                <h2 className='position-center'>-Create Siswa Biodata-</h2><br />\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>Nomer Induk:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerInduk' value={NomerInduk} placeholder='Masukkan nomerinduk siswa' required /><br />\r\n                    <label>Nama:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama' value={Nama} placeholder='Masukkan nama lengkap siswa' required /><br />\r\n                    <label>Agama:</label><br />\r\n                    <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Agama' value={Agama} placeholder='Pilih agama siswa'>\r\n                        <option value=\"\" disabled> -- select an option -- </option>\r\n                        {AgamaOption.map((listdata) =>\r\n                            <option key={listdata} value={listdata}>{listdata}</option>\r\n                        )}\r\n                    </select>\r\n                    <label>Tempat Lahir:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TempatLahir' value={TempatLahir} placeholder='Masukkan tempat siswa lahir' required /><br />\r\n                    <label>Tanggal Lahir:</label><br />\r\n                    <input type='date' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TanggalLahir' value={TanggalLahir} placeholder='Masukkan tanggal lahir siswa' required /><br />\r\n                    <label>Alamat:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Alamat' value={Alamat} placeholder='Masukkan tempat siswa tinggal' /><br />\r\n                    <label>Nomer TLP:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerTLP' value={NomerTLP} placeholder='Masukkan nomer tlp siswa' /><br />\r\n                    <label>Email:</label><br />\r\n                    <input type='email' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Email' value={Email} placeholder='Masukkan alamat email siswa' /><br />\r\n                    <label>Instansi Pendidikan Terakhir:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='InstansiPendidikanTerakhir' value={InstansiPendidikanTerakhir} placeholder='Masukkan nama instansi pendidikan terakhir siswa' /><br />\r\n                    <label>Profile picture:</label><br />\r\n                    <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { CreateBiodataasSiswa })(BiodataSiswaAdd)","import React from 'react'\r\n\r\nimport BiodataSiswaAdd from '../Detail/BiodataSiswaAdd'\r\n\r\nconst BiodataAddSiswaModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"BiodataAddSiswaModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create Siswa Biodata</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataSiswaAdd />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BiodataAddSiswaModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CreateBiodataasStaff } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nclass BiodataGuruAdd extends React.Component {\r\n    state = {\r\n        NomerInduk: '',\r\n        Nama: '',\r\n        Agama: '',\r\n        TempatLahir: '',\r\n        TanggalLahir: '',\r\n        Alamat: '',\r\n        NomerTLP: '',\r\n        Email: '',\r\n        PendidikanTerakhir: '',\r\n        InstansiPendidikanTerakhir: '',\r\n        Profilepicture: null,\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            NomerInduk: this.state.NomerInduk,\r\n            Nama: this.state.Nama,\r\n            Agama: this.state.Agama,\r\n            TempatLahir: this.state.TempatLahir,\r\n            TanggalLahir: this.state.TanggalLahir,\r\n            Alamat: this.state.Alamat,\r\n            NomerTLP: this.state.NomerTLP,\r\n            Email: this.state.Email,\r\n            PendidikanTerakhir: this.state.PendidikanTerakhir,\r\n            InstansiPendidikanTerakhir: this.state.InstansiPendidikanTerakhir,\r\n            Profilepicture: this.state.Profilepicture,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.CreateBiodataasStaff(data, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    render() {\r\n        const {\r\n            NomerInduk,\r\n            Nama,\r\n            Agama,\r\n            TempatLahir,\r\n            TanggalLahir,\r\n            Alamat,\r\n            NomerTLP,\r\n            Email,\r\n            PendidikanTerakhir,\r\n            InstansiPendidikanTerakhir,\r\n            // Profilepicture,\r\n        } = this.state\r\n        const AgamaOption = ['Buddha', 'Hindu', 'Islam', 'Katolik', 'KongHuCu', 'Kristen', 'Lainnya']\r\n        const PendidikanTerakhirOption = ['SD', 'SMP', 'SMA', 'S1', 'S2', 'S3']\r\n        return (\r\n            <div>\r\n                <h2 className='position-center'>-Create Guru Biodata-</h2><br />\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>NomerInduk:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerInduk' value={NomerInduk} placeholder='Masukkan nomerinduk staff' required /><br />\r\n                    <label>Nama:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama' value={Nama} placeholder='Masukkan nama lengkap staff' required /><br />\r\n                    <label>Agama:</label><br />\r\n                    <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Agama' value={Agama} >\r\n                        <option value=\"\" disabled> -- select an option -- </option>\r\n                        {AgamaOption.map((listdata) =>\r\n                            <option key={listdata} value={listdata}>{listdata}</option>\r\n                        )}\r\n                    </select>\r\n                    <label>TempatLahir:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TempatLahir' value={TempatLahir} placeholder='Masukkan tempat staff lahir' required /><br />\r\n                    <label>TanggalLahir:</label><br />\r\n                    <input type='date' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TanggalLahir' value={TanggalLahir} placeholder='Masukkan tanggal lahir staff' required /><br />\r\n                    <label>Alamat:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Alamat' value={Alamat} placeholder='Masukkan tempat staff tinggal' /><br />\r\n                    <label>NomerTLP:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerTLP' value={NomerTLP} placeholder='Masukkan nomer tlp staff' /><br />\r\n                    <label>Email:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Email' value={Email} placeholder='Masukkan alamat email staff' /><br />\r\n                    <label>PendidikanTerakhir:</label><br />\r\n                    <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='PendidikanTerakhir' value={PendidikanTerakhir}>\r\n                        <option value=\"\" disabled> -- select an option -- </option>\r\n                        {PendidikanTerakhirOption.map((listdata) =>\r\n                            <option key={listdata} value={listdata}>{listdata}</option>\r\n                        )}\r\n                    </select>\r\n                    <label>InstansiPendidikanTerakhir:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='InstansiPendidikanTerakhir' value={InstansiPendidikanTerakhir} placeholder='Masukkan nama instansi pendidikan terakhir staff' /><br />\r\n                    <label>Profilepicture:</label><br />\r\n                    <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { CreateBiodataasStaff })(BiodataGuruAdd)","import React from 'react'\r\n\r\nimport BiodataGuruAdd from '../Detail/BiodataGuruAdd'\r\n\r\nconst BiodataAddGuruModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"BiodataAddGuruModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create Guru Biodata</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataGuruAdd />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BiodataAddGuruModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CreateBiodataasAdmin } from '../../../Store/Actions/Biodata.Actions'\r\n\r\nclass BiodataAdminAdd extends React.Component {\r\n    state = {\r\n        NomerInduk: '',\r\n        Nama: '',\r\n        Agama: '',\r\n        TempatLahir: '',\r\n        TanggalLahir: '',\r\n        Alamat: '',\r\n        NomerTLP: '',\r\n        Email: '',\r\n        PendidikanTerakhir: '',\r\n        InstansiPendidikanTerakhir: '',\r\n        Profilepicture: null,\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            NomerInduk: this.state.NomerInduk,\r\n            Nama: this.state.Nama,\r\n            Agama: this.state.Agama,\r\n            TempatLahir: this.state.TempatLahir,\r\n            TanggalLahir: this.state.TanggalLahir,\r\n            Alamat: this.state.Alamat,\r\n            NomerTLP: this.state.NomerTLP,\r\n            Email: this.state.Email,\r\n            PendidikanTerakhir: this.state.PendidikanTerakhir,\r\n            InstansiPendidikanTerakhir: this.state.InstansiPendidikanTerakhir,\r\n            Profilepicture: this.state.Profilepicture,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.CreateBiodataasAdmin(data, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    render() {\r\n        const {\r\n            NomerInduk,\r\n            Nama,\r\n            Agama,\r\n            TempatLahir,\r\n            TanggalLahir,\r\n            Alamat,\r\n            NomerTLP,\r\n            Email,\r\n            PendidikanTerakhir,\r\n            InstansiPendidikanTerakhir,\r\n            // Profilepicture,\r\n        } = this.state\r\n        const AgamaOption = ['Buddha', 'Hindu', 'Islam', 'Katolik', 'KongHuCu', 'Kristen', 'Lainnya']\r\n        const PendidikanTerakhirOption = ['SD', 'SMP', 'SMA', 'S1', 'S2', 'S3']\r\n        return (\r\n            <div>\r\n                <h2 className='position-center'>-Create Admin Biodata-</h2><br />\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <label>NomerInduk:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerInduk' value={NomerInduk} placeholder='Masukkan nomerinduk staff' required /><br />\r\n                    <label>Nama:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama' value={Nama} placeholder='Masukkan nama lengkap staff' required /><br />\r\n                    <label>Agama:</label><br />\r\n                    <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Agama' value={Agama}>\r\n                        <option value=\"\" disabled> -- select an option -- </option>\r\n                        {AgamaOption.map((listdata) =>\r\n                            <option key={listdata} value={listdata}>{listdata}</option>\r\n                        )}\r\n                    </select>\r\n                    <label>TempatLahir:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TempatLahir' value={TempatLahir} placeholder='Masukkan tempat staff lahir' required /><br />\r\n                    <label>TanggalLahir:</label><br />\r\n                    <input type='date' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='TanggalLahir' value={TanggalLahir} placeholder='Masukkan tanggal lahir staff' required /><br />\r\n                    <label>Alamat:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Alamat' value={Alamat} placeholder='Masukkan tempat staff tinggal' /><br />\r\n                    <label>NomerTLP:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='NomerTLP' value={NomerTLP} placeholder='Masukkan nomer tlp staff' /><br />\r\n                    <label>Email:</label><br />\r\n                    <input type='email' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Email' value={Email} placeholder='Masukkan alamat email staff' /><br />\r\n                    <label>PendidikanTerakhir:</label><br />\r\n                    <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='PendidikanTerakhir' value={PendidikanTerakhir}>\r\n                        <option value=\"\" disabled> -- select an option -- </option>\r\n                        {PendidikanTerakhirOption.map((listdata) =>\r\n                            <option key={listdata} value={listdata}>{listdata}</option>\r\n                        )}\r\n                    </select>\r\n                    <label>InstansiPendidikanTerakhir:</label><br />\r\n                    <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='InstansiPendidikanTerakhir' value={InstansiPendidikanTerakhir} placeholder='Masukkan nama instansi pendidikan terakhir staff' /><br />\r\n                    <label>Profilepicture:</label><br />\r\n                    <input type='file' accept='image/*' onChange={this.File_OnChange} name='Profilepicture' /><br />\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { CreateBiodataasAdmin })(BiodataAdminAdd)","import React from 'react'\r\n\r\nimport BiodataAdminAdd from '../Detail/BiodataAdminAdd'\r\n\r\nconst BiodataAddAdminModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"BiodataAddAdminModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create Admin Biodata</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataAdminAdd />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BiodataAddAdminModal","import {\r\n    ////// POINT-LOADING\r\n    PELANGGARAN_LOADING,\r\n    PELANGGARAN_NOT_LOADING,\r\n    ////// POINT-PELANGGARAN\r\n    ////// POINT-PELANGGARAN-LIST_LOADED\r\n    PELANGGARAN_LIST_DATA_LOADED,\r\n    ////// POINT-PELANGGARAN-VIEW\r\n    _BUTTON_PELANGGARAN_DETAIL_VIEW_,\r\n    PELANGGARAN_DETAIL_LOADED,\r\n    ////// POINT-PELANGGARAN-CREATE\r\n    // PELANGGARAN_CREATED,\r\n    ////// POINT-PELANGGARAN-UPDATE\r\n    _BUTTON_PELANGGARAN_UPDATE_,\r\n    PELANGGARAN_UPDATE_DATA_LOADED,\r\n    // PELANGGARAN_UPDATED,\r\n    ////// POINT-PELANGGARAN-DELETE\r\n    // PELANGGARAN_DELETED,\r\n    ////// POINT.POINT\r\n    ////// POINT.POINT-LOAD\r\n    POINT_LIST_POINT_LOADED,\r\n    POINT_SCORE_LOADED,\r\n    ////// POINT.POINTUNCONFIRM\r\n    ////// POINT.POINTUNCONFIRM-LOAD\r\n    POINT_POINTUNCONFIRM_LOADED,\r\n    ////// POINT.POINTCONFIRM\r\n    ////// POINT.POINTCONFIRM-LOAD\r\n    POINT_POINTCONFIRM_LOADED,\r\n    ////// POINT.SUBMISSION\r\n    ////// POINT.SUBMISSION-LOAD-DETAIL\r\n    _BUTTON_POINT_DETAIL_VIEW_,\r\n    POINT_POINTSUBMISSION_DETAIL_LOADED,\r\n    ////// POINT.SUBMISSION-CREATE\r\n    // POINT_POINTSUBMISSION_CREATED,\r\n} from './Type.Actions'\r\n\r\nimport { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    SuccessMassages,\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_List_of_Pelanggaran,\r\n    Database_Load_Pelanggaran_Detail,\r\n    Database_Load_Point_List_of_Point,\r\n    Database_Load_Biodata,\r\n    Database_Load_List_of_Unconfirm_Point,\r\n    Database_Load_List_of_Confirm_Point,\r\n    Database_Load_Point_Submission_Detail,\r\n} from './Database.Actions'\r\n\r\n////// POINT-PELANGGARAN\r\n////// POINT-PELANGGARAN-LIST_LOADED\r\nexport const LoadListofPelanggaran = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_List_of_Pelanggaran(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PELANGGARAN_LIST_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofPelanggaran -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\n////// POINT-PELANGGARAN-VIEW\r\nexport const Button_Pelanggaran_DetailView = (PelanggaranID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_PELANGGARAN_DETAIL_VIEW_,\r\n        payload: PelanggaranID,\r\n    })\r\n}\r\nexport const LoadPelanggaranDetail = (PelanggaranID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_Pelanggaran_Detail(tokenConfig(getState), PelanggaranID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PELANGGARAN_DETAIL_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadPelanggaranDetail -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\n////// POINT-PELANGGARAN-CREATE\r\nexport const CreatePelanggaran = (Data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: CreatePelanggaran -> err', err)\r\n    }\r\n}\r\n////// POINT-PELANGGARAN-UPDATE\r\nexport const Button_UpdatePelanggaran = (PelanggaranID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_PELANGGARAN_UPDATE_,\r\n        payload: PelanggaranID,\r\n    })\r\n}\r\nexport const LoadPelanggaranUpdate = (PelanggaranID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_Pelanggaran_Detail(tokenConfig(getState), PelanggaranID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PELANGGARAN_UPDATE_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadPelanggaranUpdate -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\nexport const UpdatePelanggaran = (data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: UpdatePelanggaran -> err', err)\r\n    }\r\n}\r\n////// POINT-PELANGGARAN-DELETE\r\nexport const DeletePelanggaran = (PelanggaranID) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: DeletePelanggaran -> err', err)\r\n    }\r\n}\r\n////// POINT-POINT\r\n////// POINT-POINT-LOAD\r\nexport const LoadPointListofPoint = (NomerIndukDituju) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_Point_List_of_Point(tokenConfig(getState), NomerIndukDituju)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: POINT_LIST_POINT_LOADED,\r\n                payload: Responses\r\n            })\r\n            dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadPointListofPoint -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\nexport const GetPointDetail = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_Biodata(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: POINT_SCORE_LOADED,\r\n                payload: Responses.Point\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log('Log: GetPointDetail -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\n////// POINT-POINTUNCONFIRM\r\n////// POINT-POINTUNCONFIRM-LOAD\r\nexport const LoadListofUnconfirmPoint = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_List_of_Unconfirm_Point(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: POINT_POINTUNCONFIRM_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n\r\n    }\r\n}\r\n////// POINT.POINTCONFIRM\r\n////// POINT.POINTCONFIRM-LOAD\r\nexport const LoadListofConfirmPoint = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_List_of_Confirm_Point(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: POINT_POINTCONFIRM_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofConfirmPoint -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\n////// POINT.SUBMISSION\r\n////// POINT.SUBMISSION-LOAD-DETAIL\r\nexport const Button_PointDetailView = (PointID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_POINT_DETAIL_VIEW_,\r\n        payload: PointID,\r\n    })\r\n}\r\nexport const LoadPointSubmissionDetail = (PointSubmissionID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PELANGGARAN_LOADING })\r\n        const Responses = await Database_Load_Point_Submission_Detail(tokenConfig(getState), PointSubmissionID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: POINT_POINTSUBMISSION_DETAIL_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadPointSubmissionDetail -> err', err)\r\n        dispatch({ type: PELANGGARAN_NOT_LOADING })\r\n    }\r\n}\r\n////// POINT.SUBMISSION-CREATE\r\nexport const PointSubmit = (UserNomerInduk, TargetBiodataID, ket, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: PointSubmit -> err', err)\r\n    }\r\n}\r\n////// POINT.POINTACCEPTION\r\nexport const PointAcception = (PointID, UserNI, AcceptionAction, authdata) => async (dispatch, getState) => {\r\n    const bodydata = new FormData();\r\n\r\n    bodydata.append('Nomer_Induk_Assessor', UserNI)\r\n    if (AcceptionAction === 'Accepted') {\r\n        try {\r\n            const Responses = Action_Denied()\r\n            dispatch(SuccessMassages(Responses.data.msg))\r\n        } catch (err) {\r\n            console.log('Log: PointAcception -> err', err)\r\n        }\r\n    } else {\r\n        try {\r\n            const Responses = Action_Denied()\r\n            dispatch(SuccessMassages(Responses.data.msg))\r\n        } catch (err) {\r\n            console.log('Log: PointAcception -> err', err)\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CreatePelanggaran } from '../../../Store/Actions/Point.Actions'\r\n\r\nclass PelanggaranAdd extends React.Component {\r\n    state = {\r\n        Nama_Pelanggaran: '',\r\n        Jenis_Pelanggaran: '',\r\n        Pelanggaran_Point: '',\r\n        Keterangan_Pelanggaran: '',\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            Nama_Pelanggaran: this.state.Nama_Pelanggaran,\r\n            Jenis_Pelanggaran: this.state.Jenis_Pelanggaran,\r\n            Pelanggaran_Point: this.state.Pelanggaran_Point,\r\n            Keterangan_Pelanggaran: this.state.Keterangan_Pelanggaran,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.CreatePelanggaran(data, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    render() {\r\n        const {\r\n            Nama_Pelanggaran,\r\n            Jenis_Pelanggaran,\r\n            Pelanggaran_Point,\r\n            Keterangan_Pelanggaran,\r\n        } = this.state\r\n        const JenisPelanggaranOption = ['Ringan', 'Sedang', 'Berat']\r\n        return (\r\n            <div>\r\n                <h2 className='position-center'>-Create Pelanggaran Detail-</h2><br />\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <div>\r\n                        <label>Nama Pelanggaran:</label><br />\r\n                        <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama_Pelanggaran' value={Nama_Pelanggaran} placeholder='Masukkan nama pelanggaran' required /><br />\r\n                        <label>Jenis Pelanggaran:</label><br />\r\n                        <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Jenis_Pelanggaran' value={Jenis_Pelanggaran} required >\r\n                            <option value=\"\" disabled> -- select an option -- </option>\r\n                            {JenisPelanggaranOption.map((listdata) =>\r\n                                <option key={listdata} value={listdata}>{listdata}</option>\r\n                            )}\r\n                        </select>\r\n                        <label>Pelanggaran Point:</label><br />\r\n                        <input type='number' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Pelanggaran_Point' value={Pelanggaran_Point} placeholder='Masukkan jumlah point pengurang karna pelanggaran' required /><br />\r\n                        <label>KeteranganPelanggaran:</label><br />\r\n                        <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Keterangan_Pelanggaran' value={Keterangan_Pelanggaran} placeholder='Masukkan keterangan mengenai pelanggaran' /><br />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { CreatePelanggaran })(PelanggaranAdd)","import React from 'react'\r\n\r\nimport PelanggaranAdd from '../Detail/PelanggaranAdd'\r\n\r\nconst PelanggaranAddModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PelanggaranAddModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create Pelanggaran</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PelanggaranAdd />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PelanggaranAddModal","import React from 'react'\r\n\r\nconst Filter = (parcel) =>{\r\n    const onChange_Filter = (E) => {\r\n        // console.log(E.target.value)\r\n        // console.log('parcel.tablename',parcel.tablename)\r\n\r\n        // var textinput, filter, usertable, tr, td, i, textValue\r\n        const textinput = E.target.value\r\n        const filter = textinput.toUpperCase()\r\n        const usertable = document.getElementById(parcel.tablename)\r\n        const tr = usertable.getElementsByTagName('tr')\r\n        var i, td, txtValue\r\n\r\n        // console.log('textinput',textinput)\r\n        // console.log('filter',filter)\r\n        // console.log('usertable',usertable)\r\n        // console.log('tr',tr)\r\n        for (i = 0; i<tr.length; i++){\r\n            td = tr[i].getElementsByTagName(\"td\")[parcel.tdnumber]\r\n            if (td) {\r\n                txtValue = td.textContent || td.innerText\r\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                    tr[i].style.display = \"\"\r\n                } else {\r\n                    tr[i].style.display = \"none\"\r\n                }\r\n            } \r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <input type='text' className='Input-as-Filter' onChange={onChange_Filter} placeholder='Search Siswa Data by Nomer Induk' />\r\n            <button className='btn btn-lg btn-colorize-green'>Filter</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","export const Short_Column_INT = (TableName, ColumnNumb) => {\r\n    var rows, switching, i, x, y, shouldSwitch, dir, switchcount\r\n    const table = document.getElementById(TableName)\r\n    switching = true\r\n    switchcount = 0\r\n    //Set the sorting direction to ascending:\r\n    dir = \"asc\"\r\n    /*Make a loop that will continue until\r\n    no switching has been done:*/\r\n    while (switching) {\r\n        //start by saying: no switching is done:\r\n        switching = false\r\n        rows = table.rows\r\n        /*Loop through all table rows (except the\r\n        first, which contains table headers):*/\r\n        for (i = 1; i < (rows.length - 1); i++) {\r\n            //start by saying there should be no switching:\r\n            shouldSwitch = false\r\n            /*Get the two elements you want to compare,\r\n            one from current row and one from the next:*/\r\n            x = rows[i].getElementsByTagName(\"td\")[ColumnNumb]\r\n            y = rows[i + 1].getElementsByTagName(\"td\")[ColumnNumb]\r\n            /*check if the two rows should switch place,\r\n            based on the direction, asc or desc:*/\r\n            if (dir === \"asc\") {\r\n                if (Number(x.innerHTML) > Number(y.innerHTML)) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true\r\n                    break\r\n                }\r\n            } else if (dir === \"desc\") {\r\n                if (Number(x.innerHTML) < Number(y.innerHTML)) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        if (shouldSwitch) {\r\n            /*If a switch has been marked, make the switch\r\n            and mark that a switch has been done:*/\r\n            rows[i].parentNode.insertBefore(rows[i + 1], rows[i])\r\n            switching = true\r\n            //Each time a switch is done, increase this count by 1:\r\n            switchcount = switchcount + 1\r\n        } else {\r\n            /*If no switching has been done AND the direction is \"asc\",\r\n            set the direction to \"desc\" and run the while loop again.*/\r\n            if (switchcount === 0 && dir === \"asc\") {\r\n                dir = \"desc\"\r\n                switching = true\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const Short_Column_STR = (TableName, ColumnNumb) => {\r\n    var rows, switching, i, x, y, shouldSwitch, dir, switchcount\r\n    const table = document.getElementById(TableName)\r\n    switching = true\r\n    switchcount = 0\r\n    //Set the sorting direction to ascending:\r\n    dir = \"asc\"\r\n    /*Make a loop that will continue until\r\n    no switching has been done:*/\r\n    while (switching) {\r\n        //start by saying: no switching is done:\r\n        switching = false\r\n        rows = table.rows\r\n        /*Loop through all table rows (except the\r\n        first, which contains table headers):*/\r\n        for (i = 1; i < (rows.length - 1); i++) {\r\n            //start by saying there should be no switching:\r\n            shouldSwitch = false\r\n            /*Get the two elements you want to compare,\r\n            one from current row and one from the next:*/\r\n            x = rows[i].getElementsByTagName(\"td\")[ColumnNumb]\r\n            y = rows[i + 1].getElementsByTagName(\"td\")[ColumnNumb]\r\n            /*check if the two rows should switch place,\r\n            based on the direction, asc or desc:*/\r\n            if (dir === \"asc\") {\r\n                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true\r\n                    break\r\n                }\r\n            } else if (dir === \"desc\") {\r\n                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        if (shouldSwitch) {\r\n            /*If a switch has been marked, make the switch\r\n            and mark that a switch has been done:*/\r\n            rows[i].parentNode.insertBefore(rows[i + 1], rows[i])\r\n            switching = true\r\n            //Each time a switch is done, increase this count by 1:\r\n            switchcount = switchcount + 1\r\n        } else {\r\n            /*If no switching has been done AND the direction is \"asc\",\r\n            set the direction to \"desc\" and run the while loop again.*/\r\n            if (switchcount === 0 && dir === \"asc\") {\r\n                dir = \"desc\"\r\n                switching = true\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofAll, Button_DetailView } from '../../../Store/Actions/Biodata.Actions'\r\nimport {Short_Column_INT, Short_Column_STR} from '../Shorting'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass BiodataDataLengkap extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofAll()\r\n    }\r\n    ButtonSubmission(BiodataID) {\r\n        this.props.Button_DetailView(BiodataID)\r\n    }\r\n    ButtonShortINT(ColumnNumb){\r\n        Short_Column_INT('tabeldatalengkap',ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb){\r\n        Short_Column_STR('tabeldatalengkap',ColumnNumb)\r\n    }\r\n    render() {\r\n        const { Data_All } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        return (\r\n            <div>\r\n                <h1>{this.props.prorpsaction?this.props.prorpsaction:null}</h1>\r\n                {(!Data_All || Data_All.length <= 0) ? <DataNotFound /> :\r\n                    <div className=\"Biodata-section\">\r\n                        <div className='table-responsive'>\r\n                            <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldatalengkap'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}><span className=\"glyphicon glyphicon-sort-by-alphabet\"></span>Index</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(1)}>Nomer Induk</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Status</th>\r\n                                        {((user.admin || user.superuser)&&(this.props.proptype === 'prestasi')) ? (\r\n                                            <th scope=\"col\">Prestasi</th>\r\n                                        ) : null}\r\n                                        {((user.admin || user.superuser)&&(this.props.proptype === 'point')) ? (\r\n                                            <th scope=\"col\">Point</th>\r\n                                        ) : null}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Data_All.map((datasiswa, index) => (\r\n                                        <tr key={datasiswa.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{datasiswa.NomerInduk}</td>\r\n                                            <td>{datasiswa.Nama}</td>\r\n                                            <td>{datasiswa.Status}</td>\r\n                                            {((user.admin || user.superuser)&&(this.props.proptype === 'prestasi')) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonSubmission(datasiswa.id)} data-toggle=\"modal\" data-target=\"#PrestasiSubmissionModal\" className='btn btn-table-colorize-green'>Prestasi</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                            {((user.admin || user.superuser)&&(this.props.proptype === 'point')) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonSubmission(datasiswa.id)} data-toggle=\"modal\" data-target=\"#PointSubmissionModal\" className='btn btn-table-colorize-green'>Point</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofAll, Button_DetailView })(BiodataDataLengkap)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofPelanggaran, PointSubmit } from '../../../Store/Actions/Point.Actions'\r\n\r\nimport Loading from '../Loading'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass PointSubmission extends React.Component {\r\n    state = {\r\n        Nama_Pelanggaran: '',\r\n        Keterangan: '',\r\n        Lampiran: null,\r\n    }\r\n    componentDidMount() {\r\n        this.props.LoadListofPelanggaran()\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const {Biodata_ID} = this.props.biodata\r\n        const { user } = this.props.auth\r\n        const pointdata = {\r\n            Nama_Pelanggaran : this.state.Nama_Pelanggaran,\r\n            Keterangan: this.state.Keterangan,\r\n            Lampiran: this.state.Lampiran,\r\n        }\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.PointSubmit(user.nomerinduk, Biodata_ID, pointdata, authdata)\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Data_Pelanggaran } = this.props.point\r\n        const { isBiodataLoading, Biodata_ID } = this.props.biodata\r\n        const {\r\n            Nama_Pelanggaran,\r\n            Keterangan,\r\n            // Lampiran,\r\n        } = this.state\r\n        if ((isPelanggaranLoading === true) || (isBiodataLoading === true)) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h1>Point Submission Detail</h1>\r\n                    {(Data_Pelanggaran && Biodata_ID) ? (\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <div>\r\n                                <label>Nama Pelanggaran:</label><br />\r\n                                <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama_Pelanggaran' value={Nama_Pelanggaran} required>\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    {Data_Pelanggaran.map((listdata) =>\r\n                                        <option key={listdata.id} value={listdata.Nama_Pelanggaran}>{listdata.Jenis_Pelanggaran}, {listdata.Nama_Pelanggaran}, -{listdata.Pelanggaran_Point}</option>\r\n                                    )}\r\n                                </select>\r\n                                <label>Keterangan:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Keterangan' value={Keterangan} placeholder='Masukkan keterangan tambahan jika diperlukan' /><br />\r\n                                <label>Lampiran:</label><br />\r\n                                <input type='file' accept='image/*' onChange={this.File_OnChange} name='Lampiran' /><br />\r\n                                <div className=\"modal-footer\"></div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    ) : <DataNotFound />}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofPelanggaran, PointSubmit })(PointSubmission)","import React from 'react'\r\n\r\nimport BiodataDetail from '../Detail/BiodataDetail'\r\nimport PointSubmission from '../Detail/PointSubmission'\r\n\r\nconst PointAddModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PointSubmissionModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Submission Point</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataDetail />\r\n                        <hr />\r\n                        <PointSubmission />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PointAddModal","import React from 'react'\r\n\r\nimport Filter from '../Filter'\r\nimport BiodataDataLengkap from '../Detail/BiodataTabel.DataLengkap'\r\nimport PointSubmissionModal from './Modal.PointSubmission'\r\n// import PelanggaranSubmission from '../Detail/PelanggaranSubmission'\r\n\r\nconst PointAddModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PointAddPointModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-super\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create a Point</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <Filter tablename={'tabeldatalengkap'} tdnumber={1}/>\r\n                        <BiodataDataLengkap proptype={'point'} />\r\n                        <PointSubmissionModal />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PointAddModal","import {\r\n    SuccessMassages\r\n} from './Messages.Actions'\r\n\r\nimport {\r\n    ////// PRESTASI\r\n    ////// PRESTASI-LOADING\r\n    PRESTASI_LOADING,\r\n    PRESTASI_NOT_LOADING,\r\n    ////// PRESTASI.INSTANSI\r\n    ////// PRESTASI.INSTANSI-LIST_LOADED\r\n    INSTANSI_LIST_DATA_LOADED,\r\n    ////// PRESTASI.INSTANSI-VIEW\r\n    _BUTTON_INSTANSI_DETAIL_VIEW_,\r\n    INSTANSI_DETAIL_LOADED,\r\n    ////// PRESTASI.INSTANSI-CREATE\r\n    // INSTANSI_CREATED,\r\n    ////// PRESTASI.INSTANSI-UPDATE\r\n    _BUTTON_INSTANSI_UPDATE_,\r\n    INSTANSI_UPDATE_DATA_LOADED,\r\n    // INSTANSI_UPDATED,\r\n    ////// PRESTASI.INSTANSI-DELETE\r\n    // INSTANSI_DELETED,\r\n    ////// PRESTASI.PRESTASI\r\n    ////// PRESTASI.PRESTASI-LOAD\r\n    PRESTASI_LIST_PRESTASI_LOADED,\r\n    PRESTASI_SCORE_LOADED,\r\n    ////// PRESTASI.PRESTASIUNCONFIRM\r\n    ////// PRESTASI.PRESTASIUNCONFIRM-LOAD\r\n    PRESTASI_PRESTASIUNCONFIRM_LOADED,\r\n    ////// PRESTASI.PRESTASICONFIRM\r\n    ////// PRESTASI.PRESTASICONFIRM-LOAD\r\n    PRESTASI_PRESTASICONFIRM_LOADED,\r\n    ////// PRESTASI.SUBMISSION\r\n    ////// PRESTASI.SUBMISSION-LOAD-DETAIL\r\n    _BUTTON_PRESTASI_DETAIL_VIEW_,\r\n    PRESTASI_PRESTASISUBMISSION_DETAIL_LOADED,\r\n    ////// PRESTASI.SUBMISSION-CREATE\r\n    // PRESTASI_PRESTASISUBMISSION_CREATED,\r\n} from './Type.Actions'\r\n\r\nimport { tokenConfig } from './Auth.Actions'\r\n\r\nimport {\r\n    Action_Denied,\r\n    Database_Load_List_of_Instansi,\r\n    Database_Load_Instansi_Detail,\r\n    Database_Load_Prestasi_List_of_Prestasi,\r\n    Database_Load_Biodata,\r\n    Database_Load_List_of_Unconfirm_Prestasi,\r\n    Database_Load_List_of_Confirm_Prestasi,\r\n    Database_Load_Prestasi_Submission_Detail,\r\n} from './Database.Actions'\r\n\r\n////// PRESTASI\r\n////// PRESTASI.INSTANSI\r\n////// PRESTASI.INSTANSI-GET\r\nexport const LoadListofInstansi = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_List_of_Instansi(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: INSTANSI_LIST_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\nexport const Button_Instansi_DetailView = (InstansiID) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: _BUTTON_INSTANSI_DETAIL_VIEW_,\r\n        payload: InstansiID,\r\n    })\r\n}\r\nexport const LoadInstansiDetail = (InstansiID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_Instansi_Detail(tokenConfig(getState), InstansiID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: INSTANSI_DETAIL_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\n////// PRESTASI.INSTANSI-CREATE\r\nexport const CreateInstansi = (Data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: CreateInstansi -> err', err)\r\n    }\r\n}\r\n////// PRESTASI.INSTANSI-UPDATE\r\nexport const Button_UpdateInstansi = (InstansiID) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: _BUTTON_INSTANSI_UPDATE_,\r\n        payload: InstansiID,\r\n    })\r\n}\r\nexport const LoadInstansiUpdate = (InstansiID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_Instansi_Detail(tokenConfig(getState), InstansiID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: INSTANSI_UPDATE_DATA_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadInstansiUpdate -> err', err)\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\nexport const UpdateInstansi = (data, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: UpdateInstansi -> err', err)\r\n    }\r\n}\r\n////// PRESTASI.INSTANSI-DELETE\r\nexport const DeleteInstansi = (InstansiID) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: DeleteInstansi -> err', err)\r\n    }\r\n}\r\n////// PRESTASI-PRESTASI\r\n////// PRESTASI-PRESTASI-LOAD\r\nexport const LoadPrestasiListofPrestasi = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_Prestasi_List_of_Prestasi(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PRESTASI_LIST_PRESTASI_LOADED,\r\n                payload: Responses,\r\n            })\r\n            dispatch({ type: PRESTASI_NOT_LOADING })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadPrestasiListofPrestasi -> err', err)\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\nexport const GetPrestasiDetail = (BiodataID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_Biodata(tokenConfig(getState), BiodataID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PRESTASI_SCORE_LOADED,\r\n                payload: Responses.Point\r\n            })\r\n        }\r\n    } catch (err) {\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\n////// PRESTASI-PRESTASIUNCONFIRM\r\n////// PRESTASI-PRESTASIUNCONFIRM-LOAD\r\nexport const LoadListofUnconfirmPrestasi = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_List_of_Unconfirm_Prestasi(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PRESTASI_PRESTASIUNCONFIRM_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofUnconfirmPrestasi -> err', err)\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\n////// PRESTASI.PRESTASICONFIRM\r\n////// PRESTASI.PRESTASICONFIRM-LOAD\r\nexport const LoadListofConfirmPrestasi = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_List_of_Confirm_Prestasi(tokenConfig(getState))\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PRESTASI_PRESTASICONFIRM_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadListofConfirmPrestasi -> err', err)\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\n////// PRESTASI.SUBMISSION\r\n////// PRESTASI.SUBMISSION-LOAD-DETAIL\r\nexport const Button_PrestasiDetailView = (PrestasiID) => (dispatch) => {\r\n    dispatch({\r\n        type: _BUTTON_PRESTASI_DETAIL_VIEW_,\r\n        payload: PrestasiID,\r\n    })\r\n}\r\nexport const LoadPrestasiSubmissionDetail = (PrestasiSubmissionID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRESTASI_LOADING })\r\n        const Responses = await Database_Load_Prestasi_Submission_Detail(tokenConfig(getState), PrestasiSubmissionID)\r\n        if (Responses) {\r\n            dispatch({\r\n                type: PRESTASI_PRESTASISUBMISSION_DETAIL_LOADED,\r\n                payload: Responses\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log('Log: LoadPrestasiSubmissionDetail -> err', err)\r\n        dispatch({ type: PRESTASI_NOT_LOADING })\r\n    }\r\n}\r\n////// PRESTASI.SUBMISSION-CREATE\r\nexport const PrestasiSubmit = (UserNomerInduk, TargetBiodataID, ket, authdata) => async (dispatch, getState) => {\r\n    try {\r\n        const Responses = Action_Denied()\r\n        dispatch(SuccessMassages(Responses.data.msg))\r\n    } catch (err) {\r\n        console.log('Log: PrestasiSubmit -> err', err)\r\n    }\r\n}\r\n////// PRESTASI.PRESTASIACCEPTION\r\nexport const PrestasiAcception = (PrestasiID, UserNI, AcceptionAction, authdata) => async (dispatch, getState) => {\r\n    const bodydata = new FormData();\r\n\r\n    bodydata.append('Nomer_Induk_Assessor', UserNI)\r\n    if (AcceptionAction === 'Accepted') {\r\n        try {\r\n            const Responses = Action_Denied()\r\n            dispatch(SuccessMassages(Responses.data.msg))\r\n        } catch (err) {\r\n            console.log('Log: PrestasiAcception -> err', err)\r\n        }\r\n    } else {\r\n        try {\r\n            const Responses = Action_Denied()\r\n            dispatch(SuccessMassages(Responses.data.msg))\r\n        } catch (err) {\r\n            console.log('Log: PrestasiAcception -> err', err)\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CreateInstansi } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nclass InstansiAdd extends React.Component {\r\n    state = {\r\n        Nama_Instansi: '',\r\n        Jenis_Instansi: '',\r\n        Keterangan_Instansi: '',\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const data = {\r\n            Nama_Instansi: this.state.Nama_Instansi,\r\n            Jenis_Instansi: this.state.Jenis_Instansi,\r\n            Keterangan_Instansi: this.state.Keterangan_Instansi,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.CreateInstansi(data, authdata)\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    render() {\r\n        const {\r\n            Nama_Instansi,\r\n            Jenis_Instansi,\r\n            Keterangan_Instansi,\r\n        } = this.state\r\n        return (\r\n            <div>\r\n                <h2 className='position-center'>-Create Instansi Detail-</h2><br />\r\n                <form onSubmit={this.Form_OnSubmit}>\r\n                    <div>\r\n                        <label>Nama Instansi:</label><br />\r\n                        <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama_Instansi' value={Nama_Instansi} placeholder='Masukkan nama instansi' required /><br />\r\n                        <label>Jenis Instansi:</label><br />\r\n                        <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Jenis_Instansi' value={Jenis_Instansi} placeholder='Masukkan jenis instansi' /><br />\r\n                        <label>KeteranganInstansi:</label><br />\r\n                        <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Keterangan_Instansi' value={Keterangan_Instansi} placeholder='Masukkan keterangan tambahan tentang instansi' /><br />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { CreateInstansi })(InstansiAdd)","import React from 'react'\r\n\r\nimport InstansiAdd from '../Detail/InstansiAdd'\r\n\r\nconst InstansiAddModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PrestasiAddInstansiModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create Instansi</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <InstansiAdd />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InstansiAddModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofInstansi, PrestasiSubmit } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nimport Loading from '../Loading'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass PrestasiSubmission extends React.Component {\r\n    state = {\r\n        Nama_Prestasi: '',\r\n        No_Sertifikat: '',\r\n        Katagori_Prestasi: '',\r\n        Tingkatan_Prestasi: '',\r\n        Nama_Instansi: '',\r\n        Prestasi_Point: '',\r\n        Keterangan: '',\r\n        Lampiran: null,\r\n    }\r\n    componentDidMount() {\r\n        this.props.LoadListofInstansi()\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    File_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.files[0] })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { Biodata_ID } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        const prestasidata = {\r\n            Nama_Prestasi: this.state.Nama_Prestasi,\r\n            No_Sertifikat: this.state.No_Sertifikat,\r\n            Katagori_Prestasi: this.state.Katagori_Prestasi,\r\n            Tingkatan_Prestasi: this.state.Tingkatan_Prestasi,\r\n            Nama_Instansi: this.state.Nama_Instansi,\r\n            Prestasi_Point: this.state.Prestasi_Point,\r\n            Keterangan: this.state.Keterangan,\r\n            Lampiran: this.state.Lampiran,\r\n        }\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.PrestasiSubmit(user.nomerinduk, Biodata_ID, prestasidata, authdata)\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading, Data_Instansi } = this.props.pestasi\r\n        const { isBiodataLoading, Biodata_ID } = this.props.biodata\r\n        const {\r\n            Nama_Prestasi,\r\n            No_Sertifikat,\r\n            Katagori_Prestasi,\r\n            Tingkatan_Prestasi,\r\n            Nama_Instansi,\r\n            Prestasi_Point,\r\n            Keterangan,\r\n            // Lampiran,\r\n        } = this.state\r\n        const Tingkatan_Prestasi_Choices = ['Remisi', 'RT/RW/Kelurahan', 'Sekolah', 'Kota', 'Provinsi', 'Nasional', 'Internasional']\r\n        if ((isPrestasiLoading === true) || (isBiodataLoading === true)) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h1>Prestasi Submission Detail</h1>\r\n                    {(Data_Instansi && Biodata_ID) ? (\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <div>\r\n                                <label>Nama Prestasi:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama_Prestasi' value={Nama_Prestasi} placeholder='Masukkan nama prestasi' required /><br />\r\n                                <label>No Sertifikat:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='No_Sertifikat' value={No_Sertifikat} placeholder='Masukkan no sertifikat jika ada' /><br />\r\n                                <label>Katagori Prestasi:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Katagori_Prestasi' value={Katagori_Prestasi} placeholder='Masukkan katagori prestasi' /><br />\r\n                                <label>Tingkatan Prestasi:</label><br />\r\n                                <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Tingkatan_Prestasi' value={Tingkatan_Prestasi} required>\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    {Tingkatan_Prestasi_Choices.map((listdata) =>\r\n                                        <option key={listdata} value={listdata}>{listdata}</option>\r\n                                    )}\r\n                                </select>\r\n                                <label>Nama Instansi:</label><br />\r\n                                <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Nama_Instansi' value={Nama_Instansi} required>\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    {Data_Instansi.map((listdata) =>\r\n                                        <option key={listdata.id} value={listdata.Nama_Instansi}>{listdata.Nama_Instansi}, {listdata.Jenis_Instansi}</option>\r\n                                    )}\r\n                                </select>\r\n                                <label>Prestasi Point:</label><br />\r\n                                <input type='number' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Prestasi_Point' value={Prestasi_Point} placeholder='Masukkan jumlah point penambahan karna prestasi yang didapat' required /><br />\r\n                                <label>Keterangan:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Keterangan' value={Keterangan} placeholder='Masukkan keterangan tambahan jika ada' /><br />\r\n                                <label>Lampiran:</label><br />\r\n                                <input type='file' accept='image/*' onChange={this.File_OnChange} name='Lampiran' /><br />\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    ) : <DataNotFound />}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    pestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofInstansi, PrestasiSubmit })(PrestasiSubmission)","import React from 'react'\r\n\r\nimport BiodataDetail from '../Detail/BiodataDetail'\r\nimport PrestasiSubmission from '../Detail/PrestasiSubmission'\r\n\r\nconst PrestasiSubmissionModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PrestasiSubmissionModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Prestasi Submission</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataDetail />\r\n                        <hr />\r\n                        <PrestasiSubmission />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrestasiSubmissionModal","import React from 'react'\r\n\r\nimport Filter from '../Filter'\r\nimport BiodataDataLengkap from '../Detail/BiodataTabel.DataLengkap'\r\nimport PrestasiSubmissionModal from './Modal.PrestasiSubmission'\r\n\r\nconst PrestasiAddModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PrestasiAddPrestasiModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-super\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Create a Prestasi</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <Filter tablename={'tabeldatalengkap'} tdnumber={1}/>\r\n                        <BiodataDataLengkap proptype={'prestasi'} />\r\n                        <PrestasiSubmissionModal />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrestasiAddModal","import React from 'react'\r\n\r\n////// BIODATA\r\n////// BIODATA-SISWA\r\nimport BiodataAddSiswaModal from './Modal/Modal.Biodata_AddSiswa'\r\n////// BIODATA-GURU\r\nimport BiodataAddGuruModal from './Modal/Modal.Biodata_AddGuru'\r\n////// BIODATA-ADMIN\r\nimport BiodataAddAdminModal from './Modal/Modal.Biodata_AddAdmin'\r\n////// POINT\r\n////// POINT-PRESTASI\r\nimport PelanggaranAddModal from './Modal/Modal.Pelanggaran_Add'\r\n////// POINT-POINT-ADD\r\nimport PointAddModal from './Modal/Modal.Point_AddPoint'\r\n////// PRESTASI\r\n////// PRESTASI-INSTANSI-ADD\r\nimport InstansiAddModal from './Modal/Modal.Prestasi_AddInstansi'\r\n////// PRESTASI-PRESTASI-ADD\r\nimport PrestasiAddModal from './Modal/Modal.Prestasi_AddPrestasi'\r\n\r\n////// BIODATA\r\n////// BIODATA-SISWA\r\n////// BIODATA-SISWA-ADD\r\nexport const ButtonAddSiswa = () => {\r\n    return (\r\n        <div>\r\n            <BiodataAddSiswaModal />\r\n            <button data-toggle=\"modal\" data-target=\"#BiodataAddSiswaModal\" className='btn btn-lg btn-block btn-colorize-green'>Create Siswa Biodata</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n////// BIODATA-GURU\r\n////// BIODATA-GURU-ADD\r\nexport const ButtonAddGuru = () => {\r\n    return (\r\n        <div>\r\n            <BiodataAddGuruModal />\r\n            <button data-toggle=\"modal\" data-target=\"#BiodataAddGuruModal\" className='btn btn-lg btn-block btn-colorize-green'>Create Guru Biodata</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n////// BIODATA-ADMIN\r\n////// BIODATA-ADMIN-ADD\r\nexport const ButtonAddAdmin = () => {\r\n    return (\r\n        <div>\r\n            <BiodataAddAdminModal />\r\n            <button data-toggle=\"modal\" data-target=\"#BiodataAddAdminModal\" className='btn btn-lg btn-block btn-colorize-green'>Create Admin Biodata</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n////// POINT\r\n////// POINT-PELANGGARAN-ADD\r\nexport const ButtonAddPelanggaran = () => {\r\n    return (\r\n        <div>\r\n            <PelanggaranAddModal />\r\n            <button data-toggle=\"modal\" data-target=\"#PelanggaranAddModal\" className='btn btn-lg btn-block btn-colorize-green'>Create Pelanggaran Detail</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n////// POINT-POINT-ADD\r\nexport const ButtonAddPoint = () => {\r\n    return (\r\n        <div>\r\n            <PointAddModal />\r\n            <button data-toggle=\"modal\" data-target=\"#PointAddPointModal\" className='btn btn-lg btn-block btn-colorize-green'>Create a Point</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n////// PRESTASI\r\n////// PRESTASI-INSTANSI-ADD\r\nexport const ButtonAddInstansi = () => {\r\n    return (\r\n        <div>\r\n            <InstansiAddModal />\r\n            <button data-toggle=\"modal\" data-target=\"#PrestasiAddInstansiModal\" className='btn btn-lg btn-block btn-colorize-green'>Create Instansi Detail</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n////// PRESTASI-PRESTASI-ADD\r\nexport const ButtonAddPrestasi = () => {\r\n    return (\r\n        <div>\r\n            <PrestasiAddModal />\r\n            <button data-toggle=\"modal\" data-target=\"#PrestasiAddPrestasiModal\" className='btn btn-lg btn-block btn-colorize-green'>Create a Prestasi</button>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofAdmin, Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount } from '../../../Store/Actions/Biodata.Actions'\r\nimport {Short_Column_INT, Short_Column_STR} from '../Shorting'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass BiodataTableDataAdmin extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofAdmin()\r\n    }\r\n    ButtonDetailView(BiodataID) {\r\n        this.props.Button_DetailView(BiodataID)\r\n    }\r\n    ButtonUpdateBiodata(BiodataID) {\r\n        this.props.Button_UpdateBiodata(BiodataID)\r\n    }\r\n    ButtonUpdateBiodataAccount(BiodataID) {\r\n        this.props.Button_UpdateBiodataAccount(BiodataID)\r\n    }\r\n    ButtonShortINT(ColumnNumb){\r\n        Short_Column_INT('tabeldataadmin',ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb){\r\n        Short_Column_STR('tabeldataadmin',ColumnNumb)\r\n    }\r\n    render() {\r\n        const { Data_Admin } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        return (\r\n            <div>\r\n                {(!Data_Admin || Data_Admin.length <= 0) ? <DataNotFound /> :\r\n                    <div className=\"Biodata-section\">\r\n                        <div className='table-responsive'>\r\n                            <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldataadmin'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}><span className=\"glyphicon glyphicon-sort-by-alphabet\"></span>Index</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(1)}>Nomer Induk</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama</th>\r\n                                        <th scope=\"col\">View</th>\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Update</th>\r\n                                        ) : null}\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        ) : null}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Data_Admin.map((listdata, index) => (\r\n                                        <tr key={listdata.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{listdata.NomerInduk}</td>\r\n                                            <td>{listdata.Nama}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                            </td>\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodata(listdata.id)} data-toggle=\"modal\" data-target=\"#BiodataUpdateModal\" className='btn btn-table-colorize-green'>Biodata</button>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodataAccount(listdata.id)} data-toggle=\"modal\" data-target=\"#AccountUpdateModal\" className='btn btn-table-colorize-green'>Account</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#BiodataDeleteModal\" className='btn btn-table-colorize-green'>Delete</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofAdmin, Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount })(BiodataTableDataAdmin)","import React from 'react'\r\n\r\nimport BiodataDetail from '../Detail/BiodataDetail'\r\nimport AccountDetail from '../Detail/AccountDetail'\r\n\r\nconst ViewDetailModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"ViewDetailModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div>\r\n                            <BiodataDetail />\r\n                        </div>\r\n                        <div>\r\n                            <AccountDetail />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewDetailModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport {DeleteBiodata} from '../../../Store/Actions/Biodata.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport BiodataDetail from '../Detail/BiodataDetail'\r\nimport AccountDetail from '../Detail/AccountDetail'\r\n\r\nclass BiodataDelete extends React.Component {\r\n    Delete_Biodata(BiodataID){\r\n        // E.preventDefault()\r\n        console.log('1')\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.DeleteBiodata(BiodataID, authdata)\r\n    }\r\n    render() {\r\n        const {Biodata} = this.props.biodata\r\n        return (\r\n            <div>\r\n                {Biodata?(\r\n                    <div>\r\n                     <div>\r\n                     <h3><b>This Biodata and Account Will Deleted, Are This Ok?</b></h3><br />\r\n                     <BiodataDetail />\r\n                     <AccountDetail />\r\n                 </div>\r\n                 <div className=\"modal-footer\">\r\n                     <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                     <button type=\"submit\" onClick={() => this.Delete_Biodata(Biodata.id)} className=\"btn btn-danger\">Yes, Delete</button>\r\n                 </div>\r\n                 </div>\r\n                ):<DataNotFound />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {DeleteBiodata})(BiodataDelete)","import React from 'react'\r\n\r\nimport BiodataDelete from '../Detail/BiodataDelete'\r\n\r\nconst BiodataDeleteModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"BiodataDeleteModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Biodata Delete</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <BiodataDelete />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BiodataDeleteModal","import React from 'react'\r\n\r\nimport { ButtonAddAdmin } from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\nimport Filter from '../../Container/Filter'\r\n\r\nimport BiodataTableDataAdmin from '../../Container/Detail/BiodataTabel.Dataadmin'\r\nimport DetailViewModal from '../../Container/Modal/Modal.Detail_View'\r\nimport BiodataUpdateModal from '../../Container/Modal/Modal.Biodata_Update'\r\nimport AccountUpdateModal from '../../Container/Modal/Modal.Account_Update'\r\nimport BiodataDeleteModal from '../../Container/Modal/Modal.Biodata_Delete'\r\nclass DataAdmin extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='position-center'>-Data Admin-</h1>\r\n                <ButtonAddAdmin />\r\n                <Print />\r\n                <Filter tablename={'tabeldataadmin'} tdnumber={1} />\r\n                <BiodataTableDataAdmin />\r\n                <DetailViewModal />\r\n                <BiodataUpdateModal />\r\n                <AccountUpdateModal />\r\n                <BiodataDeleteModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataAdmin","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofStaff, Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount } from '../../../Store/Actions/Biodata.Actions'\r\nimport {Short_Column_INT, Short_Column_STR} from '../Shorting'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass BiodataTableDataGuru extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofStaff()\r\n    }\r\n    ButtonDetailView(BiodataID) {\r\n        this.props.Button_DetailView(BiodataID)\r\n    }\r\n    ButtonUpdateBiodata(BiodataID) {\r\n        this.props.Button_UpdateBiodata(BiodataID)\r\n    }\r\n    ButtonUpdateBiodataAccount(BiodataID) {\r\n        this.props.Button_UpdateBiodataAccount(BiodataID)\r\n    }\r\n    ButtonShortINT(ColumnNumb){\r\n        Short_Column_INT('tabeldataguru',ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb){\r\n        Short_Column_STR('tabeldataguru',ColumnNumb)\r\n    }\r\n    render() {\r\n        const { Data_Staff } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        return (\r\n            <div>\r\n                {(!Data_Staff || Data_Staff.length <= 0) ? <DataNotFound /> :\r\n                    <div className=\"Biodata-section\">\r\n                        <div className='table-responsive'>\r\n                            <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldataguru'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}><span className=\"glyphicon glyphicon-sort-by-alphabet\"></span>Index</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(1)}>Nomer Induk</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama</th>\r\n                                        <th scope=\"col\">View</th>\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Update</th>\r\n                                        ) : null}\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        ) : null}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Data_Staff.map((listdata, index) => (\r\n                                        <tr key={listdata.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{listdata.NomerInduk}</td>\r\n                                            <td>{listdata.Nama}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                            </td>\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodata(listdata.id)} data-toggle=\"modal\" data-target=\"#BiodataUpdateModal\" className='btn btn-table-colorize-green'>Biodata</button>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodataAccount(listdata.id)} data-toggle=\"modal\" data-target=\"#AccountUpdateModal\" className='btn btn-table-colorize-green'>Account</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#BiodataDeleteModal\" className='btn btn-table-colorize-green'>Delete</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofStaff, Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount })(BiodataTableDataGuru)","import React from 'react'\r\n\r\nimport { ButtonAddGuru } from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\nimport Filter from '../../Container/Filter'\r\n\r\nimport BiodataTableDataGuru from '../../Container/Detail/BiodataTabel.Dataguru'\r\nimport DetailViewModal from '../../Container/Modal/Modal.Detail_View'\r\nimport BiodataUpdateModal from '../../Container/Modal/Modal.Biodata_Update'\r\nimport AccountUpdateModal from '../../Container/Modal/Modal.Account_Update'\r\nimport BiodataDeleteModal from '../../Container/Modal/Modal.Biodata_Delete'\r\nclass DataGuru extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='position-center'>-Data Guru-</h1>\r\n                <ButtonAddGuru />\r\n                <Print />\r\n                <Filter tablename={'tabeldataguru'} tdnumber={1} />\r\n                <BiodataTableDataGuru />\r\n                <DetailViewModal />\r\n                <BiodataUpdateModal />\r\n                <AccountUpdateModal />\r\n                <BiodataDeleteModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataGuru","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofInstansi, Button_Instansi_DetailView, Button_UpdateInstansi } from '../../../Store/Actions/Prestasi.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass InstansiTableDataInstansi extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofInstansi()\r\n    }\r\n    ButtonDetailView(InstansiID) {\r\n        this.props.Button_Instansi_DetailView(InstansiID)\r\n    }\r\n    ButtonUpdateBiodata(InstansiID) {\r\n        this.props.Button_UpdateInstansi(InstansiID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabeldatainstansi', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabeldatainstansi', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { Data_Instansi } = this.props.prestasi\r\n        const { user } = this.props.auth\r\n        return (\r\n            <div>\r\n                {(!Data_Instansi || Data_Instansi.length <= 0) ? <DataNotFound /> :\r\n                    <div className=\"Biodata-section\">\r\n                        <div className='table-responsive'>\r\n                            <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldatainstansi'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}><span className=\"glyphicon glyphicon-sort-by-alphabet\"></span>Index</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(1)}>Nama Instansi</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Jenis Instansi</th>\r\n                                        <th scope=\"col\">View</th>\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Update</th>\r\n                                        ) : null}\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        ) : null}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Data_Instansi.map((listdata, index) => (\r\n                                        <tr key={listdata.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{listdata.Nama_Instansi}</td>\r\n                                            <td>{listdata.Jenis_Instansi}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#InstansiDetailViewModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                            </td>\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodata(listdata.id)} data-toggle=\"modal\" data-target=\"#InstansiUpdateModal\" className='btn btn-table-colorize-green'>Update</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#InstansiDeleteModal\" className='btn btn-table-colorize-green'>Delete</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofInstansi, Button_Instansi_DetailView, Button_UpdateInstansi })(InstansiTableDataInstansi)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadInstansiDetail } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass InstansiDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.prestasi.Instansi_ID !== prevProps.prestasi.Instansi_ID) {\r\n            const { Instansi_ID } = this.props.prestasi\r\n            if (Instansi_ID !== null) {\r\n                this.props.LoadInstansiDetail(Instansi_ID)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Instansi } = this.props.prestasi\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Instansi ? (\r\n                        <div className='account-section'>\r\n                            <h1 className='position-center'>Instansi</h1>\r\n                            <label>ID:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Instansi ? Instansi.id : \"\"} /><br />\r\n                            <label>Nama Instansi:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Instansi ? Instansi.Nama_Instansi : \"\"} /><br />\r\n                            <label>Jenis Instansi:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Instansi ? Instansi.Jenis_Instansi : \"\"} /><br />\r\n                            <label>Keterangan:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Instansi ? Instansi.Keterangan_Instansi : \"\"} /><br />\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadInstansiDetail })(InstansiDetail)","import React from 'react'\r\n\r\nimport InstansiDetail from '../Detail/InstansiDetail'\r\n\r\nconst InstansiDetailViewModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"InstansiDetailViewModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div>\r\n                            <InstansiDetail />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InstansiDetailViewModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadInstansiUpdate, UpdateInstansi } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nimport Loading from '../Loading'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass InstansiUpdate extends React.Component {\r\n    state = {\r\n        id: '',\r\n        Nama_Instansi: '',\r\n        Jenis_Instansi: '',\r\n        Keterangan_Instansi: '',\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.prestasi.Instansi_Update_ID !== prevProps.prestasi.Instansi_Update_ID) {\r\n            const { Instansi_Update_ID } = this.props.prestasi\r\n            if (Instansi_Update_ID !== null) {\r\n                this.props.LoadInstansiUpdate(Instansi_Update_ID)\r\n            }\r\n        }\r\n        if (this.props.prestasi.Instansi_Update !== prevProps.prestasi.Instansi_Update) {\r\n            const { Instansi_Update } = this.props.prestasi\r\n            if (Instansi_Update) {\r\n                this.setState({\r\n                    id: Instansi_Update.id,\r\n                    Nama_Instansi: Instansi_Update.Nama_Instansi,\r\n                    Jenis_Instansi: Instansi_Update.Jenis_Instansi,\r\n                    Keterangan_Instansi: Instansi_Update.Keterangan_Instansi,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const updatedata = {\r\n            id: this.state.id,\r\n            // Nama_Instansi: this.state.Nama_Instansi,\r\n            Jenis_Instansi: this.state.Jenis_Instansi,\r\n            Keterangan_Instansi: this.state.Keterangan_Instansi,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n\r\n        this.props.UpdateInstansi(updatedata, authdata)\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading } = this.props.prestasi\r\n        const {\r\n            id,\r\n            Nama_Instansi,\r\n            Jenis_Instansi,\r\n            Keterangan_Instansi,\r\n        } = this.state\r\n        // console.log('state', this.state)\r\n        if (isPrestasiLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {id ? (\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <div>\r\n                                <label>Id:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' readOnly name='id' value={id} /><br />\r\n                                <label>Nama Pelanggaran:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' readOnly name='Nama_Instansi' value={Nama_Instansi} /><br />\r\n                                <label>Jenis Pelanggaran:</label><br />\r\n                                {/* <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Jenis_Pelanggaran' value={Jenis_Pelanggaran}>\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    <option value=\"Ringan\">Ringan</option>\r\n                                    <option value=\"Sedang\">Sedang</option>\r\n                                    <option value=\"Berat\">Berat</option>\r\n                                </select> */}\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Jenis_Instansi' value={Jenis_Instansi} /><br />\r\n                                <label>KeteranganPelanggaran:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Keterangan_Instansi' value={Keterangan_Instansi} /><br />\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    ) : <DataNotFound />}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\nexport default connect(mapStateToProps, { LoadInstansiUpdate, UpdateInstansi })(InstansiUpdate)","import React from 'react'\r\n\r\nimport InstansiUpdate from '../Detail/InstansiUpdate'\r\n\r\nconst InstansiUpdateModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"InstansiUpdateModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Instansi Update</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <InstansiUpdate />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InstansiUpdateModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { DeleteInstansi } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport InstansiDetail from './InstansiDetail'\r\n\r\nclass InstansiDelete extends React.Component {\r\n    Delete_Instansi(InstansiID) {\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.DeleteInstansi(InstansiID, authdata)\r\n    }\r\n    render() {\r\n        const { Instansi } = this.props.prestasi\r\n        return (\r\n            <div>\r\n                {Instansi ? (\r\n                    <div>\r\n                        <div>\r\n                            <h3><b>This Instansi Will Deleted, Are This Ok?</b></h3><br />\r\n                            <InstansiDetail />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                            <button type=\"submit\" onClick={() => this.Delete_Instansi(Instansi.id)} className=\"btn btn-danger\">Yes, Delete</button>\r\n                        </div>\r\n                    </div>\r\n                ) : <DataNotFound />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { DeleteInstansi })(InstansiDelete)","import React from 'react'\r\n\r\nimport InstansiDelete from '../Detail/InstansiDelete'\r\n\r\nconst InstansiDeleteModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"InstansiDeleteModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Instansi Delete</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <InstansiDelete />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InstansiDeleteModal","import React from 'react'\r\n\r\nimport { ButtonAddInstansi } from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\n\r\nimport InstansiTableDataInstansi from '../../Container/Detail/InstansiTabel.Datainstansi'\r\nimport InstansiDetailViewModal from '../../Container/Modal/Modal.InstansiDetail_View'\r\nimport InstansiUpdateModal from '../../Container/Modal/Modal.Instansi_Update'\r\nimport InstansiDeleteModal from '../../Container/Modal/Modal.Instansi_Delete'\r\nclass DataInstansi extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='position-center'>-Data Instansi-</h1>\r\n                <ButtonAddInstansi />\r\n                <Print />\r\n                <InstansiTableDataInstansi />\r\n                <InstansiDetailViewModal />\r\n                <InstansiUpdateModal />\r\n                <InstansiDeleteModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataInstansi","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofPelanggaran, Button_Pelanggaran_DetailView, Button_UpdatePelanggaran, } from '../../../Store/Actions/Point.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass PelanggaranTabelDataPelanggaran extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofPelanggaran()\r\n    }\r\n    ButtonDetailView(PelanggaranID) {\r\n        this.props.Button_Pelanggaran_DetailView(PelanggaranID)\r\n    }\r\n    ButtonUpdateBiodata(PelanggaranID) {\r\n        this.props.Button_UpdatePelanggaran(PelanggaranID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabeldatapelanggaran', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabeldatapelanggaran', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { Data_Pelanggaran } = this.props.point\r\n        const { user } = this.props.auth\r\n        return (\r\n            <div>\r\n                {(!Data_Pelanggaran || Data_Pelanggaran.length <= 0) ? <DataNotFound /> :\r\n                    <div className=\"Biodata-section\">\r\n                        <div className='table-responsive'>\r\n                            <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldatapelanggaran'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}><span className=\"glyphicon glyphicon-sort-by-alphabet\"></span>Index</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(1)}>Nama Pelanggaran</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Jenis Pelanggaran</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(3)}>Point Pelanggaran</th>\r\n                                        <th scope=\"col\">View</th>\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Update</th>\r\n                                        ) : null}\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        ) : null}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Data_Pelanggaran.map((listdata, index) => (\r\n                                        <tr key={listdata.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{listdata.Nama_Pelanggaran}</td>\r\n                                            <td>{listdata.Jenis_Pelanggaran}</td>\r\n                                            <td>{listdata.Pelanggaran_Point}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#PelanggaranDetailViewModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                            </td>\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodata(listdata.id)} data-toggle=\"modal\" data-target=\"#PelanggaranUpdateModal\" className='btn btn-table-colorize-green'>Update</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#PelanggaranDeleteModal\" className='btn btn-table-colorize-green'>Delete</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // biodata: state.PrestasiQu_Biodata,\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofPelanggaran, Button_Pelanggaran_DetailView, Button_UpdatePelanggaran})(PelanggaranTabelDataPelanggaran)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadPelanggaranDetail } from '../../../Store/Actions/Point.Actions'\r\n\r\nimport DataNotFound from '../../Container/DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PelanggaraDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.point.Pelanggaran_ID !== prevProps.point.Pelanggaran_ID) {\r\n            const { Pelanggaran_ID } = this.props.point\r\n            if (Pelanggaran_ID !== null) {\r\n                this.props.LoadPelanggaranDetail(Pelanggaran_ID)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Pelanggaran } = this.props.point\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Pelanggaran ? (\r\n                        <div className='account-section'>\r\n                            <h1 className='position-center'>Pelanggaran</h1>\r\n                            <label>ID:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Pelanggaran ? Pelanggaran.id : \"\"} /><br />\r\n                            <label>Nama Pelanggaran:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Pelanggaran ? Pelanggaran.Nama_Pelanggaran : \"\"} /><br />\r\n                            <label>Jenis Pelanggaran:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Pelanggaran ? Pelanggaran.Jenis_Pelanggaran : \"\"} /><br />\r\n                            <label>Point Pelanggaran:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Pelanggaran ? Pelanggaran.Pelanggaran_Point : \"\"} /><br />\r\n                            <label>Keterangan:</label><br />\r\n                            <input type='text' className='Input-as-Info' name='account' readOnly value={Pelanggaran ? Pelanggaran.Keterangan_Pelanggaran : \"\"} /><br />\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadPelanggaranDetail })(PelanggaraDetail)","import React from 'react'\r\n\r\nimport PelanggaranDetail from '../Detail/PelanggaranDetail'\r\n\r\nconst PelanggaranDetailViewModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PelanggaranDetailViewModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div>\r\n                            <PelanggaranDetail />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PelanggaranDetailViewModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadPelanggaranUpdate, UpdatePelanggaran } from '../../../Store/Actions/Point.Actions'\r\n\r\nimport Loading from '../Loading'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass PelanggaranUpdate extends React.Component {\r\n    state = {\r\n        id: '',\r\n        Nama_Pelanggaran: '',\r\n        Jenis_Pelanggaran: '',\r\n        Pelanggaran_Point: '',\r\n        Keterangan_Pelanggaran: '',\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.point.Pelanggaran_Update_ID !== prevProps.point.Pelanggaran_Update_ID) {\r\n            const { Pelanggaran_Update_ID } = this.props.point\r\n            if (Pelanggaran_Update_ID !== null) {\r\n                this.props.LoadPelanggaranUpdate(Pelanggaran_Update_ID)\r\n            }\r\n        }\r\n        if (this.props.point.Pelanggaran_Update !== prevProps.point.Pelanggaran_Update) {\r\n            const { Pelanggaran_Update } = this.props.point\r\n            if (Pelanggaran_Update) {\r\n                this.setState({\r\n                    id: Pelanggaran_Update.id,\r\n                    Nama_Pelanggaran: Pelanggaran_Update.Nama_Pelanggaran,\r\n                    Jenis_Pelanggaran: Pelanggaran_Update.Jenis_Pelanggaran,\r\n                    Pelanggaran_Point: Pelanggaran_Update.Pelanggaran_Point,\r\n                    Keterangan_Pelanggaran: Pelanggaran_Update.Keterangan_Pelanggaran,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const updatedata = {\r\n            id: this.state.id,\r\n            Nama_Pelanggaran: this.state.Nama_Pelanggaran,\r\n            Jenis_Pelanggaran: this.state.Jenis_Pelanggaran,\r\n            Pelanggaran_Point: this.state.Pelanggaran_Point,\r\n            Keterangan_Pelanggaran: this.state.Keterangan_Pelanggaran,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n\r\n        this.props.UpdatePelanggaran(updatedata, authdata)\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading } = this.props.point\r\n        const {\r\n            id,\r\n            Nama_Pelanggaran,\r\n            Jenis_Pelanggaran,\r\n            Pelanggaran_Point,\r\n            Keterangan_Pelanggaran,\r\n        } = this.state\r\n        // console.log('state', this.state)\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {id ? (\r\n                        <form onSubmit={this.Form_OnSubmit}>\r\n                            <div>\r\n                                <label>Id:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' readOnly name='id' value={id} /><br />\r\n                                <label>Nama Pelanggaran:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' readOnly name='Nama_Pelanggaran' value={Nama_Pelanggaran} /><br />\r\n                                <label>Jenis Pelanggaran:</label><br />\r\n                                <select className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Jenis_Pelanggaran' value={Jenis_Pelanggaran}>\r\n                                    <option value=\"\" disabled> -- select an option -- </option>\r\n                                    <option value=\"Ringan\">Ringan</option>\r\n                                    <option value=\"Sedang\">Sedang</option>\r\n                                    <option value=\"Berat\">Berat</option>\r\n                                </select>\r\n                                <label>Pelanggaran Point:</label><br />\r\n                                <input type='number' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Pelanggaran_Point' value={Pelanggaran_Point} /><br />\r\n                                <label>KeteranganPelanggaran:</label><br />\r\n                                <input type='text' className='Input-as-Info Input-as-Update' onChange={this.Form_OnChange} name='Keterangan_Pelanggaran' value={Keterangan_Pelanggaran} /><br />\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    ) : <DataNotFound />}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\nexport default connect(mapStateToProps, { LoadPelanggaranUpdate, UpdatePelanggaran })(PelanggaranUpdate)","import React from 'react'\r\n\r\nimport PelanggaranUpdate from '../Detail/PelanggaranUpdate'\r\n\r\nconst PelanggaranUpdateModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PelanggaranUpdateModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Pelanggaran Update</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PelanggaranUpdate />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PelanggaranUpdateModal","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport {DeletePelanggaran} from '../../../Store/Actions/Point.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport PelanggaraDetail from '../Detail/PelanggaranDetail'\r\n\r\nclass PelanggaranDelete extends React.Component {\r\n    Delete_Pelanggaran(PelanggaranID){\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        this.props.DeletePelanggaran(PelanggaranID, authdata)\r\n    }\r\n    render() {\r\n        const {Pelanggaran} = this.props.point\r\n        return (\r\n            <div>\r\n                {Pelanggaran?(\r\n                    <div>\r\n                     <div>\r\n                     <h3><b>This Pelanggaran Will Deleted, Are This Ok?</b></h3><br />\r\n                     <PelanggaraDetail />\r\n                 </div>\r\n                 <div className=\"modal-footer\">\r\n                     <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                     <button type=\"submit\" onClick={() => this.Delete_Pelanggaran(Pelanggaran.id)} className=\"btn btn-danger\">Yes, Delete</button>\r\n                 </div>\r\n                 </div>\r\n                ):<DataNotFound />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {DeletePelanggaran})(PelanggaranDelete)","import React from 'react'\r\n\r\nimport PelanggaranDelete from '../Detail/PelanggaranDelete'\r\n\r\nconst PelanggaranDeleteModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"PelanggaranDeleteModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Pelanggaran Delete</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PelanggaranDelete />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PelanggaranDeleteModal","import React from 'react'\r\n\r\nimport { ButtonAddPelanggaran } from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\n\r\nimport PelanggaranTabelDataPelanggaran from '../../Container/Detail/PelanggaranTabel.Datapelanggaran'\r\nimport PelanggaranDetailViewModal from '../../Container/Modal/Modal.PelanggaranDetail_View'\r\nimport PelanggaranUpdateModal from '../../Container/Modal/Modal.Pelanggaran_Update'\r\nimport PelanggaranDeleteModal from '../../Container/Modal/Modal.Pelanggaran_Delete'\r\nclass DataPelanggaran extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className='position-center'>-Data Pelanggaran-</h1>\r\n                <ButtonAddPelanggaran />\r\n                <Print />\r\n                <PelanggaranTabelDataPelanggaran />\r\n                <PelanggaranDetailViewModal />\r\n                <PelanggaranUpdateModal />\r\n                <PelanggaranDeleteModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataPelanggaran","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofSiswa, Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount } from '../../../Store/Actions/Biodata.Actions'\r\nimport {Short_Column_INT, Short_Column_STR} from '../Shorting'\r\nimport DataNotFound from '../DataNotFound'\r\n\r\nclass BiodataTableDataSiswa extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofSiswa()\r\n    }\r\n    ButtonDetailView(BiodataID) {\r\n        this.props.Button_DetailView(BiodataID)\r\n    }\r\n    ButtonUpdateBiodata(BiodataID) {\r\n        this.props.Button_UpdateBiodata(BiodataID)\r\n    }\r\n    ButtonUpdateBiodataAccount(BiodataID) {\r\n        this.props.Button_UpdateBiodataAccount(BiodataID)\r\n    }\r\n    ButtonShortINT(ColumnNumb){\r\n        Short_Column_INT('tabeldatasiswa',ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb){\r\n        Short_Column_STR('tabeldatasiswa',ColumnNumb)\r\n    }\r\n    render() {\r\n        const { Data_Siswa } = this.props.biodata\r\n        const { user } = this.props.auth\r\n        return (\r\n            <div>\r\n                {(!Data_Siswa || Data_Siswa.length <= 0) ? <DataNotFound /> :\r\n                    <div className=\"Biodata-section\">\r\n                        <div className='table-responsive'>\r\n                            <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldatasiswa'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}><span className=\"glyphicon glyphicon-sort-by-alphabet\"></span>Index</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(1)}>Nomer Induk</th>\r\n                                        <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama</th>\r\n                                        <th scope=\"col\">View</th>\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Update</th>\r\n                                        ) : null}\r\n                                        {(user.admin || user.superuser) ? (\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        ) : null}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Data_Siswa.map((datasiswa, index) => (\r\n                                        <tr key={datasiswa.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{datasiswa.NomerInduk}</td>\r\n                                            <td>{datasiswa.Nama}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.ButtonDetailView(datasiswa.id)} data-toggle=\"modal\" data-target=\"#ViewDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                            </td>\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodata(datasiswa.id)} data-toggle=\"modal\" data-target=\"#BiodataUpdateModal\" className='btn btn-table-colorize-green'>Biodata</button>\r\n                                                    <button onClick={() => this.ButtonUpdateBiodataAccount(datasiswa.id)} data-toggle=\"modal\" data-target=\"#AccountUpdateModal\" className='btn btn-table-colorize-green'>Account</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                            {(user.admin || user.superuser) ? (\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonDetailView(datasiswa.id)} data-toggle=\"modal\" data-target=\"#BiodataDeleteModal\" className='btn btn-table-colorize-green'>Delete</button>\r\n                                                </td>\r\n                                            ) : null}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    biodata: state.PrestasiQu_Biodata,\r\n    auth: state.PrestasiQu_Auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofSiswa, Button_DetailView, Button_UpdateBiodata, Button_UpdateBiodataAccount })(BiodataTableDataSiswa)","import React from 'react'\r\n\r\nimport {ButtonAddSiswa} from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\nimport Filter from '../../Container/Filter'\r\n\r\nimport BiodataTabelDatasiswa from '../../Container/Detail/BiodataTabel.Datasiswa'\r\nimport DetailViewModal from '../../Container/Modal/Modal.Detail_View'\r\nimport BiodataUpdateModal from '../../Container/Modal/Modal.Biodata_Update'\r\nimport AccountUpdateModal from '../../Container/Modal/Modal.Account_Update'\r\nimport BiodataDeleteModal from '../../Container/Modal/Modal.Biodata_Delete'\r\n\r\nconst DataSiswa = () =>{\r\n    return(\r\n        <div>\r\n            <h1 className='position-center'>-Data Siswa-</h1>\r\n            <ButtonAddSiswa />\r\n            <Print />\r\n            <Filter tablename={'tabeldatasiswa'} tdnumber={1}/>\r\n            <BiodataTabelDatasiswa />\r\n            <DetailViewModal />\r\n            <BiodataUpdateModal />\r\n            <AccountUpdateModal />\r\n            <BiodataDeleteModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataSiswa","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { GetPointDetail } from '../../../Store/Actions/Point.Actions'\r\n\r\nclass PointDetail extends React.Component {\r\n    componentDidMount() {\r\n        const { user } = this.props.auth\r\n        if (user) {\r\n            this.props.GetPointDetail(user.profile)\r\n        }\r\n    }\r\n    render() {\r\n        const {Point_Score} = this.props.point\r\n        // console.log('tes',this.props.point)\r\n        // const Point_Score = 99\r\n        // console.log(Point_Score)\r\n        return (\r\n            <div>\r\n                <h3><b>Your point are:</b></h3>\r\n                {Point_Score ? (\r\n                    <div className={`pointscore ${Point_Score >= 250 ?\r\n                        'pointgood' : (`${Point_Score >= 150 ?\r\n                            'pointwarning' : (`${Point_Score >= 50 ?\r\n                                'pointdenger' : 'pointdead'}`\r\n                            )}`\r\n                        )}`\r\n                    }>\r\n                        {Point_Score}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\nexport default connect(mapStateToProps, { GetPointDetail })(PointDetail)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport {LoadPointListofPoint, Button_PointDetailView} from '../../../Store/Actions/Point.Actions'\r\nimport {Short_Column_INT, Short_Column_STR} from '../Shorting'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PointTabelDataPoint extends React.Component {\r\n    componentDidMount(){\r\n        const {user} = this.props.auth\r\n        if(user){\r\n            this.props.LoadPointListofPoint(user.nomerinduk)\r\n        }\r\n    }\r\n    ButtonPointDetailView(ID){\r\n        this.props.Button_PointDetailView(ID)\r\n    }\r\n    ButtonShortINT(ColumnNumb){\r\n        Short_Column_INT('tabelpointdatapoint',ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb){\r\n        Short_Column_STR('tabelpointdatapoint',ColumnNumb)\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Point_Point } = this.props.point\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {(!Point_Point || Point_Point.length <= 0) ? <DataNotFound /> :\r\n                        <div className=\"Biodata-section\">\r\n                            <div className='table-responsive'>\r\n                                <table className=\"table table-striped table-hover table-custom position-center\" id='tabelpointdatapoint'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}>Index</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(1)}>No Point Submision</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama Pengaju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Nomer Induk Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(4)}>Nama Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(5)}>Nama Pelanggaran</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(6)}>Tanggal Diterima</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(7)}>Status</th>\r\n                                            <th scope=\"col\" >View</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Point_Point.map((listdata, index) => (\r\n                                            <tr key={listdata.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{listdata.id}</td>\r\n                                                <td>{listdata.Nama_Pengaju}</td>\r\n                                                <td>{listdata.Nomer_Induk_Dituju}</td>\r\n                                                <td>{listdata.Nama_Dituju}</td>\r\n                                                <td>{listdata.Nama_Pelanggaran}</td>\r\n                                                <td>{listdata.Tanggal_Diterima}</td>\r\n                                                <td>{listdata.Status}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonPointDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewPointSubmissionDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {LoadPointListofPoint, Button_PointDetailView})(PointTabelDataPoint)\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadPointSubmissionDetail } from '../../../Store/Actions/Point.Actions'\r\n\r\nimport DataNotFound from '../../Container/DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PointSubmissionDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.point.Point_ID !== prevProps.point.Point_ID) {\r\n            const { Point_ID } = this.props.point\r\n            if (Point_ID !== null) {\r\n                this.props.LoadPointSubmissionDetail(Point_ID)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Point } = this.props.point\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Point ? (\r\n                        <div className=\"Biodata-section\">\r\n                            <div className=\"header\">\r\n                                <h4 className={`position-right font-weight-bold ${(Point.Status === 'Menunggu') ?\r\n                                    'pointwarning' : (`${(Point.Status === 'Cancel') ?\r\n                                        'pointwarning' : 'pointgood'\r\n                                        }`\r\n                                    )}`\r\n                                }>\r\n                                    {Point.Status}\r\n                                </h4>\r\n                                <h6 className=\"position-right\">Tanggal Pengajuan:{Point.Tanggal_Pengajuan}</h6>\r\n                                <h4 className=\"font-weight-bold\">Detail:</h4>\r\n                                <hr />\r\n                            </div>\r\n                            <div>\r\n                                <label>Point_Submission_Number:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='id' readOnly value={Point.id ? Point.id : \"\"} /><br />\r\n                                <label>Nomer_Induk_Pengaju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nomer_Induk_Pengaju' readOnly value={Point.Nomer_Induk_Pengaju ? Point.Nomer_Induk_Pengaju : \"\"} /><br />\r\n                                <label>Nama_Pengaju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Pengaju' readOnly value={Point.Nama_Pengaju ? Point.Nama_Pengaju : \"\"} /><br />\r\n                                <label>Nomer_Induk_Dituju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nomer_Induk_Dituju' readOnly value={Point.Nomer_Induk_Dituju ? Point.Nomer_Induk_Dituju : \"\"} /><br />\r\n                                <label>Nama_Dituju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Dituju' readOnly value={Point.Nama_Dituju ? Point.Nama_Dituju : \"\"} /><br />\r\n                                <label>Point_Awal_Dituju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Point_Awal_Dituju' readOnly value={Point.Point_Awal_Dituju ? Point.Point_Awal_Dituju : \"\"} /><br />\r\n                                <label>Nama_Pelanggaran:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Pelanggaran' readOnly value={Point.Nama_Pelanggaran ? Point.Nama_Pelanggaran : \"\"} /><br />\r\n                                <label>Jenis_Pelanggaran:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Jenis_Pelanggaran' readOnly value={Point.Jenis_Pelanggaran ? Point.Jenis_Pelanggaran : \"\"} /><br />\r\n                                <label>Point_Pengurang:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Point_Pengurang' readOnly value={`-${Point.Point_Pengurang ? Point.Point_Pengurang : \"\"}`} /><br />\r\n                                <label>Lampiran:</label><br />\r\n                                {Point.Lampiran ? (\r\n                                    <div>\r\n                                        <img src={Point.Lampiran} className='lampiran-img' alt='lampiran point submission' /><br />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div>\r\n                                            <h5 className=\"position-center\">There is no Point Submission Lampiran</h5>\r\n                                        </div>\r\n                                    )}\r\n                                {(Point.Status !== 'Menunggu') ? (\r\n                                    <div>\r\n                                        <label>Keterangan:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Keterangan' readOnly value={Point.Keterangan ? Point.Keterangan : \"\"} /><br />\r\n                                        <label>Nomer_Induk_Assessor:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Nomer_Induk_Assessor' readOnly value={Point.Nomer_Induk_Assessor ? Point.Nomer_Induk_Assessor : \"\"} /><br />\r\n                                        <label>Nama_Assessor:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Nama_Assessor' readOnly value={Point.Nama_Assessor ? Point.Nama_Assessor : \"\"} /><br />\r\n                                        <label>Tanggal_Diterima:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Tanggal_Diterima' readOnly value={Point.Tanggal_Diterima ? Point.Tanggal_Diterima : \"\"} /><br />\r\n                                    </div>\r\n                                ) : null}\r\n                                <label>Point_Akhir:</label><br />\r\n                                <h4 className={`position-center point-akhir ${Point.Point_Akhir >= 250 ?\r\n                                    'pointgood' : (`${Point.Point_Akhir >= 150 ?\r\n                                        'pointwarning' : (`${Point.Point_Akhir >= 50 ?\r\n                                            'pointdenger' : 'pointdead'}`\r\n                                        )}`\r\n                                    )}`\r\n                                }>\r\n                                    {Point.Point_Akhir ? Point.Point_Akhir : \"\"}\r\n                                </h4>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadPointSubmissionDetail })(PointSubmissionDetail)","import React from 'react'\r\n\r\nimport PointSubmissionDetail from '../Detail/PointSubmissionDetail'\r\n\r\nconst PointSubmissionDetailViewModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"ViewPointSubmissionDetailModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Point Submission Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PointSubmissionDetail />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PointSubmissionDetailViewModal","import React from 'react'\r\n\r\nimport Print from '../../Container/Print'\r\nimport PointDetail from '../../Container/Detail/PointDetail'\r\nimport PointTabelDataPoint from '../../Container/Detail/PointTabel.DataPoint'\r\nimport PointSubmissionDetailViewModal from '../../Container/Modal/Modal.PointSubmissionDetail_View'\r\n\r\nclass Point extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className='position-center'>-Point-</h1>\r\n                <Print />\r\n                <PointDetail />\r\n                <h4>Point History:</h4>\r\n                <PointTabelDataPoint />\r\n                <PointSubmissionDetailViewModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Point","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofUnconfirmPoint, Button_PointDetailView } from '../../../Store/Actions/Point.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PointTabelDataUnconfirmPoint extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofUnconfirmPoint()\r\n    }\r\n    ButtonPointDetailView(ID) {\r\n        this.props.Button_PointDetailView(ID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabeldataunconfirmpoint', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabeldataunconfirmpoint', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Point_PointUnconfirm } = this.props.point\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {(!Point_PointUnconfirm || Point_PointUnconfirm.length <= 0) ? <DataNotFound /> :\r\n                        <div className=\"Biodata-section\">\r\n                            <div className='table-responsive'>\r\n                                <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldataunconfirmpoint'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}>Index</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(1)}>No Point Submision</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama Pengaju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Nomer Induk Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(4)}>Nama Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(5)}>Nama Pelanggaran</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(6)}>Tanggal Pengajuan</th>\r\n                                            <th scope=\"col\" >View</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Point_PointUnconfirm.map((listdata, index) => (\r\n                                            <tr key={listdata.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{listdata.id}</td>\r\n                                                <td>{listdata.Nama_Pengaju}</td>\r\n                                                <td>{listdata.Nomer_Induk_Dituju}</td>\r\n                                                <td>{listdata.Nama_Dituju}</td>\r\n                                                <td>{listdata.Nama_Pelanggaran}</td>\r\n                                                <td>{listdata.Tanggal_Pengajuan}</td>\r\n                                                <td>\r\n                                                    {this.props.ConfirmingPoint ?\r\n                                                        <button onClick={() => this.ButtonPointDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#AcceptingPointSubmissionModal\" className='btn btn-table-colorize-green'>Accept</button>\r\n                                                        :\r\n                                                        <button onClick={() => this.ButtonPointDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewPointSubmissionDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofUnconfirmPoint, Button_PointDetailView })(PointTabelDataUnconfirmPoint)\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { PointAcception } from '../../../Store/Actions/Point.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PointSubmissionDetail extends React.Component {\r\n    state = {\r\n        Action: '',\r\n        ConfirmAction: '',\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { Point_ID } = this.props.point\r\n        const data = {\r\n            Action: this.state.Action,\r\n            ConfirmAction: this.state.ConfirmAction,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        if((data.Action) && (data.Action === data.ConfirmAction)){\r\n            this.props.PointAcception(Point_ID, user.nomerinduk, data.Action, authdata)\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Point_ID } = this.props.point\r\n        const {\r\n            Action,\r\n            ConfirmAction,\r\n        } = this.state\r\n        const ActionOption = ['Accepted', 'Rejected']\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Point_ID ? (\r\n                        <div className=\"Biodata-section\">\r\n                            <div className=\"header\">\r\n                                <h4 className=\"font-weight-bold position-center\">Point Acception</h4>\r\n                                <hr />\r\n                            </div>\r\n                            <div>\r\n                                <form onSubmit={this.Form_OnSubmit}>\r\n                                    <div>\r\n                                        <label>Point ID</label>\r\n                                        <input type='text' className='Input-as-Info Input-as-Update' value={Point_ID} readOnly />\r\n                                        <label>Action</label>\r\n                                        <select className={`Input-as-Info Input-as-Update ${Action === ConfirmAction ? null : 'form-error'}`} onChange={this.Form_OnChange} name='Action' value={Action}>\r\n                                            <option value=\"\" disabled> -- select an option -- </option>\r\n                                            {ActionOption.map((listdata) =>\r\n                                                <option key={listdata} value={listdata}>{listdata}</option>\r\n                                            )}\r\n                                        </select>\r\n                                        <label>Confirm Action</label>\r\n                                        <select className={`Input-as-Info Input-as-Update ${Action === ConfirmAction ? null : 'form-error'}`} onChange={this.Form_OnChange} name='ConfirmAction' value={ConfirmAction}>\r\n                                            <option value=\"\" disabled> -- select an option -- </option>\r\n                                            {ActionOption.map((listdata) =>\r\n                                                <option key={listdata} value={listdata}>{listdata}</option>\r\n                                            )}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { PointAcception })(PointSubmissionDetail)","import React from 'react'\r\n\r\nimport PointSubmissionDetail from '../Detail/PointSubmissionDetail'\r\nimport AcceptingPointSubmission from '../Detail/AcceptingPointSubmission'\r\n\r\nconst PointSubmissionAcceptModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"AcceptingPointSubmissionModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Point Submission Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PointSubmissionDetail />\r\n                        <AcceptingPointSubmission />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PointSubmissionAcceptModal","import React from 'react'\r\n\r\nimport PointTabelDataUnconfirmPoint from '../../Container/Detail/PointTabel.DataUnconfirmPoint'\r\nimport PointSubmissionAcceptModal from '../../Container/Modal/Modal.PointSubmissionAccept'\r\n\r\nclass PointPenerimaan extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className='position-center'>-Penerimaan Poin-</h1>\r\n                <hr />\r\n                <h3><b>Unconfirmed Point</b></h3>\r\n                <PointTabelDataUnconfirmPoint ConfirmingPoint={true} />\r\n                <PointSubmissionAcceptModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PointPenerimaan","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofConfirmPoint, Button_PointDetailView } from '../../../Store/Actions/Point.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PointTabelDataConfirmPoint extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofConfirmPoint()\r\n    }\r\n    ButtonPointDetailView(ID) {\r\n        this.props.Button_PointDetailView(ID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabeldataconfirmpoint', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabeldataconfirmpoint', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { isPelanggaranLoading, Point_PointConfirm } = this.props.point\r\n        if (isPelanggaranLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {(!Point_PointConfirm || Point_PointConfirm.length <= 0) ? <DataNotFound /> :\r\n                        <div className=\"Biodata-section\">\r\n                            <div className='table-responsive'>\r\n                                <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldataconfirmpoint'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}>Index</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(1)}>No Point Submision</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama Pengaju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Nomer Induk Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(4)}>Nama Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(5)}>Nama Pelanggaran</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(6)}>Tanggal Diterima</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(7)}>Status</th>\r\n                                            <th scope=\"col\" >View</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Point_PointConfirm.map((listdata, index) => (\r\n                                            <tr key={listdata.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{listdata.id}</td>\r\n                                                <td>{listdata.Nama_Pengaju}</td>\r\n                                                <td>{listdata.Nomer_Induk_Dituju}</td>\r\n                                                <td>{listdata.Nama_Dituju}</td>\r\n                                                <td>{listdata.Nama_Pelanggaran}</td>\r\n                                                <td>{listdata.Tanggal_Diterima}</td>\r\n                                                <td>{listdata.Status}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonPointDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewPointSubmissionDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    point: state.PrestasiQu_Point,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofConfirmPoint, Button_PointDetailView })(PointTabelDataConfirmPoint)\r\n","import React from 'react'\r\n\r\nimport { ButtonAddPoint } from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\n\r\nimport PointSubmissionDetailViewModal from '../../Container/Modal/Modal.PointSubmissionDetail_View'\r\nimport PointTabelDataUnconfirmPoint from '../../Container/Detail/PointTabel.DataUnconfirmPoint'\r\nimport PointTabelDataConfirmPoint from '../../Container/Detail/PointTabel.DataConfirmPoint'\r\n\r\nclass PointPengajuan extends React.Component {\r\n    state = {\r\n        isUnconfirmTableOpen: false,\r\n        isConfirmTableOpen: true,\r\n    }\r\n    OpenTableOrNot(stateName, stateValue) {\r\n        this.setState({ [stateName]: !stateValue })\r\n    }\r\n    render() {\r\n        const {\r\n            isUnconfirmTableOpen,\r\n            isConfirmTableOpen,\r\n        } = this.state\r\n        return (\r\n            <div>\r\n                <h1 className='position-center'>-Pengajuan Poin-</h1>\r\n                <ButtonAddPoint />\r\n                <Print />\r\n                <PointSubmissionDetailViewModal />\r\n                <h3 onClick={() => this.OpenTableOrNot('isUnconfirmTableOpen', isUnconfirmTableOpen)}><b>Unconfirmed Point</b></h3>\r\n                {/* <hr /> */}\r\n                {isUnconfirmTableOpen ?\r\n                    <PointTabelDataUnconfirmPoint />\r\n                    : null}\r\n                <h3 onClick={() => this.OpenTableOrNot('isConfirmTableOpen', isConfirmTableOpen)}><b>List All Confirmed Point</b></h3>\r\n                {/* <hr /> */}\r\n                {isConfirmTableOpen ?\r\n                    <PointTabelDataConfirmPoint />\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PointPengajuan","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { GetPrestasiDetail } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nclass PrestasiDetail extends React.Component {\r\n    componentDidMount() {\r\n        const { user } = this.props.auth\r\n        if (user) {\r\n            this.props.GetPrestasiDetail(user.profile)\r\n        }\r\n    }\r\n    render() {\r\n        const {Prestasi_Score} = this.props.prestasi\r\n        return (\r\n            <div>\r\n                <h3><b>Your point are:</b></h3>\r\n                {Prestasi_Score ? (\r\n                    <div className={`pointscore ${Prestasi_Score >= 250 ?\r\n                        'pointgood' : (`${Prestasi_Score >= 150 ?\r\n                            'pointwarning' : (`${Prestasi_Score >= 50 ?\r\n                                'pointdenger' : 'pointdead'}`\r\n                            )}`\r\n                        )}`\r\n                    }>\r\n                        {Prestasi_Score}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\nexport default connect(mapStateToProps, { GetPrestasiDetail })(PrestasiDetail)","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadPrestasiListofPrestasi, Button_PrestasiDetailView } from '../../../Store/Actions/Prestasi.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PrestasiTabelDataPrestasi extends React.Component {\r\n    componentDidMount() {\r\n        const { user } = this.props.auth\r\n        if (user) {\r\n            this.props.LoadPrestasiListofPrestasi(user.nomerinduk)\r\n        }\r\n    }\r\n    ButtonPrestasiDetailView(ID) {\r\n        this.props.Button_PrestasiDetailView(ID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabelprestasidataprestasi', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabelprestasidataprestasi', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading, Prestasi_Prestasi } = this.props.prestasi\r\n        // console.log(Prestasi_Prestasi)\r\n        if (isPrestasiLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {(!Prestasi_Prestasi || Prestasi_Prestasi.length <= 0) ? <DataNotFound /> :\r\n                        <div className=\"Biodata-section\">\r\n                            <div className='table-responsive'>\r\n                                <table className=\"table table-striped table-hover table-custom position-center\" id='tabelprestasidataprestasi'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}>Index</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(1)}>No Point Submision</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama Pengaju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Nomer Induk Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(4)}>Nama Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(5)}>Nama Prestasi</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(6)}>Tingkatan Prestasi</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(7)}>Tanggal Diterima</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(8)}>Status</th>\r\n                                            <th scope=\"col\" >View</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Prestasi_Prestasi.map((listdata, index) => (\r\n                                            <tr key={listdata.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{listdata.id}</td>\r\n                                                <td>{listdata.Nama_Pengaju}</td>\r\n                                                <td>{listdata.Nomer_Induk_Dituju}</td>\r\n                                                <td>{listdata.Nama_Dituju}</td>\r\n                                                <td>{listdata.Nama_Prestasi}</td>\r\n                                                <td>{listdata.Tingkatan_Prestasi}</td>\r\n                                                <td>{listdata.Tanggal_Diterima}</td>\r\n                                                <td>{listdata.Status}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonPrestasiDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewPrestasiSubmissionDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadPrestasiListofPrestasi, Button_PrestasiDetailView })(PrestasiTabelDataPrestasi)\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadPrestasiSubmissionDetail } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PrestasiSubmissionDetail extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.prestasi.Prestasi_ID !== prevProps.prestasi.Prestasi_ID) {\r\n            const { Prestasi_ID } = this.props.prestasi\r\n            if (Prestasi_ID !== null) {\r\n                this.props.LoadPrestasiSubmissionDetail(Prestasi_ID)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading, Prestasi } = this.props.prestasi\r\n        if (isPrestasiLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Prestasi ? (\r\n                        <div className=\"Biodata-section\">\r\n                            <div className=\"header\">\r\n                                <h4 className={`position-right font-weight-bold ${(Prestasi.Status === 'Menunggu') ?\r\n                                    'pointwarning' : (`${(Prestasi.Status === 'Cancel') ?\r\n                                        'pointwarning' : 'pointgood'\r\n                                        }`\r\n                                    )}`\r\n                                }>\r\n                                    {Prestasi.Status}\r\n                                </h4>\r\n                                <h6 className=\"position-right\">Tanggal Pengajuan:{Prestasi.Tanggal_Pengajuan}</h6>\r\n                                <h4 className=\"font-weight-bold\">Detail:</h4>\r\n                                <hr />\r\n                            </div>\r\n                            <div>\r\n                                <label>Point Submission Number:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='id' readOnly value={Prestasi.id ? Prestasi.id : \"\"} /><br />\r\n                                <label>Nomer Induk Pengaju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nomer_Induk_Pengaju' readOnly value={Prestasi.Nomer_Induk_Pengaju ? Prestasi.Nomer_Induk_Pengaju : \"\"} /><br />\r\n                                <label>Nama Pengaju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Pengaju' readOnly value={Prestasi.Nama_Pengaju ? Prestasi.Nama_Pengaju : \"\"} /><br />\r\n                                <label>Nomer Induk Dituju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nomer_Induk_Dituju' readOnly value={Prestasi.Nomer_Induk_Dituju ? Prestasi.Nomer_Induk_Dituju : \"\"} /><br />\r\n                                <label>Nama Dituju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Dituju' readOnly value={Prestasi.Nama_Dituju ? Prestasi.Nama_Dituju : \"\"} /><br />\r\n                                <label>Point Awal Dituju:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Point_Awal_Dituju' readOnly value={Prestasi.Point_Awal_Dituju ? Prestasi.Point_Awal_Dituju : \"\"} /><br />\r\n                                <label>Nama Prestasi:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Prestasi' readOnly value={Prestasi.Nama_Prestasi ? Prestasi.Nama_Prestasi : \"\"} /><br />\r\n                                <label>No Sertifikat:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='No_Sertifikat' readOnly value={Prestasi.No_Sertifikat ? Prestasi.No_Sertifikat : \"\"} /><br />\r\n                                <label>Katagori Prestasi:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Katagori_Prestasi' readOnly value={Prestasi.Katagori_Prestasi ? Prestasi.Katagori_Prestasi : \"\"} /><br />\r\n                                <label>Tingkatan Prestasi:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Tingkatan_Prestasi' readOnly value={Prestasi.Tingkatan_Prestasi ? Prestasi.Tingkatan_Prestasi : \"\"} /><br />\r\n                                <label>Prestasi Point:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Prestasi_Point' readOnly value={`+${Prestasi.Prestasi_Point ? Prestasi.Prestasi_Point : \"\"}`} /><br />\r\n                                <label>Nama Instansi:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Nama_Instansi' readOnly value={Prestasi.Nama_Instansi ? Prestasi.Nama_Instansi : \"\"} /><br />\r\n                                <label>Keterangan:</label><br />\r\n                                <input type='text' className='Input-as-Info' name='Keterangan' readOnly value={Prestasi.Keterangan ? Prestasi.Keterangan : \"\"} /><br />\r\n                                <label>Lampiran:</label><br />\r\n                                {Prestasi.Lampiran ? (\r\n                                    <div>\r\n                                        <img src={Prestasi.Lampiran} className='lampiran-img' alt='lampiran point submission' /><br />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div>\r\n                                            <h5 className=\"position-center\">There is no Point Submission Lampiran</h5>\r\n                                        </div>\r\n                                    )}\r\n                                {(Prestasi.Status !== 'Menunggu') ? (\r\n                                    <div>\r\n                                        <label>Nomer_Induk_Assessor:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Nomer_Induk_Assessor' readOnly value={Prestasi.Nomer_Induk_Assessor ? Prestasi.Nomer_Induk_Assessor : \"\"} /><br />\r\n                                        <label>Nama_Assessor:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Nama_Assessor' readOnly value={Prestasi.Nama_Assessor ? Prestasi.Nama_Assessor : \"\"} /><br />\r\n                                        <label>Tanggal_Diterima:</label><br />\r\n                                        <input type='text' className='Input-as-Info' name='Tanggal_Diterima' readOnly value={Prestasi.Tanggal_Diterima ? Prestasi.Tanggal_Diterima : \"\"} /><br />\r\n                                    </div>\r\n                                ) : null}\r\n                                <label>Point_Akhir:</label><br />\r\n                                <h4 className={`position-center point-akhir ${Prestasi.Point_Akhir >= 250 ?\r\n                                    'pointgood' : (`${Prestasi.Point_Akhir >= 150 ?\r\n                                        'pointwarning' : (`${Prestasi.Point_Akhir >= 50 ?\r\n                                            'pointdenger' : 'pointdead'}`\r\n                                        )}`\r\n                                    )}`\r\n                                }>\r\n                                    {Prestasi.Point_Akhir ? Prestasi.Point_Akhir : \"\"}\r\n                                </h4>\r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadPrestasiSubmissionDetail })(PrestasiSubmissionDetail)","import React from 'react'\r\n\r\nimport PrestasiSubmissionDetail from '../Detail/PrestasiSubmissionDetail'\r\n\r\nconst PrestasiSubmissionDetailViewModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"ViewPrestasiSubmissionDetailModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Prestasi Submission Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PrestasiSubmissionDetail />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrestasiSubmissionDetailViewModal","import React from 'react'\r\n\r\nimport Print from '../../Container/Print'\r\nimport PrestasiDetail from '../../Container/Detail/PrestasiDetail'\r\nimport PrestasiTabelDataPrestasi from '../../Container/Detail/PrestasiTabel.DataPrestasi'\r\nimport PrestasiSubmissionDetailViewModal from '../../Container/Modal/Modal.PrestasiSubmissionDetail_View'\r\n\r\nclass Prestasi extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className='position-center'>-Prestasi-</h1>\r\n                <Print />\r\n                <PrestasiDetail />\r\n                <h4>Prestasi History:</h4>\r\n                <PrestasiTabelDataPrestasi />\r\n                <PrestasiSubmissionDetailViewModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Prestasi","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofUnconfirmPrestasi, Button_PrestasiDetailView } from '../../../Store/Actions/Prestasi.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PrestasiTabelDataUnconfirmPrestasi extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofUnconfirmPrestasi()\r\n    }\r\n    ButtonPrestasiDetailView(ID) {\r\n        this.props.Button_PrestasiDetailView(ID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabeldataunconfirmprestasi', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabeldataunconfirmprestasi', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading, Prestasi_PrestasiUnconfirm } = this.props.prestasi\r\n        if (isPrestasiLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {(!Prestasi_PrestasiUnconfirm || Prestasi_PrestasiUnconfirm.length <= 0) ? <DataNotFound /> :\r\n                        <div className=\"Biodata-section\">\r\n                            <div className='table-responsive'>\r\n                                <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldataunconfirmprestasi'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}>Index</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(1)}>No Point Submision</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama Pengaju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Nomer Induk Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(4)}>Nama Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(5)}>Nama Prestasi</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(6)}>Tingkatan Prestasi</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(7)}>Tanggal Pengajuan</th>\r\n                                            <th scope=\"col\" >View</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Prestasi_PrestasiUnconfirm.map((listdata, index) => (\r\n                                            <tr key={listdata.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{listdata.id}</td>\r\n                                                <td>{listdata.Nama_Pengaju}</td>\r\n                                                <td>{listdata.Nomer_Induk_Dituju}</td>\r\n                                                <td>{listdata.Nama_Dituju}</td>\r\n                                                <td>{listdata.Nama_Prestasi}</td>\r\n                                                <td>{listdata.Tingkatan_Prestasi}</td>\r\n                                                <td>{listdata.Tanggal_Pengajuan}</td>\r\n                                                <td>\r\n                                                    {this.props.ConfirmingPrestasi ?\r\n                                                        <button onClick={() => this.ButtonPrestasiDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#AcceptingPrestasiSubmissionModal\" className='btn btn-table-colorize-green'>Accept</button>\r\n                                                        :\r\n                                                        <button onClick={() => this.ButtonPrestasiDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewPrestasiSubmissionDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofUnconfirmPrestasi, Button_PrestasiDetailView })(PrestasiTabelDataUnconfirmPrestasi)\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { PrestasiAcception } from '../../../Store/Actions/Prestasi.Actions'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass AcceptingPrestasiSubmission extends React.Component {\r\n    state = {\r\n        Action: '',\r\n        ConfirmAction: '',\r\n    }\r\n    Form_OnSubmit = E => {\r\n        E.preventDefault()\r\n        const { Prestasi_ID } = this.props.prestasi\r\n        const data = {\r\n            Action: this.state.Action,\r\n            ConfirmAction: this.state.ConfirmAction,\r\n        }\r\n        const { user } = this.props.auth\r\n        const authdata = {\r\n            siswa: user.siswa,\r\n            staff: user.staff,\r\n            admin: user.admin,\r\n            supervisor: user.supervisor,\r\n            superuser: user.superuser,\r\n        }\r\n        if((data.Action) && (data.Action === data.ConfirmAction)){\r\n            this.props.PrestasiAcception(Prestasi_ID, user.nomerinduk, data.Action, authdata)\r\n        }\r\n    }\r\n    Form_OnChange = E => {\r\n        this.setState({ [E.target.name]: E.target.value })\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading, Prestasi_ID } = this.props.prestasi\r\n        const {\r\n            Action,\r\n            ConfirmAction,\r\n        } = this.state\r\n        const ActionOption = ['Accepted', 'Rejected']\r\n        if (isPrestasiLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {Prestasi_ID ? (\r\n                        <div className=\"Biodata-section\">\r\n                            <div className=\"header\">\r\n                                <h4 className=\"font-weight-bold position-center\">Prestasi Acception</h4>\r\n                                <hr />\r\n                            </div>\r\n                            <div>\r\n                                <form onSubmit={this.Form_OnSubmit}>\r\n                                    <div>\r\n                                        <label>Prestasi ID</label>\r\n                                        <input type='text' className='Input-as-Info Input-as-Update' value={Prestasi_ID} readOnly />\r\n                                        <label>Action</label>\r\n                                        <select className={`Input-as-Info Input-as-Update ${Action === ConfirmAction ? null : 'form-error'}`} onChange={this.Form_OnChange} name='Action' value={Action}>\r\n                                            <option value=\"\" disabled> -- select an option -- </option>\r\n                                            {ActionOption.map((listdata) =>\r\n                                                <option key={listdata} value={listdata}>{listdata}</option>\r\n                                            )}\r\n                                        </select>\r\n                                        <label>Confirm Action</label>\r\n                                        <select className={`Input-as-Info Input-as-Update ${Action === ConfirmAction ? null : 'form-error'}`} onChange={this.Form_OnChange} name='ConfirmAction' value={ConfirmAction}>\r\n                                            <option value=\"\" disabled> -- select an option -- </option>\r\n                                            {ActionOption.map((listdata) =>\r\n                                                <option key={listdata} value={listdata}>{listdata}</option>\r\n                                            )}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" className=\"btn btn-lg btn-block btn-colorize-green\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                        : <DataNotFound />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { PrestasiAcception })(AcceptingPrestasiSubmission)","import React from 'react'\r\n\r\nimport PrestasiSubmissionDetail from '../Detail/PrestasiSubmissionDetail'\r\nimport AcceptingPrestasiSubmission from '../Detail/AcceptingPrestasiSubmission'\r\n\r\nconst PrestasiSubmissionAcceptModal = () => {\r\n    return (\r\n        <div className=\"modal fade\" id=\"AcceptingPrestasiSubmissionModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title font-weight-bold\">Prestasi Submission Detail View</h2>\r\n                        <button type=\"button\" className=\"close position-right\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PrestasiSubmissionDetail />\r\n                        <AcceptingPrestasiSubmission />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrestasiSubmissionAcceptModal","import React from 'react'\r\n\r\nimport PrestasiTabelDataUnconfirmPrestasi from '../../Container/Detail/PrestasiTabel.DataUnconfirmPrestasi'\r\nimport PrestasiSubmissionAcceptModal from '../../Container/Modal/Modal.PrestasiSubmissionAccept'\r\n\r\nclass PrestasiPenerimaan extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className='position-center'>-Penerimaan Prestasi-</h1>\r\n                <hr />\r\n                <h3><b>Unconfirmed Prestasi</b></h3>\r\n                <PrestasiTabelDataUnconfirmPrestasi ConfirmingPrestasi={true} />\r\n                <PrestasiSubmissionAcceptModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrestasiPenerimaan","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { LoadListofConfirmPrestasi, Button_PrestasiDetailView } from '../../../Store/Actions/Prestasi.Actions'\r\nimport { Short_Column_INT, Short_Column_STR } from '../Shorting'\r\n\r\nimport DataNotFound from '../DataNotFound'\r\nimport Loading from '../Loading'\r\n\r\nclass PrestasiTabelDataConfirmPrestasi extends React.Component {\r\n    componentDidMount() {\r\n        this.props.LoadListofConfirmPrestasi()\r\n    }\r\n    ButtonPrestasiDetailView(ID) {\r\n        this.props.Button_PrestasiDetailView(ID)\r\n    }\r\n    ButtonShortINT(ColumnNumb) {\r\n        Short_Column_INT('tabeldataconfirmprestasi', ColumnNumb)\r\n    }\r\n    ButtonShortSTR(ColumnNumb) {\r\n        Short_Column_STR('tabeldataconfirmprestasi', ColumnNumb)\r\n    }\r\n    render() {\r\n        const { isPrestasiLoading, Prestasi_PrestasiConfirm } = this.props.prestasi\r\n        if (isPrestasiLoading === true) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {(!Prestasi_PrestasiConfirm || Prestasi_PrestasiConfirm.length <= 0) ? <DataNotFound /> :\r\n                        <div className=\"Biodata-section\">\r\n                            <div className='table-responsive'>\r\n                                <table className=\"table table-striped table-hover table-custom position-center\" id='tabeldataconfirmprestasi'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(0)}>Index</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortINT(1)}>No Point Submision</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(2)}>Nama Pengaju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(3)}>Nomer Induk Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(4)}>Nama Dituju</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(5)}>Nama Prestasi</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(6)}>Tingkatan Prestasi</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(7)}>Tanggal Diterima</th>\r\n                                            <th scope=\"col\" onClick={() => this.ButtonShortSTR(8)}>Status</th>\r\n                                            <th scope=\"col\" >View</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Prestasi_PrestasiConfirm.map((listdata, index) => (\r\n                                            <tr key={listdata.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{listdata.id}</td>\r\n                                                <td>{listdata.Nama_Pengaju}</td>\r\n                                                <td>{listdata.Nomer_Induk_Dituju}</td>\r\n                                                <td>{listdata.Nama_Dituju}</td>\r\n                                                <td>{listdata.Nama_Prestasi}</td>\r\n                                                <td>{listdata.Tingkatan_Prestasi}</td>\r\n                                                <td>{listdata.Tanggal_Diterima}</td>\r\n                                                <td>{listdata.Status}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.ButtonPrestasiDetailView(listdata.id)} data-toggle=\"modal\" data-target=\"#ViewPrestasiSubmissionDetailModal\" className='btn btn-table-colorize-green'>View</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    prestasi: state.PrestasiQu_Prestasi,\r\n    auth: state.PrestasiQu_Auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoadListofConfirmPrestasi, Button_PrestasiDetailView })(PrestasiTabelDataConfirmPrestasi)\r\n","import React from 'react'\r\n\r\nimport { ButtonAddPrestasi } from '../../Container/Button_Add'\r\nimport Print from '../../Container/Print'\r\n\r\nimport PrestasiSubmissionDetailViewModal from '../../Container/Modal/Modal.PrestasiSubmissionDetail_View'\r\nimport PrestasiTabelDataUnconfirmPrestasi from '../../Container/Detail/PrestasiTabel.DataUnconfirmPrestasi'\r\nimport PrestasiTabelDataConfirmPrestasi from '../../Container/Detail/PrestasiTabel.DataConfirmPrestasi'\r\n\r\nclass PrestasiPengajuan extends React.Component{\r\n    state = {\r\n        isUnconfirmTableOpen: false,\r\n        isConfirmTableOpen: true,\r\n    }\r\n    OpenTableOrNot(stateName, stateValue) {\r\n        this.setState({ [stateName]: !stateValue })\r\n    }\r\n    render(){\r\n        const {\r\n            isUnconfirmTableOpen,\r\n            isConfirmTableOpen,\r\n        } = this.state\r\n        return(\r\n            <div>\r\n                <h1 className='position-center'>-Pengajuan Prestasi-</h1>\r\n                <ButtonAddPrestasi />\r\n                <Print />\r\n\r\n                <PrestasiSubmissionDetailViewModal />\r\n\r\n                <h3 onClick={() => this.OpenTableOrNot('isUnconfirmTableOpen', isUnconfirmTableOpen)}><b>Unconfirmed Prestasi</b></h3>\r\n                {isUnconfirmTableOpen ?\r\n                    <PrestasiTabelDataUnconfirmPrestasi />\r\n                    : null}\r\n\r\n                <h3 onClick={() => this.OpenTableOrNot('isConfirmTableOpen', isConfirmTableOpen)}><b>List All Confirmed Prestasi</b></h3>\r\n                {isConfirmTableOpen ?\r\n                    <PrestasiTabelDataConfirmPrestasi />\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrestasiPengajuan","import React from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Layouts/Home'\r\nimport Blog from './Components/Layouts/Blog'\r\nimport About from './Components/Layouts/About'\r\nimport Preview from './Components/Containers/Preview'\r\nimport { PageNotFound } from './Components/Containers/404'\r\n\r\n\r\n\r\nimport BlogLearning from './Components/Layouts/Blog/Blog.Learning'\r\n\r\n\r\n\r\n\r\n\r\nimport BlogKasirQu from './Components/Layouts/Blog/Blog.KasirQu'\r\n\r\nimport KasirQuPrivateRoute from './Components/Cluster/KasirQu/src/Security/PrivateRoute'\r\n\r\nimport KasirQu_Login from './Components/Cluster/KasirQu/src/Components/Layouts/Account/Login'\r\nimport KasirQu_FirsTimeUse from './Components/Cluster/KasirQu/src/Components/Layouts/FirsTimeUse'\r\nimport KasirQu_Logout from './Components/Cluster/KasirQu/src/Components/Layouts/Account/Logout'\r\n// import { KasirQu_HalamanTidakDitemukan } from './Components/Cluster/KasirQu/src/Components/Containers/Page404'\r\n\r\nimport KasirQu_Home from './Components/Cluster/KasirQu/src/Components/Layouts/Home'\r\n\r\nimport KasirQu_Transaksi from './Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/Transaksi'\r\nimport KasirQu_TransaksiImportExport from './Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/TransaksiImportExport'\r\nimport KasirQu_Belanja from './Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/Belanja'\r\nimport KasirQu_TransaksiList from './Components/Cluster/KasirQu/src/Components/Layouts/Transaksi/TransaksiList'\r\n\r\nimport KasirQu_Barang from './Components/Cluster/KasirQu/src/Components/Layouts/Barang/Barang'\r\nimport KasirQu_KatagoriBarang from './Components/Cluster/KasirQu/src/Components/Layouts/Barang/katagoribarang'\r\nimport KasirQu_KatagoriBarangImportExport from './Components/Cluster/KasirQu/src/Components/Layouts/Barang/KatagoriBarangImportExport'\r\nimport KasirQu_KonfigurasiBarang from './Components/Cluster/KasirQu/src/Components/Layouts/Barang/KonfigurasiBarang'\r\nimport KasirQu_BarangImportExport from './Components/Cluster/KasirQu/src/Components/Layouts/Barang/BarangImportExport'\r\n\r\nimport KasirQu_Help from './Components/Cluster/KasirQu/src/Components/Layouts/Help/Help'\r\nimport KasirQu_IncomeReport from './Components/Cluster/KasirQu/src/Components/Layouts/Help/IncomeReport'\r\nimport KasirQu_OutcomeReport from './Components/Cluster/KasirQu/src/Components/Layouts/Help/OutcomeReport'\r\nimport KasirQu_Graph from './Components/Cluster/KasirQu/src/Components/Layouts/Help/Graph'\r\n\r\nimport {\r\n    ////// USER\r\n    KasirQuHelp_TingkatanAkun,\r\n    KasirQuHelp_PerbedaanTingkatanAkun,\r\n    KasirQuHelp_TambahUser,\r\n    KasirQuHelp_UpdateUser,\r\n    KasirQuHelp_DeleteUser,\r\n    KasirQuHelp_UpdateToko,\r\n    KasirQuHelp_History,\r\n    ////// HELP\r\n    KasirQuHelp_IncomeReport,\r\n    KasirQuHelp_OutcomeReport,\r\n    KasirQuHelp_Graph,\r\n    ////// BARANG\r\n    KasirQuHelp_BarangList,\r\n    KasirQuHelp_Barang,\r\n    KasirQuHelp_SatuanJualBarang,\r\n    KasirQuHelp_JenisBarang,\r\n    ////// TRANSAKSI\r\n    KasirQuHelp_Transaksi,\r\n    KasirQuHelp_Belanja,\r\n    KasirQuHelp_Stok,\r\n    KasirQuHelp_TransaksiDetail,\r\n    ////// GENERAL||NAVIGASI\r\n    KasirQuHelp_ImportExport,\r\n    KasirQuHelp_LightDark,\r\n    KasirQuHelp_PanduanPenggunaan,\r\n    KasirQuHelp_PanduanTampilan,\r\n    KasirQuHelp_PanduanMenu,\r\n    KasirQuHelp_FirstTimeUse,\r\n    KasirQuHelp_Login,\r\n} from './Components/Cluster/KasirQu/src/Components/Layouts/Help/Help.Help'\r\n\r\nimport KasirQu_Account from './Components/Cluster/KasirQu/src/Components/Layouts/Account/Account'\r\nimport KasirQu_UserList from './Components/Cluster/KasirQu/src/Components/Layouts/Account/UserList'\r\nimport KasirQu_TokoDetail from './Components/Cluster/KasirQu/src/Components/Layouts/Account/TokoDetail'\r\nimport KasirQu_History from './Components/Cluster/KasirQu/src/Components/Layouts/Account/History'\r\n\r\n\r\n\r\n\r\n\r\nimport BlogPrestasiQu from './Components/Layouts/Blog/Blog.PrestasiQu'\r\n\r\nimport PrestasiQuPrivateRoute from './Components/Cluster/PrestasiQu/src/Security/PrivateRoute'\r\n\r\nimport PrestasiQuLogin from './Components/Cluster/PrestasiQu/src/Components/Layout/Account/login'\r\nimport PrestasiQuLogout from './Components/Cluster/PrestasiQu/src/Components/Layout/Account/logout'\r\n\r\nimport PrestasiQuHome from './Components/Cluster/PrestasiQu/src/Components/Layout/Home'\r\n\r\nimport PrestasiQuBiodata from './Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata'\r\nimport PrestasiQuDataAdmin from './Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_admin'\r\nimport PrestasiQuDataGuru from './Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_guru'\r\nimport PrestasiQuDataInstansi from './Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_instansi'\r\nimport PrestasiQuDataPelanggaran from './Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_pelanggaran'\r\nimport PrestasiQuDataSiswa from './Components/Cluster/PrestasiQu/src/Components/Layout/Biodata/Biodata.data_siswa'\r\n\r\nimport PrestasiQuPoint from './Components/Cluster/PrestasiQu/src/Components/Layout/Point/Point'\r\nimport PrestasiQuPointPenerimaan from './Components/Cluster/PrestasiQu/src/Components/Layout/Point/Point.penerimaan_pengajuan_point'\r\nimport PrestasiQuPointPengajuan from './Components/Cluster/PrestasiQu/src/Components/Layout/Point/Point.pengajuan_point'\r\n\r\nimport PrestasiQuPrestasi from './Components/Cluster/PrestasiQu/src/Components/Layout/Prestasi/Prestasi'\r\nimport PrestasiQuPrestasiPenerimaan from './Components/Cluster/PrestasiQu/src/Components/Layout/Prestasi/Prestasi.penerimaan_pengajuan_prestasi'\r\nimport PrestasiQuPrestasiPengajuan from './Components/Cluster/PrestasiQu/src/Components/Layout/Prestasi/Prestasi.pengajuan_prestasi'\r\n\r\nconst BaseRouter = () => {\r\n    return (\r\n        <Switch>\r\n\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/blog\" component={Blog} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/blog/preview\" component={Preview} />\r\n\r\n\r\n            <Route exact path=\"/blog/blog/learning\" component={BlogLearning} />\r\n\r\n\r\n\r\n\r\n\r\n            <Route exact path=\"/blog/blog/kasirqu\" component={BlogKasirQu} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu\" component={KasirQu_Home} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/transaksi\" component={KasirQu_Transaksi} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/transaksi/belanja\" component={KasirQu_Belanja} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/transaksi/transaksilist\" component={KasirQu_TransaksiList} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/transaksi/importexport\" component={KasirQu_TransaksiImportExport} SecurityType={'SuperPrivacry'} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/barang\" component={KasirQu_Barang} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/barang/katagoribarang\" component={KasirQu_KatagoriBarang} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/barang/konfigurasibarang\" component={KasirQu_KonfigurasiBarang} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/barang/katagoribarang/importexport\" component={KasirQu_KatagoriBarangImportExport} SecurityType={'SuperPrivacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/barang/konfigurasibarang/importexport\" component={KasirQu_BarangImportExport} SecurityType={'SuperPrivacry'} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help\" component={KasirQu_Help} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/incomereport\" component={KasirQu_IncomeReport} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/outcomereport\" component={KasirQu_OutcomeReport} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/graph\" component={KasirQu_Graph} SecurityType={'Privacry'} />\r\n\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/tingkatan_akun\" component={KasirQuHelp_TingkatanAkun} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/perbedaan_tingkatan_akun\" component={KasirQuHelp_PerbedaanTingkatanAkun} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/tambah_user\" component={KasirQuHelp_TambahUser} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/update_user\" component={KasirQuHelp_UpdateUser} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/delete_user\" component={KasirQuHelp_DeleteUser} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/update_toko\" component={KasirQuHelp_UpdateToko} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/history\" component={KasirQuHelp_History} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/incomereport_help\" component={KasirQuHelp_IncomeReport} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/outcomereport_help\" component={KasirQuHelp_OutcomeReport} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/graph_help\" component={KasirQuHelp_Graph} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/barang_list\" component={KasirQuHelp_BarangList} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/barang\" component={KasirQuHelp_Barang} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/satuan_jual_barang\" component={KasirQuHelp_SatuanJualBarang} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/jenisbarang\" component={KasirQuHelp_JenisBarang} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/transaksi\" component={KasirQuHelp_Transaksi} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/belanja\" component={KasirQuHelp_Belanja} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/stok\" component={KasirQuHelp_Stok} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/transaksi_detail\" component={KasirQuHelp_TransaksiDetail} />\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/import-export\" component={KasirQuHelp_ImportExport} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/light-dark\" component={KasirQuHelp_LightDark} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/penggunaan_help\" component={KasirQuHelp_PanduanPenggunaan} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/tampilan_help\" component={KasirQuHelp_PanduanTampilan} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/help/menu_help\" component={KasirQuHelp_PanduanMenu} />\r\n            <Route exact path=\"/blog/preview/kasirqu/help/first_time_use\" component={KasirQuHelp_FirstTimeUse} />\r\n            <Route exact path=\"/blog/preview/kasirqu/help/login\" component={KasirQuHelp_Login} />\r\n\r\n\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/account\" component={KasirQu_Account} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/account/userlist\" component={KasirQu_UserList} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/account/tokodetail\" component={KasirQu_TokoDetail} SecurityType={'Privacry'} />\r\n            <KasirQuPrivateRoute exact path=\"/blog/preview/kasirqu/account/tokodetail/history\" component={KasirQu_History} SecurityType={'SuperPrivacry'} />\r\n\r\n            <Route exact path=\"/blog/preview/kasirqu/firsttimeuse\" component={KasirQu_FirsTimeUse} />\r\n            <Route exact path=\"/blog/preview/kasirqu/login\" component={KasirQu_Login} />\r\n            <Route exact path=\"/blog/preview/kasirqu/logout\" component={KasirQu_Logout} />\r\n            {/* <Route path=\"*\" component={KasirQu_HalamanTidakDitemukan} /> */}\r\n\r\n\r\n\r\n\r\n\r\n            <Route exact path=\"/blog/blog/prestasiqu\" component={BlogPrestasiQu} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu\" component={PrestasiQuHome} />\r\n\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/biodata\" component={PrestasiQuBiodata} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/biodata/data-siswa\" component={PrestasiQuDataSiswa} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/biodata/data-guru\" component={PrestasiQuDataGuru} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/biodata/data-admin\" component={PrestasiQuDataAdmin} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/biodata/data-instansi\" component={PrestasiQuDataInstansi} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/biodata/data-pelanggaran\" component={PrestasiQuDataPelanggaran} />\r\n\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/prestasi\" component={PrestasiQuPrestasi} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/prestasi/pengajuan-prestasi\" component={PrestasiQuPrestasiPengajuan} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/prestasi/penerimaan-pengajuan-prestasi\" component={PrestasiQuPrestasiPenerimaan} />\r\n\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/point\" component={PrestasiQuPoint} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/point/pengajuan-point\" component={PrestasiQuPointPengajuan} />\r\n            <PrestasiQuPrivateRoute exact path=\"/blog/preview/prestasiqu/point/penerimaan-pengajuan-point\" component={PrestasiQuPointPenerimaan} />\r\n            <Route exact path=\"/blog/preview/prestasiqu/login\" component={PrestasiQuLogin} />\r\n            <Route exact path=\"/blog/preview/prestasiqu/logout\" component={PrestasiQuLogout} />\r\n\r\n\r\n\r\n            <Route path=\"*\" component={PageNotFound} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default BaseRouter","import React, { lazy, Fragment, Suspense } from 'react'\r\n\r\n// import Loading from './PrestasiQu/src/Components/Container/Loading'\r\n\r\nconst PrestasiQuThemeConfig = lazy(() => import('./PrestasiQuThemeConfig'))\r\n\r\nconst PrestasiQuTheme = ({ children }) => {\r\n    return (\r\n        <Fragment>\r\n            <Suspense fallback={\r\n                <div>\r\n                    <center>\r\n                        <h1>\r\n                            Loading...\r\n                        </h1>\r\n                    </center>\r\n                </div>}>\r\n                <PrestasiQuThemeConfig />\r\n            </Suspense>\r\n            {children}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PrestasiQuTheme","import React, { Fragment, useEffect } from 'react'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport Store from './Store/Store'\nimport { connect } from 'react-redux'\nimport { Hide_Nabar } from './Store/Actions/Display.Action'\nimport { Load_User } from './Components/Cluster/KasirQu/src/Store/Actions/Auth.Actions'\nimport { PrestasiQuLoadUser } from './Components/Cluster/PrestasiQu/src/Store/Actions/Auth.Actions'\n\nimport { ThemeProvider, createMuiTheme, CssBaseline, useMediaQuery, Container } from '@material-ui/core'\nimport { MUI_theme_auth_dark, MUI_theme_auth_light, MUI_theme_unauth_dark, MUI_theme_unauth_light, MUI_st__Container_SideNav, MUI_st__Container_FlatNav } from './Components/Cluster/KasirQu/src/MUI_theme'\nimport { MUI_Initial_State } from './MUI_Theme_Style'\n\nimport Navbar from './Components/Layouts/Navbar'\nimport KasirQuNavbar from './Components/Cluster/KasirQu/src/Components/Containers/Navbar'\nimport PrestasiQuNavbar from './Components/Cluster/PrestasiQu/src/Components/Container/navbar'\nimport KasirQuMessages from './Components/Cluster/KasirQu/src/Components/Containers/Messages'\nimport PrestasiQuMassages from './Components/Cluster/PrestasiQu/src/Components/Container/Massages'\nimport BaseRouter from './Router'\nimport PrestasiQuTheme from './Components/Cluster/PrestasiQuTheme'\n\nconst App = (props) => {\n  const [LocationURL, ChangeLocationURL] = React.useState(null)\n  const KasirQuValue = 'KasirQu'\n  const PrestasiQuValue = 'PrestasiQu'\n  useEffect(() => {\n    try {\n      const URLLocation = window.location.href\n      const KasirQuURLLocation = '/blog/preview/kasirqu'\n      const PrestasiQuURLLocation = '/blog/preview/prestasiqu'\n      if (URLLocation.includes(KasirQuURLLocation)) {\n        console.log('Log: App -> KasirQuValue', KasirQuValue)\n        ChangeLocationURL(KasirQuValue)\n        Store.dispatch(Hide_Nabar())\n        const auth = props.auth\n\n        if (auth.token || auth.isAuth) {\n          Store.dispatch(Load_User())\n        }\n\n      } else if (URLLocation.includes(PrestasiQuURLLocation)) {\n        console.log('Log: App -> PrestasiQuValue', PrestasiQuValue)\n        // require('bootstrap/dist/css/bootstrap.css')\n        // require('bootstrap/dist/js/bootstrap')\n        // require('./Components/Cluster/PrestasiQu/src/index.css')\n        ChangeLocationURL(PrestasiQuValue)\n        Store.dispatch(Hide_Nabar())\n\n        Store.dispatch(PrestasiQuLoadUser())\n\n      } else {\n        console.log('Non Preview URL')\n      }\n    } catch (err) {\n      console.log('Log: App -> err', err)\n    }\n\n    // eslint-disable-next-line\n  }, [])\n\n  const Defatult_BackgroundDefault_Lg = '#eeeeee'\n  const Defatult_BackgroundDefault_Dr = '#313131'\n\n  const LightTheme = createMuiTheme({\n    palette: {\n      type: 'light',\n\n      background: {\n        paper: props.PaperTheme ? props.PaperTheme : '#ffffff',\n        default: props.DefaultTheme ? props.DefaultTheme : Defatult_BackgroundDefault_Lg\n      },\n\n      primary: {\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#3f51b5',\n        main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#3b5249',//1\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#ADC7B5',//2\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#F9ECDF',//3 x\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#F5D040',//4 x\n        contrastText: props.ContrastTextTheme ? props.ContrastTextTheme : '#ffffff',\n      },\n\n      secondary: {\n        main: props.SecondaryMainTheme ? props.SecondaryMainTheme : '#f50057',\n        contrastText: props.ContrastTextTheme ? props.ContrastTextTheme : '#ffffff',\n      },\n\n      text: {\n        primary: props.TextPrimaryTheme ? props.TextPrimaryTheme : 'rgba(0, 0, 0, 0.87)',\n        secondary: props.TextSecondaryTheme ? props.TextSecondaryTheme : 'rgba(0, 0, 0, 0.54)',\n      },\n    },\n\n    custom: {\n      navbar: props.NavbarTheme ? props.NavbarTheme : '#382933',//1\n      // navbar: props.NavbarTheme ? props.NavbarTheme : '#331B40',//2\n      // navbar: props.NavbarTheme ? props.NavbarTheme : '#825855',//3 x\n      // navbar: props.NavbarTheme ? props.NavbarTheme : '#0A164e',//4 x\n    },\n  })\n\n  const DarkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n\n      background: {\n        paper: props.PaperTheme ? props.PaperTheme : '#424242',\n        default: props.DefaultTheme ? props.DefaultTheme : Defatult_BackgroundDefault_Dr\n      },\n\n      primary: {\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#3f51b5',\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#382933',//1\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#1a1a2e',//1.2\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#1F2833',//1.5\n        // main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#252525',//v1\n        main: props.PrimaryMainTheme ? props.PrimaryMainTheme : '#222222',//v2\n        contrastText: props.ContrastTextTheme ? props.ContrastTextTheme : '#ffffff',\n      },\n\n      secondary: {\n        main: props.SecondaryMainTheme ? props.SecondaryMainTheme : '#c51162',\n        contrastText: props.ContrastTextTheme ? props.ContrastTextTheme : '#ffffff',\n      },\n\n      text: {\n        primary: props.TextPrimaryTheme ? props.TextPrimaryTheme : '#ffffff',\n        secondary: props.TextSecondaryTheme ? props.TextSecondaryTheme : 'rgba(255, 255, 255, 0.7)',\n      },\n    },\n    custom: {\n      navbar: props.NavbarTheme ? props.NavbarTheme : '#000000',//1\n    },\n  })\n\n  const isDarkMode = props.isDarkMode ? props.isDarkMode : false\n  const KasirQuisDarkMode = props.auth.isDarkMode === true || props.auth.isDarkMode === \"true\" ? true : false\n  const isNavbarHide = props.isNavbarHide ? true : false\n  // const PaperAsDefault = props.DefaultTheme ? props.DefaultTheme : isDarkMode ? Defatult_BackgroundDefault_Dr : Defatult_BackgroundDefault_Lg\n  // const PaperAsDefault = null\n  const minScreenWidth = MUI_Initial_State.units.minWidth_first\n  const isFullNavbar = useMediaQuery(`(min-width:${minScreenWidth}px)`)\n\n\n  return (\n    <Fragment>\n\n      <ThemeProvider\n        theme={\n          LocationURL === KasirQuValue ? (\n            (props.auth.token && props.auth.isAuth) ?\n              (KasirQuisDarkMode ? { ...DarkTheme, ...MUI_theme_auth_dark } : { ...LightTheme, ...MUI_theme_auth_light })\n              : (KasirQuisDarkMode ? { ...DarkTheme, ...MUI_theme_unauth_dark } : { ...LightTheme, ...MUI_theme_unauth_light })\n          ) : (\n              isDarkMode ? { ...DarkTheme } : { ...LightTheme }\n            )\n        }\n      >\n        <CssBaseline />\n        <Router>\n          {/* <Paper\n            variant=\"outlined\"\n            style={{ margin: 0, padding: 0, backgroundColor: PaperAsDefault, border: 'none' }}\n          > */}\n          {!isNavbarHide ?\n            <Navbar />\n            : null\n          }\n          {\n            LocationURL === KasirQuValue ? (\n              <Fragment>\n                {(props.auth.token && props.auth.isAuth) ?\n                  <KasirQuNavbar\n                    isDarkMode={KasirQuisDarkMode}\n                  />\n                  : null}\n                <KasirQuMessages />\n              </Fragment>\n            ) : LocationURL === PrestasiQuValue ? (\n              <Fragment>\n                <PrestasiQuNavbar />\n                <PrestasiQuMassages />\n              </Fragment>\n            ) : null\n          }\n\n          {\n            LocationURL === KasirQuValue ? (\n              <Container\n                style={(props.auth.token && props.auth.isAuth) ? (\n                  (isFullNavbar) ?\n                    MUI_st__Container_SideNav\n                    : MUI_st__Container_FlatNav\n                ) : null}\n              >\n                <BaseRouter />\n              </Container>\n            ) : LocationURL === PrestasiQuValue ? (\n              <PrestasiQuTheme>\n                <div className=\"container custom-container-setting\">\n                  <BaseRouter />\n                </div>\n              </PrestasiQuTheme>\n\n              // <BaseRouter />\n            ) : <BaseRouter />\n          }\n          {/* </Paper> */}\n        </Router>\n      </ThemeProvider>\n    </Fragment >\n  )\n}\n\nconst mapStateToProps = state => ({\n  ////// Generic\n  isDarkMode: state.Generic_Display.isDarkMode,\n  isNavbarHide: state.Generic_Display.isNavbarHide,\n  NavbarTheme: state.Generic_Display.NavbarTheme,\n  PaperTheme: state.Generic_Display.PaperTheme,\n  DefaultTheme: state.Generic_Display.DefaultTheme,\n  PrimaryMainTheme: state.Generic_Display.PrimaryMainTheme,\n  SecondaryMainTheme: state.Generic_Display.SecondaryMainTheme,\n  ContrastTextTheme: state.Generic_Display.ContrastTextTheme,\n  TextPrimaryTheme: state.Generic_Display.TextPrimaryTheme,\n  TextSecondaryTheme: state.Generic_Display.TextSecondaryTheme,\n  ////// Generic\n  auth: state.KasirQu_Auth,\n\n})\n\nexport default connect(mapStateToProps)(App)","import React from 'react'\n\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\n\nimport * as serviceWorker from './serviceWorker'\n\n// import 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport './Components/Cluster/KasirQu/src/index.css'\n// import './Components/Cluster/PrestasiQu/src/index.css'\n\nimport App from './App'\nimport Store from './Store/Store'\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// )\n\nconst app = (\n  <Provider store={Store} >\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","module.exports = __webpack_public_path__ + \"static/media/logo.2999d921.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_1.65d5c064.png\";"],"sourceRoot":""}